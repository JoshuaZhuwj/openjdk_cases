CompileCommand: print *.test_* bool print = true
WARNING: Using incubator modules: jdk.incubator.vector

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1) 5180  552       3       TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 (86 bytes)
 total in heap  [0x0000ffff90941990,0x0000ffff909441c0] = 10288
 relocation     [0x0000ffff90941b00,0x0000ffff90941dd0] = 720
 main code      [0x0000ffff90941e00,0x0000ffff909434a0] = 5792
 stub code      [0x0000ffff909434a0,0x0000ffff909435f8] = 344
 oops           [0x0000ffff909435f8,0x0000ffff90943658] = 96
 metadata       [0x0000ffff90943658,0x0000ffff90943810] = 440
 scopes data    [0x0000ffff90943810,0x0000ffff90943cc0] = 1200
 scopes pcs     [0x0000ffff90943cc0,0x0000ffff90944150] = 1168
 dependencies   [0x0000ffff90944150,0x0000ffff90944188] = 56
 nul chk table  [0x0000ffff90944188,0x0000ffff909441c0] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;;  block B66 [0, 0]
  0x0000ffff90941e00:   nop
  0x0000ffff90941e04:   nop
  0x0000ffff90941e08:   nop
  0x0000ffff90941e0c:   nop
  0x0000ffff90941e10:   nop
  0x0000ffff90941e14:   nop
  0x0000ffff90941e18:   nop
  0x0000ffff90941e1c:   nop
  0x0000ffff90941e20:   nop
[Entry Point]
  # {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[F'
  # parm1:    c_rarg3:c_rarg3 
                        = '[LOuter;'
  #           [sp+0x150]  (sp of caller)
  0x0000ffff90941e24:   ldr	w8, [x1, #8]
  0x0000ffff90941e28:   ldr	w10, [x9, #8]
  0x0000ffff90941e2c:   cmp	w8, w10
  0x0000ffff90941e30:   b.eq	0x0000ffff90941e40  // b.none
  0x0000ffff90941e34:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff90941e38:   add	x8, x8, #0xec0
  0x0000ffff90941e3c:   br	x8
[Verified Entry Point]
  0x0000ffff90941e40:   nop
  0x0000ffff90941e44:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff90941e48:   str	xzr, [x9]
  0x0000ffff90941e4c:   sub	sp, sp, #0x150
  0x0000ffff90941e50:   stp	x29, x30, [sp, #320]
  0x0000ffff90941e54:   ldrb	w8, [x28, #1208]
  0x0000ffff90941e58:   cbz	x8, 0x0000ffff90941e70
 ;; 0xFFFFAECE431C
  0x0000ffff90941e5c:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff90941e60:   movk	x8, #0xaece, lsl #16
  0x0000ffff90941e64:   movk	x8, #0xffff, lsl #32
  0x0000ffff90941e68:   mov	x0, x28
  0x0000ffff90941e6c:   blr	x8
  0x0000ffff90941e70:   ldr	w8, 0x0000ffff90941eac
 ;; 0xFFFFB0903FF8
  0x0000ffff90941e74:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff90941e78:   movk	x9, #0xb090, lsl #16
  0x0000ffff90941e7c:   movk	x9, #0xffff, lsl #32
  0x0000ffff90941e80:   orr	x9, x9, x8, lsr #32
  0x0000ffff90941e84:   ldr	w9, [x9]
  0x0000ffff90941e88:   orr	x8, x8, x9, lsl #32
  0x0000ffff90941e8c:   ldr	x9, [x28, #88]
  0x0000ffff90941e90:   cmp	x8, x9
  0x0000ffff90941e94:   b.eq	0x0000ffff90941eb0  // b.none
 ;; 0xFFFF97C263C0
  0x0000ffff90941e98:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff90941e9c:   movk	x8, #0x97c2, lsl #16
  0x0000ffff90941ea0:   movk	x8, #0xffff, lsl #32
  0x0000ffff90941ea4:   blr	x8
  0x0000ffff90941ea8:   b	0x0000ffff90941eb0
  0x0000ffff90941eac:   udf	#58640
  0x0000ffff90941eb0:   str	x2, [sp, #248]
  0x0000ffff90941eb4:   str	x3, [sp, #256]
 ;; 0xFFF92841CCA8
  0x0000ffff90941eb8:   mov	x4, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90941ebc:   movk	x4, #0x2841, lsl #16
  0x0000ffff90941ec0:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90941ec4:   ldr	w5, [x4, #292]
  0x0000ffff90941ec8:   add	w5, w5, #0x2
  0x0000ffff90941ecc:   str	w5, [x4, #292]
  0x0000ffff90941ed0:   and	w5, w5, #0x7fe
  0x0000ffff90941ed4:   cmp	w5, #0x0
 ;;   22 branch [EQ]   [CounterOverflowStub: 0x0000fff8f404c3d0]
  0x0000ffff90941ed8:   b.eq	0x0000ffff90942f44  // b.none;*getstatic SPECIES_128 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@0 (line 46)
 ;;  block B67 [0, 0]
 ;;  block B0 [0, 13]
 ;; 0xFFF92841CCA8
  0x0000ffff90941edc:   mov	x1, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90941ee0:   movk	x1, #0x2841, lsl #16
  0x0000ffff90941ee4:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90941ee8:   ldr	x8, [x1, #368]
  0x0000ffff90941eec:   add	x8, x8, #0x1
  0x0000ffff90941ef0:   str	x8, [x1, #368]
 ;; 0xFFF928218CE8
  0x0000ffff90941ef4:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90941ef8:   movk	x1, #0x2821, lsl #16
  0x0000ffff90941efc:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90941f00:   ldr	w4, [x1, #292]
  0x0000ffff90941f04:   add	w4, w4, #0x2
  0x0000ffff90941f08:   str	w4, [x1, #292]
  0x0000ffff90941f0c:   and	w4, w4, #0x1ffffe
  0x0000ffff90941f10:   cmp	w4, #0x0
 ;;   48 branch [EQ]   [CounterOverflowStub: 0x0000fff8f404cd60]
  0x0000ffff90941f14:   b.eq	0x0000ffff90942f6c  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff90941f18:   mov	x6, #0xe9b8                	// #59832
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8})}
  0x0000ffff90941f1c:   movk	x6, #0xa8, lsl #16
  0x0000ffff90941f20:   movk	x6, #0x800, lsl #32
  0x0000ffff90941f24:   mov	x1, x6
 ;; 0xFFF928218CE8
  0x0000ffff90941f28:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90941f2c:   movk	x4, #0x2821, lsl #16
  0x0000ffff90941f30:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90941f34:   ldr	x8, [x4, #416]
  0x0000ffff90941f38:   add	x8, x8, #0x1
  0x0000ffff90941f3c:   str	x8, [x4, #416]
  0x0000ffff90941f40:   mov	x1, x6
 ;; 0xFFF928218CE8
  0x0000ffff90941f44:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90941f48:   movk	x4, #0x2821, lsl #16
  0x0000ffff90941f4c:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90941f50:   ldr	w1, [x1, #8]
  0x0000ffff90941f54:   eor	x1, x1, #0xfc00000000
  0x0000ffff90941f58:   add	x9, x4, #0x1d8
  0x0000ffff90941f5c:   ldr	x8, [x9]
  0x0000ffff90941f60:   cmp	x1, x8
  0x0000ffff90941f64:   b.ne	0x0000ffff90941f78  // b.any
  0x0000ffff90941f68:   ldr	x8, [x4, #480]
  0x0000ffff90941f6c:   add	x8, x8, #0x1
  0x0000ffff90941f70:   str	x8, [x4, #480]
  0x0000ffff90941f74:   b	0x0000ffff90941fe4
  0x0000ffff90941f78:   add	x9, x4, #0x1e8
  0x0000ffff90941f7c:   ldr	x8, [x9]
  0x0000ffff90941f80:   cmp	x1, x8
  0x0000ffff90941f84:   b.ne	0x0000ffff90941f98  // b.any
  0x0000ffff90941f88:   ldr	x8, [x4, #496]
  0x0000ffff90941f8c:   add	x8, x8, #0x1
  0x0000ffff90941f90:   str	x8, [x4, #496]
  0x0000ffff90941f94:   b	0x0000ffff90941fe4
  0x0000ffff90941f98:   add	x9, x4, #0x1d8
  0x0000ffff90941f9c:   ldr	x8, [x9]
  0x0000ffff90941fa0:   cbnz	x8, 0x0000ffff90941fb8
  0x0000ffff90941fa4:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90941fa8:   orr	x8, xzr, #0x1
  0x0000ffff90941fac:   add	x9, x4, #0x1e0
  0x0000ffff90941fb0:   str	x8, [x9]
  0x0000ffff90941fb4:   b	0x0000ffff90941fe4
  0x0000ffff90941fb8:   add	x9, x4, #0x1e8
  0x0000ffff90941fbc:   ldr	x8, [x9]
  0x0000ffff90941fc0:   cbnz	x8, 0x0000ffff90941fd8
  0x0000ffff90941fc4:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90941fc8:   orr	x8, xzr, #0x1
  0x0000ffff90941fcc:   add	x9, x4, #0x1f0
  0x0000ffff90941fd0:   str	x8, [x9]
  0x0000ffff90941fd4:   b	0x0000ffff90941fe4
  0x0000ffff90941fd8:   ldr	x8, [x4, #464]
  0x0000ffff90941fdc:   add	x8, x8, #0x1
  0x0000ffff90941fe0:   str	x8, [x4, #464]
 ;; 0xFFF928218CE8
  0x0000ffff90941fe4:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90941fe8:   movk	x1, #0x2821, lsl #16
  0x0000ffff90941fec:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90941ff0:   ldr	x8, [x1, #512]
  0x0000ffff90941ff4:   add	x8, x8, #0x1
  0x0000ffff90941ff8:   str	x8, [x1, #512]
 ;; 0xFFF928212E20
  0x0000ffff90941ffc:   mov	x1, #0x2e20                	// #11808
                                                            ;   {metadata(method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942000:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942004:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942008:   ldr	w4, [x1, #292]
  0x0000ffff9094200c:   add	w4, w4, #0x2
  0x0000ffff90942010:   str	w4, [x1, #292]
  0x0000ffff90942014:   and	w4, w4, #0x1ffffe
  0x0000ffff90942018:   cmp	w4, #0x0
 ;;   76 branch [EQ]   [CounterOverflowStub: 0x0000fff8f807d658]
  0x0000ffff9094201c:   b.eq	0x0000ffff90942f94  // b.none
 ;; 0xFFF928212E20
  0x0000ffff90942020:   mov	x1, #0x2e20                	// #11808
                                                            ;   {metadata(method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942024:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942028:   movk	x1, #0xfff9, lsl #32
  0x0000ffff9094202c:   ldr	x8, [x1, #368]
  0x0000ffff90942030:   add	x8, x8, #0x1
  0x0000ffff90942034:   str	x8, [x1, #368]
 ;; 0xFFF928218CE8
  0x0000ffff90942038:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094203c:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942040:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942044:   ldr	x8, [x1, #528]
  0x0000ffff90942048:   add	x8, x8, #0x1
  0x0000ffff9094204c:   str	x8, [x1, #528]
 ;; 0xFFF928207F98
  0x0000ffff90942050:   mov	x1, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90942054:   movk	x1, #0x2820, lsl #16
  0x0000ffff90942058:   movk	x1, #0xfff9, lsl #32
  0x0000ffff9094205c:   ldr	w4, [x1, #292]
  0x0000ffff90942060:   add	w4, w4, #0x2
  0x0000ffff90942064:   str	w4, [x1, #292]
  0x0000ffff90942068:   and	w4, w4, #0x1ffffe
  0x0000ffff9094206c:   cmp	w4, #0x0
 ;;   96 branch [EQ]   [CounterOverflowStub: 0x0000fff8f807dd90]
  0x0000ffff90942070:   b.eq	0x0000ffff90942fbc  // b.none
 ;; 0xFFF928207F98
  0x0000ffff90942074:   mov	x1, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90942078:   movk	x1, #0x2820, lsl #16
  0x0000ffff9094207c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942080:   ldr	x8, [x1, #416]
  0x0000ffff90942084:   add	x8, x8, #0x1
  0x0000ffff90942088:   str	x8, [x1, #416]
 ;; 0xFFF928400C90
  0x0000ffff9094208c:   mov	x1, #0xc90                 	// #3216
                                                            ;   {metadata(method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff90942090:   movk	x1, #0x2840, lsl #16
  0x0000ffff90942094:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942098:   ldr	w4, [x1, #292]
  0x0000ffff9094209c:   add	w4, w4, #0x2
  0x0000ffff909420a0:   str	w4, [x1, #292]
  0x0000ffff909420a4:   and	w4, w4, #0x1ffffe
  0x0000ffff909420a8:   cmp	w4, #0x0
 ;;  114 branch [EQ]   [CounterOverflowStub: 0x0000fff8f807e660]
  0x0000ffff909420ac:   b.eq	0x0000ffff90942fe4  // b.none
 ;; 0xFFF928218CE8
  0x0000ffff909420b0:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909420b4:   movk	x1, #0x2821, lsl #16
  0x0000ffff909420b8:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909420bc:   add	x1, x1, #0x220
 ;; 0xFFF8F8022238
  0x0000ffff909420c0:   mov	x7, #0x29c8                	// #10696
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8})}
  0x0000ffff909420c4:   movk	x7, #0xaa, lsl #16
  0x0000ffff909420c8:   movk	x7, #0x800, lsl #32
 ;; emit_profile_type {
  0x0000ffff909420cc:   mov	x4, x7
  0x0000ffff909420d0:   cbnz	x4, 0x0000ffff909420e0
 ;; unexpected null obj
  0x0000ffff909420d4:   dcps1	#0xdeae
  0x0000ffff909420d8:   .inst	0xaf7e5ef0 ; undefined
  0x0000ffff909420dc:   udf	#65535
  0x0000ffff909420e0:   ldr	w4, [x4, #8]
  0x0000ffff909420e4:   eor	x4, x4, #0xfc00000000
 ;; 0xFC01054180
  0x0000ffff909420e8:   mov	x8, #0x4180                	// #16768
                                                            ;   {metadata('jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180')}
  0x0000ffff909420ec:   movk	x8, #0x105, lsl #16
  0x0000ffff909420f0:   movk	x8, #0xfc, lsl #32
  0x0000ffff909420f4:   eor	x8, x4, x8
  0x0000ffff909420f8:   cbz	x8, 0x0000ffff90942108
 ;; exact klass and actual klass differ
  0x0000ffff909420fc:   dcps1	#0xdeae
  0x0000ffff90942100:   .inst	0xaf7e5f08 ; undefined
  0x0000ffff90942104:   udf	#65535
 ;; 0xFC01054180
  0x0000ffff90942108:   mov	x4, #0x4180                	// #16768
                                                            ;   {metadata('jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180')}
  0x0000ffff9094210c:   movk	x4, #0x105, lsl #16
  0x0000ffff90942110:   movk	x4, #0xfc, lsl #32
  0x0000ffff90942114:   ldr	x9, [x1]
  0x0000ffff90942118:   eor	x4, x4, x9
  0x0000ffff9094211c:   and	x8, x4, #0xfffffffffffffffc
  0x0000ffff90942120:   cbz	x8, 0x0000ffff90942164
  0x0000ffff90942124:   tbnz	w4, #1, 0x0000ffff90942164
  0x0000ffff90942128:   cbz	x9, 0x0000ffff9094215c
  0x0000ffff9094212c:   cmp	x9, #0x1
  0x0000ffff90942130:   b.eq	0x0000ffff9094215c  // b.none
  0x0000ffff90942134:   dmb	ishld
  0x0000ffff90942138:   eor	x4, x4, x9
  0x0000ffff9094213c:   ldr	x9, [x1]
  0x0000ffff90942140:   eor	x4, x4, x9
  0x0000ffff90942144:   and	x8, x4, #0xfffffffffffffffc
  0x0000ffff90942148:   cbz	x8, 0x0000ffff90942164
  0x0000ffff9094214c:   ldr	x9, [x1]
  0x0000ffff90942150:   orr	x9, x9, #0x2
  0x0000ffff90942154:   str	x9, [x1]
  0x0000ffff90942158:   b	0x0000ffff90942164
  0x0000ffff9094215c:   str	x4, [x1]
  0x0000ffff90942160:   and	x4, x4, #0xfffffffffffffffe
 ;; } emit_profile_type
 ;; 0xFFF928218CE8
  0x0000ffff90942164:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942168:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094216c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942170:   ldr	x8, [x1, #560]
  0x0000ffff90942174:   add	x8, x8, #0x1
  0x0000ffff90942178:   str	x8, [x1, #560]
 ;; 0xFFF8F8022210
  0x0000ffff9094217c:   mov	x1, #0xea28                	// #59944
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff90942180:   movk	x1, #0xa8, lsl #16
  0x0000ffff90942184:   movk	x1, #0x800, lsl #32
 ;; 0xFFF8F8022220
  0x0000ffff90942188:   mov	x4, #0x570                 	// #1392
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000000570} = float)}
  0x0000ffff9094218c:   movk	x4, #0x0, lsl #16
  0x0000ffff90942190:   movk	x4, #0x800, lsl #32
  0x0000ffff90942194:   mov	x2, x4
 ;; 0x4
  0x0000ffff90942198:   orr	w3, wzr, #0x4
 ;; 0x0
  0x0000ffff9094219c:   mov	x4, #0x0                   	// #0
 ;; 0x0
  0x0000ffff909421a0:   movz	w5, #0x0, lsl #16           ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff909421a4:   bl	0x0000ffff909434a0          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
                                                            ;   {static_call}
  0x0000ffff909421a8:   nop                                 ;   {other}
  0x0000ffff909421ac:   movk	xzr, #0x818
  0x0000ffff909421b0:   movk	xzr, #0x0                   ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
 ;; 0xFFF928218CE8
  0x0000ffff909421b4:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909421b8:   movk	x4, #0x2821, lsl #16
  0x0000ffff909421bc:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909421c0:   cbnz	x0, 0x0000ffff909421d4
  0x0000ffff909421c4:   ldrb	w8, [x4, #569]
  0x0000ffff909421c8:   orr	x8, x8, #0x1
  0x0000ffff909421cc:   strb	w8, [x4, #569]
  0x0000ffff909421d0:   b	0x0000ffff9094228c
  0x0000ffff909421d4:   ldr	w3, [x0, #8]
  0x0000ffff909421d8:   eor	x3, x3, #0xfc00000000
  0x0000ffff909421dc:   add	x9, x4, #0x248
  0x0000ffff909421e0:   ldr	x8, [x9]
  0x0000ffff909421e4:   cmp	x3, x8
  0x0000ffff909421e8:   b.ne	0x0000ffff909421fc  // b.any
  0x0000ffff909421ec:   ldr	x8, [x4, #592]
  0x0000ffff909421f0:   add	x8, x8, #0x1
  0x0000ffff909421f4:   str	x8, [x4, #592]
  0x0000ffff909421f8:   b	0x0000ffff90942268
  0x0000ffff909421fc:   add	x9, x4, #0x258
  0x0000ffff90942200:   ldr	x8, [x9]
  0x0000ffff90942204:   cmp	x3, x8
  0x0000ffff90942208:   b.ne	0x0000ffff9094221c  // b.any
  0x0000ffff9094220c:   ldr	x8, [x4, #608]
  0x0000ffff90942210:   add	x8, x8, #0x1
  0x0000ffff90942214:   str	x8, [x4, #608]
  0x0000ffff90942218:   b	0x0000ffff90942268
  0x0000ffff9094221c:   add	x9, x4, #0x248
  0x0000ffff90942220:   ldr	x8, [x9]
  0x0000ffff90942224:   cbnz	x8, 0x0000ffff9094223c
  0x0000ffff90942228:   str	x3, [x9]
 ;; 0x1
  0x0000ffff9094222c:   orr	x8, xzr, #0x1
  0x0000ffff90942230:   add	x9, x4, #0x250
  0x0000ffff90942234:   str	x8, [x9]
  0x0000ffff90942238:   b	0x0000ffff90942268
  0x0000ffff9094223c:   add	x9, x4, #0x258
  0x0000ffff90942240:   ldr	x8, [x9]
  0x0000ffff90942244:   cbnz	x8, 0x0000ffff9094225c
  0x0000ffff90942248:   str	x3, [x9]
 ;; 0x1
  0x0000ffff9094224c:   orr	x8, xzr, #0x1
  0x0000ffff90942250:   add	x9, x4, #0x260
  0x0000ffff90942254:   str	x8, [x9]
  0x0000ffff90942258:   b	0x0000ffff90942268
  0x0000ffff9094225c:   ldr	x8, [x4, #576]
  0x0000ffff90942260:   add	x8, x8, #0x1
  0x0000ffff90942264:   str	x8, [x4, #576]
 ;; 0xFC01042278
  0x0000ffff90942268:   mov	x3, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff9094226c:   movk	x3, #0x104, lsl #16
  0x0000ffff90942270:   movk	x3, #0xfc, lsl #32
  0x0000ffff90942274:   ldr	w4, [x0, #8]
  0x0000ffff90942278:   eor	x4, x4, #0xfc00000000
  0x0000ffff9094227c:   ldr	x8, [x4, #96]
  0x0000ffff90942280:   cmp	x3, x8
  0x0000ffff90942284:   b.ne	0x0000ffff9094300c  // b.any
  0x0000ffff90942288:   b	0x0000ffff9094228c
  0x0000ffff9094228c:   mov	x1, x0                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@32 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
 ;; 0x0
  0x0000ffff90942290:   movz	w10, #0x0, lsl #16          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;;  block B1 [13, 17]
  0x0000ffff90942294:   str	x1, [sp, #264]
  0x0000ffff90942298:   ldr	x2, [sp, #248]
  0x0000ffff9094229c:   ldr	w4, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff90943028
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
  0x0000ffff909422a0:   cmp	w10, w4
 ;; 0xFFF92841CCA8
  0x0000ffff909422a4:   mov	x5, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909422a8:   movk	x5, #0x2841, lsl #16
  0x0000ffff909422ac:   movk	x5, #0xfff9, lsl #32
 ;; 0x180
  0x0000ffff909422b0:   orr	x8, xzr, #0x180
 ;; 0x190
  0x0000ffff909422b4:   mov	x9, #0x190                 	// #400
  0x0000ffff909422b8:   csel	x6, x8, x9, ge  // ge = tcont
  0x0000ffff909422bc:   ldr	x7, [x5, x6]
  0x0000ffff909422c0:   add	x7, x7, #0x1
  0x0000ffff909422c4:   str	x7, [x5, x6]
 ;;  174 branch [GE]   [B3] 
  0x0000ffff909422c8:   b.ge	0x0000ffff90942f2c  // b.tcont;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
 ;;  block B2 [20, 3]
 ;; 0xFFF92841CCA8
  0x0000ffff909422cc:   mov	x5, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909422d0:   movk	x5, #0x2841, lsl #16
  0x0000ffff909422d4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909422d8:   ldr	x8, [x5, #416]
  0x0000ffff909422dc:   add	x8, x8, #0x1
  0x0000ffff909422e0:   str	x8, [x5, #416]
 ;; 0xFFF928213768
  0x0000ffff909422e4:   mov	x5, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909422e8:   movk	x5, #0x2821, lsl #16
  0x0000ffff909422ec:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909422f0:   ldr	w6, [x5, #292]
  0x0000ffff909422f4:   add	w6, w6, #0x2
  0x0000ffff909422f8:   str	w6, [x5, #292]
  0x0000ffff909422fc:   and	w6, w6, #0x1ffffe
  0x0000ffff90942300:   cmp	w6, #0x0
 ;;  194 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8080be0]
  0x0000ffff90942304:   b.eq	0x0000ffff90943040  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff90942308:   mov	x5, #0xe9b8                	// #59832
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8})}
  0x0000ffff9094230c:   movk	x5, #0xa8, lsl #16
  0x0000ffff90942310:   movk	x5, #0x800, lsl #32
 ;; 0xFFF928213768
  0x0000ffff90942314:   mov	x6, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942318:   movk	x6, #0x2821, lsl #16
  0x0000ffff9094231c:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90942320:   ldr	w5, [x5, #8]
  0x0000ffff90942324:   eor	x5, x5, #0xfc00000000
  0x0000ffff90942328:   add	x9, x6, #0x178
  0x0000ffff9094232c:   ldr	x8, [x9]
  0x0000ffff90942330:   cmp	x5, x8
  0x0000ffff90942334:   b.ne	0x0000ffff90942348  // b.any
  0x0000ffff90942338:   ldr	x8, [x6, #384]
  0x0000ffff9094233c:   add	x8, x8, #0x1
  0x0000ffff90942340:   str	x8, [x6, #384]
  0x0000ffff90942344:   b	0x0000ffff909423b4
  0x0000ffff90942348:   add	x9, x6, #0x188
  0x0000ffff9094234c:   ldr	x8, [x9]
  0x0000ffff90942350:   cmp	x5, x8
  0x0000ffff90942354:   b.ne	0x0000ffff90942368  // b.any
  0x0000ffff90942358:   ldr	x8, [x6, #400]
  0x0000ffff9094235c:   add	x8, x8, #0x1
  0x0000ffff90942360:   str	x8, [x6, #400]
  0x0000ffff90942364:   b	0x0000ffff909423b4
  0x0000ffff90942368:   add	x9, x6, #0x178
  0x0000ffff9094236c:   ldr	x8, [x9]
  0x0000ffff90942370:   cbnz	x8, 0x0000ffff90942388
  0x0000ffff90942374:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90942378:   orr	x8, xzr, #0x1
  0x0000ffff9094237c:   add	x9, x6, #0x180
  0x0000ffff90942380:   str	x8, [x9]
  0x0000ffff90942384:   b	0x0000ffff909423b4
  0x0000ffff90942388:   add	x9, x6, #0x188
  0x0000ffff9094238c:   ldr	x8, [x9]
  0x0000ffff90942390:   cbnz	x8, 0x0000ffff909423a8
  0x0000ffff90942394:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90942398:   orr	x8, xzr, #0x1
  0x0000ffff9094239c:   add	x9, x6, #0x190
  0x0000ffff909423a0:   str	x8, [x9]
  0x0000ffff909423a4:   b	0x0000ffff909423b4
  0x0000ffff909423a8:   ldr	x8, [x6, #368]
  0x0000ffff909423ac:   add	x8, x8, #0x1
  0x0000ffff909423b0:   str	x8, [x6, #368]
 ;; 0xFFF928213768
  0x0000ffff909423b4:   mov	x5, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909423b8:   movk	x5, #0x2821, lsl #16
  0x0000ffff909423bc:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909423c0:   ldr	x8, [x5, #416]
  0x0000ffff909423c4:   add	x8, x8, #0x1
  0x0000ffff909423c8:   str	x8, [x5, #416]
 ;; 0xFFF9282139F8
  0x0000ffff909423cc:   mov	x5, #0x39f8                	// #14840
                                                            ;   {metadata(method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff909423d0:   movk	x5, #0x2821, lsl #16
  0x0000ffff909423d4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909423d8:   ldr	w6, [x5, #292]
  0x0000ffff909423dc:   add	w6, w6, #0x2
  0x0000ffff909423e0:   str	w6, [x5, #292]
  0x0000ffff909423e4:   and	w6, w6, #0x1ffffe
  0x0000ffff909423e8:   cmp	w6, #0x0
 ;;  218 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8082500]
  0x0000ffff909423ec:   b.eq	0x0000ffff90943068  // b.none
 ;;  block B24 [37, 12]
 ;; 0xFFF9282139F8
  0x0000ffff909423f0:   mov	x5, #0x39f8                	// #14840
                                                            ;   {metadata(method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff909423f4:   movk	x5, #0x2821, lsl #16
  0x0000ffff909423f8:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909423fc:   ldr	x8, [x5, #464]
  0x0000ffff90942400:   add	x8, x8, #0x1
  0x0000ffff90942404:   str	x8, [x5, #464]
  0x0000ffff90942408:   sub	w4, w4, #0x3
 ;; 0xFFF928212238
  0x0000ffff9094240c:   mov	x5, #0x2238                	// #8760
                                                            ;   {metadata(method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff90942410:   movk	x5, #0x2821, lsl #16
  0x0000ffff90942414:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90942418:   ldr	w6, [x5, #292]
  0x0000ffff9094241c:   add	w6, w6, #0x2
  0x0000ffff90942420:   str	w6, [x5, #292]
  0x0000ffff90942424:   and	w6, w6, #0x1ffffe
  0x0000ffff90942428:   cmp	w6, #0x0
 ;;  242 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8082dc0]
  0x0000ffff9094242c:   b.eq	0x0000ffff90943090  // b.none
 ;; 0xFFF928212238
  0x0000ffff90942430:   mov	x5, #0x2238                	// #8760
                                                            ;   {metadata(method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff90942434:   movk	x5, #0x2821, lsl #16
  0x0000ffff90942438:   movk	x5, #0xfff9, lsl #32
  0x0000ffff9094243c:   ldr	x8, [x5, #368]
  0x0000ffff90942440:   add	x8, x8, #0x1
  0x0000ffff90942444:   str	x8, [x5, #368]
  0x0000ffff90942448:   mov	x5, xzr
 ;; 0x0
  0x0000ffff9094244c:   movz	w5, #0x0, lsl #16
  0x0000ffff90942450:   cmp	w10, w5
 ;;  254 branch [LT]   [DeoptimizeStub: 0x0000fff8f8083460] [bci:3]
  0x0000ffff90942454:   b.lt	0x0000ffff909430b8  // b.tstop
  0x0000ffff90942458:   cmp	w10, w4
 ;;  258 branch [GE]   [DeoptimizeStub: 0x0000fff8f8083860] [bci:3]
  0x0000ffff9094245c:   b.ge	0x0000ffff909430d8  // b.tcont
  0x0000ffff90942460:   mov	x4, x10                     ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;;  block B20 [12, 6]
 ;; 0xFFF8F8022208
  0x0000ffff90942464:   mov	x5, #0xe9b8                	// #59832
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8})}
  0x0000ffff90942468:   movk	x5, #0xa8, lsl #16
  0x0000ffff9094246c:   movk	x5, #0x800, lsl #32
  0x0000ffff90942470:   mov	x6, x5
 ;; 0xFFF928213768
  0x0000ffff90942474:   mov	x7, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942478:   movk	x7, #0x2821, lsl #16
  0x0000ffff9094247c:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90942480:   ldr	x8, [x7, #480]
  0x0000ffff90942484:   add	x8, x8, #0x1
  0x0000ffff90942488:   str	x8, [x7, #480]
 ;; 0xFFF92820A4D0
  0x0000ffff9094248c:   mov	x6, #0xa4d0                	// #42192
                                                            ;   {metadata(method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff90942490:   movk	x6, #0x2820, lsl #16
  0x0000ffff90942494:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90942498:   ldr	w7, [x6, #292]
  0x0000ffff9094249c:   add	w7, w7, #0x2
  0x0000ffff909424a0:   str	w7, [x6, #292]
  0x0000ffff909424a4:   and	w7, w7, #0x1ffffe
  0x0000ffff909424a8:   cmp	w7, #0x0
 ;;  284 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8084048]
  0x0000ffff909424ac:   b.eq	0x0000ffff909430f8  // b.none
 ;; 0xFFF92820A4D0
  0x0000ffff909424b0:   mov	x6, #0xa4d0                	// #42192
                                                            ;   {metadata(method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff909424b4:   movk	x6, #0x2820, lsl #16
  0x0000ffff909424b8:   movk	x6, #0xfff9, lsl #32
  0x0000ffff909424bc:   ldr	x8, [x6, #368]
  0x0000ffff909424c0:   add	x8, x8, #0x1
  0x0000ffff909424c4:   str	x8, [x6, #368]
 ;; 0xFFF92820A6C0
  0x0000ffff909424c8:   mov	x5, #0xa6c0                	// #42688
                                                            ;   {metadata(method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff909424cc:   movk	x5, #0x2820, lsl #16
  0x0000ffff909424d0:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909424d4:   ldr	w6, [x5, #292]
  0x0000ffff909424d8:   add	w6, w6, #0x2
  0x0000ffff909424dc:   str	w6, [x5, #292]
  0x0000ffff909424e0:   and	w6, w6, #0x1ffffe
  0x0000ffff909424e4:   cmp	w6, #0x0
 ;;  304 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8084898]
  0x0000ffff909424e8:   b.eq	0x0000ffff90943120  // b.none
 ;; 0xFFF92820A6C0
  0x0000ffff909424ec:   mov	x5, #0xa6c0                	// #42688
                                                            ;   {metadata(method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff909424f0:   movk	x5, #0x2820, lsl #16
  0x0000ffff909424f4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909424f8:   ldr	x6, [x5, #384]
  0x0000ffff909424fc:   add	x6, x6, #0x1
  0x0000ffff90942500:   str	x6, [x5, #384]              ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;;  block B30 [4, 22]
  0x0000ffff90942504:   str	w10, [sp, #272]
 ;;  block B28 [22, 27]
 ;; 0xFFF8F8022248
  0x0000ffff90942508:   mov	x5, #0xf6a8                	// #63144
                                                            ;   {oop(a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8})}
  0x0000ffff9094250c:   movk	x5, #0xab, lsl #16
  0x0000ffff90942510:   movk	x5, #0x800, lsl #32
  0x0000ffff90942514:   mov	x6, x5
 ;; 0xFFF928213768
  0x0000ffff90942518:   mov	x7, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094251c:   movk	x7, #0x2821, lsl #16
  0x0000ffff90942520:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90942524:   ldr	x8, [x7, #528]
  0x0000ffff90942528:   add	x8, x8, #0x1
  0x0000ffff9094252c:   str	x8, [x7, #528]
 ;; 0xFFF928213C38
  0x0000ffff90942530:   mov	x6, #0x3c38                	// #15416
                                                            ;   {metadata(method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff90942534:   movk	x6, #0x2821, lsl #16
  0x0000ffff90942538:   movk	x6, #0xfff9, lsl #32
  0x0000ffff9094253c:   ldr	w7, [x6, #292]
  0x0000ffff90942540:   add	w7, w7, #0x2
  0x0000ffff90942544:   str	w7, [x6, #292]
  0x0000ffff90942548:   and	w7, w7, #0x1ffffe
  0x0000ffff9094254c:   cmp	w7, #0x0
 ;;  346 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4131768]
  0x0000ffff90942550:   b.eq	0x0000ffff90943148  // b.none
  0x0000ffff90942554:   mov	x6, x5
 ;; 0xFFF928213C38
  0x0000ffff90942558:   mov	x7, #0x3c38                	// #15416
                                                            ;   {metadata(method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff9094255c:   movk	x7, #0x2821, lsl #16
  0x0000ffff90942560:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90942564:   ldr	x8, [x7, #368]
  0x0000ffff90942568:   add	x8, x8, #0x1
  0x0000ffff9094256c:   str	x8, [x7, #368]
 ;; 0xFFF928213DE8
  0x0000ffff90942570:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942574:   movk	x6, #0x2821, lsl #16
  0x0000ffff90942578:   movk	x6, #0xfff9, lsl #32
  0x0000ffff9094257c:   ldr	w7, [x6, #292]
  0x0000ffff90942580:   add	w7, w7, #0x2
  0x0000ffff90942584:   str	w7, [x6, #292]
  0x0000ffff90942588:   and	w7, w7, #0x1ffffe
  0x0000ffff9094258c:   cmp	w7, #0x0
 ;;  366 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4131fb8]
  0x0000ffff90942590:   b.eq	0x0000ffff90943170  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90942594:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942598:   movk	x6, #0x2821, lsl #16
  0x0000ffff9094259c:   movk	x6, #0xfff9, lsl #32
  0x0000ffff909425a0:   ldr	x8, [x6, #368]
  0x0000ffff909425a4:   add	x8, x8, #0x1
  0x0000ffff909425a8:   str	x8, [x6, #368]
 ;; 0xFFF92820AE38
  0x0000ffff909425ac:   mov	x5, #0xae38                	// #44600
                                                            ;   {metadata(method data for {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff909425b0:   movk	x5, #0x2820, lsl #16
  0x0000ffff909425b4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff909425b8:   ldr	w6, [x5, #292]
  0x0000ffff909425bc:   add	w6, w6, #0x2
  0x0000ffff909425c0:   str	w6, [x5, #292]
  0x0000ffff909425c4:   and	w6, w6, #0x1ffffe
  0x0000ffff909425c8:   cmp	w6, #0x0
 ;;  386 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4132698]
  0x0000ffff909425cc:   b.eq	0x0000ffff90943198  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff909425d0:   mov	x11, #0xe9b8                	// #59832
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8})}
  0x0000ffff909425d4:   movk	x11, #0xa8, lsl #16
  0x0000ffff909425d8:   movk	x11, #0x800, lsl #32
  0x0000ffff909425dc:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff909425e0:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909425e4:   movk	x6, #0x2821, lsl #16
  0x0000ffff909425e8:   movk	x6, #0xfff9, lsl #32
  0x0000ffff909425ec:   ldr	x8, [x6, #416]
  0x0000ffff909425f0:   add	x8, x8, #0x1
  0x0000ffff909425f4:   str	x8, [x6, #416]
  0x0000ffff909425f8:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff909425fc:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942600:   movk	x6, #0x2821, lsl #16
  0x0000ffff90942604:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90942608:   ldr	x8, [x6, #464]
  0x0000ffff9094260c:   add	x8, x8, #0x1
  0x0000ffff90942610:   str	x8, [x6, #464]
 ;; 0xFFF92820AB10
  0x0000ffff90942614:   mov	x5, #0xab10                	// #43792
                                                            ;   {metadata(method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff90942618:   movk	x5, #0x2820, lsl #16
  0x0000ffff9094261c:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90942620:   ldr	w6, [x5, #292]
  0x0000ffff90942624:   add	w6, w6, #0x2
  0x0000ffff90942628:   str	w6, [x5, #292]
  0x0000ffff9094262c:   and	w6, w6, #0x1ffffe
  0x0000ffff90942630:   cmp	w6, #0x0
 ;;  412 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41330a8]
  0x0000ffff90942634:   b.eq	0x0000ffff909431c0  // b.none
  0x0000ffff90942638:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff9094263c:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942640:   movk	x6, #0x2821, lsl #16
  0x0000ffff90942644:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90942648:   ldr	x8, [x6, #512]
  0x0000ffff9094264c:   add	x8, x8, #0x1
  0x0000ffff90942650:   str	x8, [x6, #512]
 ;; 0xFFF928213DE8
  0x0000ffff90942654:   mov	x5, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942658:   movk	x5, #0x2821, lsl #16
  0x0000ffff9094265c:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90942660:   ldr	x8, [x5, #560]
  0x0000ffff90942664:   add	x8, x8, #0x1
  0x0000ffff90942668:   str	x8, [x5, #560]
 ;; 0xFFF9282140D8
  0x0000ffff9094266c:   mov	x5, #0x40d8                	// #16600
                                                            ;   {metadata(method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942670:   movk	x5, #0x2821, lsl #16
  0x0000ffff90942674:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90942678:   ldr	w6, [x5, #292]
  0x0000ffff9094267c:   add	w6, w6, #0x2
  0x0000ffff90942680:   str	w6, [x5, #292]
  0x0000ffff90942684:   and	w6, w6, #0x1ffffe
  0x0000ffff90942688:   cmp	w6, #0x0
 ;;  434 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4133800]
  0x0000ffff9094268c:   b.eq	0x0000ffff909431e8  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90942690:   mov	x5, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942694:   movk	x5, #0x2821, lsl #16
  0x0000ffff90942698:   movk	x5, #0xfff9, lsl #32
  0x0000ffff9094269c:   ldr	x8, [x5, #576]
  0x0000ffff909426a0:   add	x8, x8, #0x1
  0x0000ffff909426a4:   str	x8, [x5, #576]
  0x0000ffff909426a8:   sxtw	x0, w4
  0x0000ffff909426ac:   lsl	x4, x0, #2
  0x0000ffff909426b0:   add	x5, x4, #0x10
 ;; 0xFFF928207F98
  0x0000ffff909426b4:   mov	x4, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff909426b8:   movk	x4, #0x2820, lsl #16
  0x0000ffff909426bc:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909426c0:   ldr	w6, [x4, #292]
  0x0000ffff909426c4:   add	w6, w6, #0x2
  0x0000ffff909426c8:   str	w6, [x4, #292]
  0x0000ffff909426cc:   and	w6, w6, #0x1ffffe
  0x0000ffff909426d0:   cmp	w6, #0x0
 ;;  458 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41340a8]
  0x0000ffff909426d4:   b.eq	0x0000ffff90943210  // b.none
 ;; 0xFFF928207F98
  0x0000ffff909426d8:   mov	x4, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff909426dc:   movk	x4, #0x2820, lsl #16
  0x0000ffff909426e0:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909426e4:   ldr	x8, [x4, #416]
  0x0000ffff909426e8:   add	x8, x8, #0x1
  0x0000ffff909426ec:   str	x8, [x4, #416]
 ;; 0xFFF928400C90
  0x0000ffff909426f0:   mov	x4, #0xc90                 	// #3216
                                                            ;   {metadata(method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff909426f4:   movk	x4, #0x2840, lsl #16
  0x0000ffff909426f8:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909426fc:   ldr	w6, [x4, #292]
  0x0000ffff90942700:   add	w6, w6, #0x2
  0x0000ffff90942704:   str	w6, [x4, #292]
  0x0000ffff90942708:   and	w6, w6, #0x1ffffe
  0x0000ffff9094270c:   cmp	w6, #0x0
 ;;  476 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4134b98]
  0x0000ffff90942710:   b.eq	0x0000ffff90943238  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90942714:   mov	x4, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942718:   movk	x4, #0x2821, lsl #16
  0x0000ffff9094271c:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90942720:   ldr	x8, [x4, #608]
  0x0000ffff90942724:   add	x8, x8, #0x1
  0x0000ffff90942728:   str	x8, [x4, #608]
 ;; 0xFFF8F8022210
  0x0000ffff9094272c:   mov	x4, #0xea28                	// #59944
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff90942730:   movk	x4, #0xa8, lsl #16
  0x0000ffff90942734:   movk	x4, #0x800, lsl #32
 ;; 0xFFF8F8022220
  0x0000ffff90942738:   mov	x6, #0x570                 	// #1392
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000000570} = float)}
  0x0000ffff9094273c:   movk	x6, #0x0, lsl #16
  0x0000ffff90942740:   movk	x6, #0x800, lsl #32
 ;; 0xFFF8F8022258
  0x0000ffff90942744:   mov	x12, #0xb8b0                	// #47280
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0})}
  0x0000ffff90942748:   movk	x12, #0xac, lsl #16
  0x0000ffff9094274c:   movk	x12, #0x800, lsl #32
  0x0000ffff90942750:   mov	x1, x4
  0x0000ffff90942754:   mov	x14, x2
  0x0000ffff90942758:   mov	x2, x6
 ;; 0x4
  0x0000ffff9094275c:   orr	w3, wzr, #0x4
  0x0000ffff90942760:   mov	x4, x14
 ;; 0x0
  0x0000ffff90942764:   movz	w6, #0x0, lsl #16
  0x0000ffff90942768:   mov	x7, x14
  0x0000ffff9094276c:   str	x11, [sp]
  0x0000ffff90942770:   str	x12, [sp, #8]               ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff90942774:   bl	0x0000ffff909434b0          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {static_call}
  0x0000ffff90942778:   nop                                 ;   {other}
  0x0000ffff9094277c:   movk	xzr, #0xde8
  0x0000ffff90942780:   movk	xzr, #0x100                 ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; 0xFFF928213DE8
  0x0000ffff90942784:   mov	x3, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942788:   movk	x3, #0x2821, lsl #16
  0x0000ffff9094278c:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90942790:   cbnz	x0, 0x0000ffff909427a4
  0x0000ffff90942794:   ldrb	w8, [x3, #617]
  0x0000ffff90942798:   orr	x8, x8, #0x1
  0x0000ffff9094279c:   strb	w8, [x3, #617]
  0x0000ffff909427a0:   b	0x0000ffff9094285c
  0x0000ffff909427a4:   ldr	w2, [x0, #8]
  0x0000ffff909427a8:   eor	x2, x2, #0xfc00000000
  0x0000ffff909427ac:   add	x9, x3, #0x278
  0x0000ffff909427b0:   ldr	x8, [x9]
  0x0000ffff909427b4:   cmp	x2, x8
  0x0000ffff909427b8:   b.ne	0x0000ffff909427cc  // b.any
  0x0000ffff909427bc:   ldr	x8, [x3, #640]
  0x0000ffff909427c0:   add	x8, x8, #0x1
  0x0000ffff909427c4:   str	x8, [x3, #640]
  0x0000ffff909427c8:   b	0x0000ffff90942838
  0x0000ffff909427cc:   add	x9, x3, #0x288
  0x0000ffff909427d0:   ldr	x8, [x9]
  0x0000ffff909427d4:   cmp	x2, x8
  0x0000ffff909427d8:   b.ne	0x0000ffff909427ec  // b.any
  0x0000ffff909427dc:   ldr	x8, [x3, #656]
  0x0000ffff909427e0:   add	x8, x8, #0x1
  0x0000ffff909427e4:   str	x8, [x3, #656]
  0x0000ffff909427e8:   b	0x0000ffff90942838
  0x0000ffff909427ec:   add	x9, x3, #0x278
  0x0000ffff909427f0:   ldr	x8, [x9]
  0x0000ffff909427f4:   cbnz	x8, 0x0000ffff9094280c
  0x0000ffff909427f8:   str	x2, [x9]
 ;; 0x1
  0x0000ffff909427fc:   orr	x8, xzr, #0x1
  0x0000ffff90942800:   add	x9, x3, #0x280
  0x0000ffff90942804:   str	x8, [x9]
  0x0000ffff90942808:   b	0x0000ffff90942838
  0x0000ffff9094280c:   add	x9, x3, #0x288
  0x0000ffff90942810:   ldr	x8, [x9]
  0x0000ffff90942814:   cbnz	x8, 0x0000ffff9094282c
  0x0000ffff90942818:   str	x2, [x9]
 ;; 0x1
  0x0000ffff9094281c:   orr	x8, xzr, #0x1
  0x0000ffff90942820:   add	x9, x3, #0x290
  0x0000ffff90942824:   str	x8, [x9]
  0x0000ffff90942828:   b	0x0000ffff90942838
  0x0000ffff9094282c:   ldr	x8, [x3, #624]
  0x0000ffff90942830:   add	x8, x8, #0x1
  0x0000ffff90942834:   str	x8, [x3, #624]
 ;; 0xFC01042278
  0x0000ffff90942838:   mov	x2, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff9094283c:   movk	x2, #0x104, lsl #16
  0x0000ffff90942840:   movk	x2, #0xfc, lsl #32
  0x0000ffff90942844:   ldr	w3, [x0, #8]
  0x0000ffff90942848:   eor	x3, x3, #0xfc00000000
  0x0000ffff9094284c:   ldr	x8, [x3, #96]
  0x0000ffff90942850:   cmp	x2, x8
  0x0000ffff90942854:   b.ne	0x0000ffff90943260  // b.any
  0x0000ffff90942858:   b	0x0000ffff9094285c          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;;  block B16 [27, 1]
 ;; 0xFFF8F8022278
  0x0000ffff9094285c:   mov	x1, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff90942860:   movk	x1, #0xa4, lsl #16
  0x0000ffff90942864:   movk	x1, #0x800, lsl #32
 ;; 0xFFF92841CCA8
  0x0000ffff90942868:   mov	x2, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff9094286c:   movk	x2, #0x2841, lsl #16
  0x0000ffff90942870:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942874:   ldr	w1, [x1, #8]
  0x0000ffff90942878:   eor	x1, x1, #0xfc00000000
  0x0000ffff9094287c:   add	x9, x2, #0x1b8
  0x0000ffff90942880:   ldr	x8, [x9]
  0x0000ffff90942884:   cmp	x1, x8
  0x0000ffff90942888:   b.ne	0x0000ffff9094289c  // b.any
  0x0000ffff9094288c:   ldr	x8, [x2, #448]
  0x0000ffff90942890:   add	x8, x8, #0x1
  0x0000ffff90942894:   str	x8, [x2, #448]
  0x0000ffff90942898:   b	0x0000ffff90942908
  0x0000ffff9094289c:   add	x9, x2, #0x1c8
  0x0000ffff909428a0:   ldr	x8, [x9]
  0x0000ffff909428a4:   cmp	x1, x8
  0x0000ffff909428a8:   b.ne	0x0000ffff909428bc  // b.any
  0x0000ffff909428ac:   ldr	x8, [x2, #464]
  0x0000ffff909428b0:   add	x8, x8, #0x1
  0x0000ffff909428b4:   str	x8, [x2, #464]
  0x0000ffff909428b8:   b	0x0000ffff90942908
  0x0000ffff909428bc:   add	x9, x2, #0x1b8
  0x0000ffff909428c0:   ldr	x8, [x9]
  0x0000ffff909428c4:   cbnz	x8, 0x0000ffff909428dc
  0x0000ffff909428c8:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909428cc:   orr	x8, xzr, #0x1
  0x0000ffff909428d0:   add	x9, x2, #0x1c0
  0x0000ffff909428d4:   str	x8, [x9]
  0x0000ffff909428d8:   b	0x0000ffff90942908
  0x0000ffff909428dc:   add	x9, x2, #0x1c8
  0x0000ffff909428e0:   ldr	x8, [x9]
  0x0000ffff909428e4:   cbnz	x8, 0x0000ffff909428fc
  0x0000ffff909428e8:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909428ec:   orr	x8, xzr, #0x1
  0x0000ffff909428f0:   add	x9, x2, #0x1d0
  0x0000ffff909428f4:   str	x8, [x9]
  0x0000ffff909428f8:   b	0x0000ffff90942908
  0x0000ffff909428fc:   ldr	x8, [x2, #432]
  0x0000ffff90942900:   add	x8, x8, #0x1
  0x0000ffff90942904:   str	x8, [x2, #432]
 ;; 0xFFF9282127F0
  0x0000ffff90942908:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff9094290c:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942910:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942914:   ldr	w2, [x1, #292]
  0x0000ffff90942918:   add	w2, w2, #0x2
  0x0000ffff9094291c:   str	w2, [x1, #292]
  0x0000ffff90942920:   and	w2, w2, #0x1ffffe
  0x0000ffff90942924:   cmp	w2, #0x0
 ;;  536 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4136298]
  0x0000ffff90942928:   b.eq	0x0000ffff9094327c  // b.none
 ;; 0xFFF9282127F0
  0x0000ffff9094292c:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90942930:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942934:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942938:   ldr	x8, [x1, #368]
  0x0000ffff9094293c:   add	x8, x8, #0x1
  0x0000ffff90942940:   str	x8, [x1, #368]
 ;; 0xFFF9282129C8
  0x0000ffff90942944:   mov	x1, #0x29c8                	// #10696
                                                            ;   {metadata(method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff90942948:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094294c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942950:   ldr	w2, [x1, #292]
  0x0000ffff90942954:   add	w2, w2, #0x2
  0x0000ffff90942958:   str	w2, [x1, #292]
  0x0000ffff9094295c:   and	w2, w2, #0x1ffffe
  0x0000ffff90942960:   cmp	w2, #0x0
 ;;  554 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4136a88]
  0x0000ffff90942964:   b.eq	0x0000ffff909432a4  // b.none
 ;; 0xFFF9282129C8
  0x0000ffff90942968:   mov	x1, #0x29c8                	// #10696
                                                            ;   {metadata(method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff9094296c:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942970:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942974:   ldr	x2, [x1, #368]
  0x0000ffff90942978:   add	x2, x2, #0x1
  0x0000ffff9094297c:   str	x2, [x1, #368]              ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
                                                            ; - java.util.random.RandomGenerator::nextInt@1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
 ;;  block B57 [14, 4]
  0x0000ffff90942980:   str	x0, [sp, #280]
 ;;  block B54 [4, 41]
 ;; 0xFFF9282127F0
  0x0000ffff90942984:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90942988:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094298c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942990:   ldr	x8, [x1, #384]
  0x0000ffff90942994:   add	x8, x8, #0x1
  0x0000ffff90942998:   str	x8, [x1, #384]
 ;; 0xFFF8F8022278
  0x0000ffff9094299c:   mov	x1, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff909429a0:   movk	x1, #0xa4, lsl #16
  0x0000ffff909429a4:   movk	x1, #0x800, lsl #32
 ;; 0x400
  0x0000ffff909429a8:   orr	w2, wzr, #0x400             ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff909429ac:   bl	0x0000ffff909434c0          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop [280]=Oop }
                                                            ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
                                                            ;   {static_call}
  0x0000ffff909429b0:   nop                                 ;   {other}
  0x0000ffff909429b4:   movk	xzr, #0x1020
  0x0000ffff909429b8:   movk	xzr, #0x200                 ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff909429bc:   ldr	x4, [sp, #280]
 ;; merged ldr pair
  0x0000ffff909429c0:   ldp	x3, x1, [sp, #256]
 ;;  block B52 [41, 82]
  0x0000ffff909429c4:   ldr	w2, [x3, #12]               ; implicit exception: dispatches to 0x0000ffff909432cc
  0x0000ffff909429c8:   cmp	w0, w2
 ;;  594 branch [AE]   [RangeCheckStub: 0x0000fff8f41378e8] [bci:41]
  0x0000ffff909429cc:   b.cs	0x0000ffff909432e4  // b.hs, b.nlast
  0x0000ffff909429d0:   lsl	w2, w0, #3
  0x0000ffff909429d4:   add	x2, x2, #0x10
  0x0000ffff909429d8:   ldr	x0, [x3, x2]
  0x0000ffff909429dc:   tbz	w0, #12, 0x0000ffff909429e4 ;   {other}
  0x0000ffff909429e0:   b	0x0000ffff90943308
  0x0000ffff909429e4:   lsr	x0, x0, #16                 ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
  0x0000ffff909429e8:   ldr	x2, [x0, #16]               ; implicit exception: dispatches to 0x0000ffff90943328
  0x0000ffff909429ec:   tbz	w2, #12, 0x0000ffff909429f4 ;   {other}
  0x0000ffff909429f0:   b	0x0000ffff90943340
  0x0000ffff909429f4:   lsr	x2, x2, #16                 ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
 ;; 0xFFF92841CCA8
  0x0000ffff909429f8:   mov	x6, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909429fc:   movk	x6, #0x2841, lsl #16
  0x0000ffff90942a00:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90942a04:   cbnz	x2, 0x0000ffff90942a18
  0x0000ffff90942a08:   ldrb	w8, [x6, #473]
  0x0000ffff90942a0c:   orr	x8, x8, #0x1
  0x0000ffff90942a10:   strb	w8, [x6, #473]
  0x0000ffff90942a14:   b	0x0000ffff90942acc
  0x0000ffff90942a18:   ldr	w5, [x2, #8]
  0x0000ffff90942a1c:   eor	x5, x5, #0xfc00000000
  0x0000ffff90942a20:   add	x9, x6, #0x1e8
  0x0000ffff90942a24:   ldr	x8, [x9]
  0x0000ffff90942a28:   cmp	x5, x8
  0x0000ffff90942a2c:   b.ne	0x0000ffff90942a40  // b.any
  0x0000ffff90942a30:   ldr	x8, [x6, #496]
  0x0000ffff90942a34:   add	x8, x8, #0x1
  0x0000ffff90942a38:   str	x8, [x6, #496]
  0x0000ffff90942a3c:   b	0x0000ffff90942aac
  0x0000ffff90942a40:   add	x9, x6, #0x1f8
  0x0000ffff90942a44:   ldr	x8, [x9]
  0x0000ffff90942a48:   cmp	x5, x8
  0x0000ffff90942a4c:   b.ne	0x0000ffff90942a60  // b.any
  0x0000ffff90942a50:   ldr	x8, [x6, #512]
  0x0000ffff90942a54:   add	x8, x8, #0x1
  0x0000ffff90942a58:   str	x8, [x6, #512]
  0x0000ffff90942a5c:   b	0x0000ffff90942aac
  0x0000ffff90942a60:   add	x9, x6, #0x1e8
  0x0000ffff90942a64:   ldr	x8, [x9]
  0x0000ffff90942a68:   cbnz	x8, 0x0000ffff90942a80
  0x0000ffff90942a6c:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90942a70:   orr	x8, xzr, #0x1
  0x0000ffff90942a74:   add	x9, x6, #0x1f0
  0x0000ffff90942a78:   str	x8, [x9]
  0x0000ffff90942a7c:   b	0x0000ffff90942aac
  0x0000ffff90942a80:   add	x9, x6, #0x1f8
  0x0000ffff90942a84:   ldr	x8, [x9]
  0x0000ffff90942a88:   cbnz	x8, 0x0000ffff90942aa0
  0x0000ffff90942a8c:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90942a90:   orr	x8, xzr, #0x1
  0x0000ffff90942a94:   add	x9, x6, #0x200
  0x0000ffff90942a98:   str	x8, [x9]
  0x0000ffff90942a9c:   b	0x0000ffff90942aac
  0x0000ffff90942aa0:   ldr	x8, [x6, #480]
  0x0000ffff90942aa4:   add	x8, x8, #0x1
  0x0000ffff90942aa8:   str	x8, [x6, #480]
 ;; 0xFC01001450
  0x0000ffff90942aac:   mov	x5, #0x1450                	// #5200
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff90942ab0:   movk	x5, #0x100, lsl #16
  0x0000ffff90942ab4:   movk	x5, #0xfc, lsl #32
  0x0000ffff90942ab8:   ldr	w8, [x2, #8]
  0x0000ffff90942abc:   eor	x8, x8, #0xfc00000000
  0x0000ffff90942ac0:   cmp	x8, x5
  0x0000ffff90942ac4:   b.ne	0x0000ffff90943364  // b.any
  0x0000ffff90942ac8:   b	0x0000ffff90942acc          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
  0x0000ffff90942acc:   ldr	s0, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff90943380
                                                            ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
  0x0000ffff90942ad0:   ldr	xzr, [x1]                   ; implicit exception: dispatches to 0x0000ffff90943398
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff90942ad4:   mov	x2, x1
 ;; 0xFFF92841CCA8
  0x0000ffff90942ad8:   mov	x0, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942adc:   movk	x0, #0x2841, lsl #16
  0x0000ffff90942ae0:   movk	x0, #0xfff9, lsl #32
  0x0000ffff90942ae4:   ldr	x8, [x0, #528]
  0x0000ffff90942ae8:   add	x8, x8, #0x1
  0x0000ffff90942aec:   str	x8, [x0, #528]
 ;; 0xFFF928214E50
  0x0000ffff90942af0:   mov	x2, #0x4e50                	// #20048
                                                            ;   {metadata(method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942af4:   movk	x2, #0x2821, lsl #16
  0x0000ffff90942af8:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942afc:   ldr	w0, [x2, #292]
  0x0000ffff90942b00:   add	w0, w0, #0x2
  0x0000ffff90942b04:   str	w0, [x2, #292]
  0x0000ffff90942b08:   and	w0, w0, #0x1ffffe
  0x0000ffff90942b0c:   cmp	w0, #0x0
 ;;  630 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4138bb0]
  0x0000ffff90942b10:   b.eq	0x0000ffff909433b0  // b.none
  0x0000ffff90942b14:   mov	x2, x1
 ;; 0xFFF928214E50
  0x0000ffff90942b18:   mov	x0, #0x4e50                	// #20048
                                                            ;   {metadata(method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942b1c:   movk	x0, #0x2821, lsl #16
  0x0000ffff90942b20:   movk	x0, #0xfff9, lsl #32
  0x0000ffff90942b24:   ldr	w2, [x2, #8]
  0x0000ffff90942b28:   eor	x2, x2, #0xfc00000000
  0x0000ffff90942b2c:   add	x9, x0, #0x178
  0x0000ffff90942b30:   ldr	x8, [x9]
  0x0000ffff90942b34:   cmp	x2, x8
  0x0000ffff90942b38:   b.ne	0x0000ffff90942b4c  // b.any
  0x0000ffff90942b3c:   ldr	x8, [x0, #384]
  0x0000ffff90942b40:   add	x8, x8, #0x1
  0x0000ffff90942b44:   str	x8, [x0, #384]
  0x0000ffff90942b48:   b	0x0000ffff90942bb8
  0x0000ffff90942b4c:   add	x9, x0, #0x188
  0x0000ffff90942b50:   ldr	x8, [x9]
  0x0000ffff90942b54:   cmp	x2, x8
  0x0000ffff90942b58:   b.ne	0x0000ffff90942b6c  // b.any
  0x0000ffff90942b5c:   ldr	x8, [x0, #400]
  0x0000ffff90942b60:   add	x8, x8, #0x1
  0x0000ffff90942b64:   str	x8, [x0, #400]
  0x0000ffff90942b68:   b	0x0000ffff90942bb8
  0x0000ffff90942b6c:   add	x9, x0, #0x178
  0x0000ffff90942b70:   ldr	x8, [x9]
  0x0000ffff90942b74:   cbnz	x8, 0x0000ffff90942b8c
  0x0000ffff90942b78:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90942b7c:   orr	x8, xzr, #0x1
  0x0000ffff90942b80:   add	x9, x0, #0x180
  0x0000ffff90942b84:   str	x8, [x9]
  0x0000ffff90942b88:   b	0x0000ffff90942bb8
  0x0000ffff90942b8c:   add	x9, x0, #0x188
  0x0000ffff90942b90:   ldr	x8, [x9]
  0x0000ffff90942b94:   cbnz	x8, 0x0000ffff90942bac
  0x0000ffff90942b98:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90942b9c:   orr	x8, xzr, #0x1
  0x0000ffff90942ba0:   add	x9, x0, #0x190
  0x0000ffff90942ba4:   str	x8, [x9]
  0x0000ffff90942ba8:   b	0x0000ffff90942bb8
  0x0000ffff90942bac:   ldr	x8, [x0, #368]
  0x0000ffff90942bb0:   add	x8, x8, #0x1
  0x0000ffff90942bb4:   str	x8, [x0, #368]
 ;; 0xFFF8F80222A8
  0x0000ffff90942bb8:   mov	x0, #0x4da0                	// #19872
                                                            ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0})}
  0x0000ffff90942bbc:   movk	x0, #0xad, lsl #16
  0x0000ffff90942bc0:   movk	x0, #0x800, lsl #32
  0x0000ffff90942bc4:   mov	x2, x0
  0x0000ffff90942bc8:   mov	x3, x4                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff90942bcc:   str	x0, [sp, #288]
  0x0000ffff90942bd0:   str	s0, [sp, #276]
 ;; 0xFFFFFFFFFFFF
  0x0000ffff90942bd4:   mov	x9, #0x3400                	// #13312
  0x0000ffff90942bd8:   movk	x9, #0xf856, lsl #16
  0x0000ffff90942bdc:   movk	x9, #0xfff8, lsl #32
  0x0000ffff90942be0:   bl	0x0000ffff909434f0          ; ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {virtual_call}
  0x0000ffff90942be4:   nop                                 ;   {other}
  0x0000ffff90942be8:   movk	xzr, #0x1254
  0x0000ffff90942bec:   movk	xzr, #0x300                 ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff90942bf0:   ldr	xzr, [x0]                   ; implicit exception: dispatches to 0x0000ffff909433d8
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff90942bf4:   mov	x1, x0
 ;; 0xFFF92841CCA8
  0x0000ffff90942bf8:   mov	x2, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942bfc:   movk	x2, #0x2841, lsl #16
  0x0000ffff90942c00:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942c04:   ldr	x8, [x2, #576]
  0x0000ffff90942c08:   add	x8, x8, #0x1
  0x0000ffff90942c0c:   str	x8, [x2, #576]
 ;; 0xFFF928215038
  0x0000ffff90942c10:   mov	x1, #0x5038                	// #20536
                                                            ;   {metadata(method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942c14:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942c18:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942c1c:   ldr	w2, [x1, #292]
  0x0000ffff90942c20:   add	w2, w2, #0x2
  0x0000ffff90942c24:   str	w2, [x1, #292]
  0x0000ffff90942c28:   and	w2, w2, #0x1ffffe
  0x0000ffff90942c2c:   cmp	w2, #0x0
 ;;  668 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4139a80]
  0x0000ffff90942c30:   b.eq	0x0000ffff909433f0  // b.none
  0x0000ffff90942c34:   mov	x1, x0
 ;; 0xFFF928215038
  0x0000ffff90942c38:   mov	x2, #0x5038                	// #20536
                                                            ;   {metadata(method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942c3c:   movk	x2, #0x2821, lsl #16
  0x0000ffff90942c40:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942c44:   ldr	x8, [x2, #368]
  0x0000ffff90942c48:   add	x8, x8, #0x1
  0x0000ffff90942c4c:   str	x8, [x2, #368]
 ;; 0xFFF928215220
  0x0000ffff90942c50:   mov	x1, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942c54:   movk	x1, #0x2821, lsl #16
  0x0000ffff90942c58:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90942c5c:   ldr	w2, [x1, #292]
  0x0000ffff90942c60:   add	w2, w2, #0x2
  0x0000ffff90942c64:   str	w2, [x1, #292]
  0x0000ffff90942c68:   and	w2, w2, #0x1ffffe
  0x0000ffff90942c6c:   cmp	w2, #0x0
 ;;  688 branch [EQ]   [CounterOverflowStub: 0x0000fff8f413a140]
  0x0000ffff90942c70:   b.eq	0x0000ffff90943418  // b.none
  0x0000ffff90942c74:   mov	x1, x0
 ;; 0xFFF928215220
  0x0000ffff90942c78:   mov	x2, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942c7c:   movk	x2, #0x2821, lsl #16
  0x0000ffff90942c80:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942c84:   ldr	w1, [x1, #8]
  0x0000ffff90942c88:   eor	x1, x1, #0xfc00000000
  0x0000ffff90942c8c:   add	x9, x2, #0x178
  0x0000ffff90942c90:   ldr	x8, [x9]
  0x0000ffff90942c94:   cmp	x1, x8
  0x0000ffff90942c98:   b.ne	0x0000ffff90942cac  // b.any
  0x0000ffff90942c9c:   ldr	x8, [x2, #384]
  0x0000ffff90942ca0:   add	x8, x8, #0x1
  0x0000ffff90942ca4:   str	x8, [x2, #384]
  0x0000ffff90942ca8:   b	0x0000ffff90942d18
  0x0000ffff90942cac:   add	x9, x2, #0x188
  0x0000ffff90942cb0:   ldr	x8, [x9]
  0x0000ffff90942cb4:   cmp	x1, x8
  0x0000ffff90942cb8:   b.ne	0x0000ffff90942ccc  // b.any
  0x0000ffff90942cbc:   ldr	x8, [x2, #400]
  0x0000ffff90942cc0:   add	x8, x8, #0x1
  0x0000ffff90942cc4:   str	x8, [x2, #400]
  0x0000ffff90942cc8:   b	0x0000ffff90942d18
  0x0000ffff90942ccc:   add	x9, x2, #0x178
  0x0000ffff90942cd0:   ldr	x8, [x9]
  0x0000ffff90942cd4:   cbnz	x8, 0x0000ffff90942cec
  0x0000ffff90942cd8:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90942cdc:   orr	x8, xzr, #0x1
  0x0000ffff90942ce0:   add	x9, x2, #0x180
  0x0000ffff90942ce4:   str	x8, [x9]
  0x0000ffff90942ce8:   b	0x0000ffff90942d18
  0x0000ffff90942cec:   add	x9, x2, #0x188
  0x0000ffff90942cf0:   ldr	x8, [x9]
  0x0000ffff90942cf4:   cbnz	x8, 0x0000ffff90942d0c
  0x0000ffff90942cf8:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90942cfc:   orr	x8, xzr, #0x1
  0x0000ffff90942d00:   add	x9, x2, #0x190
  0x0000ffff90942d04:   str	x8, [x9]
  0x0000ffff90942d08:   b	0x0000ffff90942d18
  0x0000ffff90942d0c:   ldr	x8, [x2, #368]
  0x0000ffff90942d10:   add	x8, x8, #0x1
  0x0000ffff90942d14:   str	x8, [x2, #368]
  0x0000ffff90942d18:   ldr	s0, [sp, #276]
  0x0000ffff90942d1c:   mov	x1, x0                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff90942d20:   str	x0, [sp, #296]
 ;; 0xFFFFFFFFFFFF
  0x0000ffff90942d24:   mov	x9, #0x3428                	// #13352
  0x0000ffff90942d28:   movk	x9, #0xf856, lsl #16
  0x0000ffff90942d2c:   movk	x9, #0xfff8, lsl #32
  0x0000ffff90942d30:   bl	0x0000ffff90943520          ; ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop [296]=Oop }
                                                            ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {virtual_call}
  0x0000ffff90942d34:   nop                                 ;   {other}
  0x0000ffff90942d38:   movk	xzr, #0x13a4
  0x0000ffff90942d3c:   movk	xzr, #0x400                 ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff90942d40:   ldr	x2, [sp, #296]
 ;; 0xFFF928215220
  0x0000ffff90942d44:   mov	x3, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942d48:   movk	x3, #0x2821, lsl #16
  0x0000ffff90942d4c:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90942d50:   ldr	w2, [x2, #8]
  0x0000ffff90942d54:   eor	x2, x2, #0xfc00000000
  0x0000ffff90942d58:   add	x9, x3, #0x1a8
  0x0000ffff90942d5c:   ldr	x8, [x9]
  0x0000ffff90942d60:   cmp	x2, x8
  0x0000ffff90942d64:   b.ne	0x0000ffff90942d78  // b.any
  0x0000ffff90942d68:   ldr	x8, [x3, #432]
  0x0000ffff90942d6c:   add	x8, x8, #0x1
  0x0000ffff90942d70:   str	x8, [x3, #432]
  0x0000ffff90942d74:   b	0x0000ffff90942de4
  0x0000ffff90942d78:   add	x9, x3, #0x1b8
  0x0000ffff90942d7c:   ldr	x8, [x9]
  0x0000ffff90942d80:   cmp	x2, x8
  0x0000ffff90942d84:   b.ne	0x0000ffff90942d98  // b.any
  0x0000ffff90942d88:   ldr	x8, [x3, #448]
  0x0000ffff90942d8c:   add	x8, x8, #0x1
  0x0000ffff90942d90:   str	x8, [x3, #448]
  0x0000ffff90942d94:   b	0x0000ffff90942de4
  0x0000ffff90942d98:   add	x9, x3, #0x1a8
  0x0000ffff90942d9c:   ldr	x8, [x9]
  0x0000ffff90942da0:   cbnz	x8, 0x0000ffff90942db8
  0x0000ffff90942da4:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90942da8:   orr	x8, xzr, #0x1
  0x0000ffff90942dac:   add	x9, x3, #0x1b0
  0x0000ffff90942db0:   str	x8, [x9]
  0x0000ffff90942db4:   b	0x0000ffff90942de4
  0x0000ffff90942db8:   add	x9, x3, #0x1b8
  0x0000ffff90942dbc:   ldr	x8, [x9]
  0x0000ffff90942dc0:   cbnz	x8, 0x0000ffff90942dd8
  0x0000ffff90942dc4:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90942dc8:   orr	x8, xzr, #0x1
  0x0000ffff90942dcc:   add	x9, x3, #0x1c0
  0x0000ffff90942dd0:   str	x8, [x9]
  0x0000ffff90942dd4:   b	0x0000ffff90942de4
  0x0000ffff90942dd8:   ldr	x8, [x3, #416]
  0x0000ffff90942ddc:   add	x8, x8, #0x1
  0x0000ffff90942de0:   str	x8, [x3, #416]
  0x0000ffff90942de4:   ldr	x2, [sp, #288]
  0x0000ffff90942de8:   mov	x3, x0
  0x0000ffff90942dec:   ldr	x1, [sp, #296]              ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xFFFFFFFFFFFF
  0x0000ffff90942df0:   mov	x9, #0x3450                	// #13392
  0x0000ffff90942df4:   movk	x9, #0xf856, lsl #16
  0x0000ffff90942df8:   movk	x9, #0xfff8, lsl #32
  0x0000ffff90942dfc:   bl	0x0000ffff90943550          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {virtual_call}
  0x0000ffff90942e00:   nop                                 ;   {other}
  0x0000ffff90942e04:   movk	xzr, #0x1470
  0x0000ffff90942e08:   movk	xzr, #0x500                 ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xFFF8F8022208
  0x0000ffff90942e0c:   mov	x1, #0xe9b8                	// #59832
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8})}
  0x0000ffff90942e10:   movk	x1, #0xa8, lsl #16
  0x0000ffff90942e14:   movk	x1, #0x800, lsl #32
 ;; 0xFFF92841CCA8
  0x0000ffff90942e18:   mov	x2, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942e1c:   movk	x2, #0x2841, lsl #16
  0x0000ffff90942e20:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942e24:   ldr	w1, [x1, #8]
  0x0000ffff90942e28:   eor	x1, x1, #0xfc00000000
  0x0000ffff90942e2c:   add	x9, x2, #0x278
  0x0000ffff90942e30:   ldr	x8, [x9]
  0x0000ffff90942e34:   cmp	x1, x8
  0x0000ffff90942e38:   b.ne	0x0000ffff90942e4c  // b.any
  0x0000ffff90942e3c:   ldr	x8, [x2, #640]
  0x0000ffff90942e40:   add	x8, x8, #0x1
  0x0000ffff90942e44:   str	x8, [x2, #640]
  0x0000ffff90942e48:   b	0x0000ffff90942eb8
  0x0000ffff90942e4c:   add	x9, x2, #0x288
  0x0000ffff90942e50:   ldr	x8, [x9]
  0x0000ffff90942e54:   cmp	x1, x8
  0x0000ffff90942e58:   b.ne	0x0000ffff90942e6c  // b.any
  0x0000ffff90942e5c:   ldr	x8, [x2, #656]
  0x0000ffff90942e60:   add	x8, x8, #0x1
  0x0000ffff90942e64:   str	x8, [x2, #656]
  0x0000ffff90942e68:   b	0x0000ffff90942eb8
  0x0000ffff90942e6c:   add	x9, x2, #0x278
  0x0000ffff90942e70:   ldr	x8, [x9]
  0x0000ffff90942e74:   cbnz	x8, 0x0000ffff90942e8c
  0x0000ffff90942e78:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90942e7c:   orr	x8, xzr, #0x1
  0x0000ffff90942e80:   add	x9, x2, #0x280
  0x0000ffff90942e84:   str	x8, [x9]
  0x0000ffff90942e88:   b	0x0000ffff90942eb8
  0x0000ffff90942e8c:   add	x9, x2, #0x288
  0x0000ffff90942e90:   ldr	x8, [x9]
  0x0000ffff90942e94:   cbnz	x8, 0x0000ffff90942eac
  0x0000ffff90942e98:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90942e9c:   orr	x8, xzr, #0x1
  0x0000ffff90942ea0:   add	x9, x2, #0x290
  0x0000ffff90942ea4:   str	x8, [x9]
  0x0000ffff90942ea8:   b	0x0000ffff90942eb8
  0x0000ffff90942eac:   ldr	x8, [x2, #624]
  0x0000ffff90942eb0:   add	x8, x8, #0x1
  0x0000ffff90942eb4:   str	x8, [x2, #624]
  0x0000ffff90942eb8:   ldr	w10, [sp, #272]
  0x0000ffff90942ebc:   add	w1, w10, #0x4
 ;; 0xFFF92841CCA8
  0x0000ffff90942ec0:   mov	x2, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942ec4:   movk	x2, #0x2841, lsl #16
  0x0000ffff90942ec8:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942ecc:   ldr	w3, [x2, #296]
  0x0000ffff90942ed0:   add	w3, w3, #0x2
  0x0000ffff90942ed4:   str	w3, [x2, #296]
  0x0000ffff90942ed8:   and	w3, w3, #0x3ffe
  0x0000ffff90942edc:   cmp	w3, #0x0
 ;;  738 branch [EQ]   [CounterOverflowStub: 0x0000fff8f413b4f0]
  0x0000ffff90942ee0:   b.eq	0x0000ffff90943440  // b.none;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff90942ee4:   ldr	x8, [x28, #1184]            ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff90942ee8:   ldr	wzr, [x8]                   ;   {poll}
  0x0000ffff90942eec:   ldrb	w8, [x28, #1208]
  0x0000ffff90942ef0:   cbz	x8, 0x0000ffff90942f08
 ;; 0xFFFFAECE431C
  0x0000ffff90942ef4:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff90942ef8:   movk	x8, #0xaece, lsl #16
  0x0000ffff90942efc:   movk	x8, #0xffff, lsl #32
  0x0000ffff90942f00:   mov	x0, x28
  0x0000ffff90942f04:   blr	x8
 ;; 0xFFF92841CCA8
  0x0000ffff90942f08:   mov	x2, #0xcca8                	// #52392
                                                            ;   {metadata(method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942f0c:   movk	x2, #0x2841, lsl #16
  0x0000ffff90942f10:   movk	x2, #0xfff9, lsl #32
  0x0000ffff90942f14:   ldr	x3, [x2, #672]
  0x0000ffff90942f18:   add	x3, x3, #0x1
  0x0000ffff90942f1c:   str	x3, [x2, #672]
  0x0000ffff90942f20:   mov	x10, x1
  0x0000ffff90942f24:   mov	x1, x0
 ;;  756 branch [AL]   [B1] 
  0x0000ffff90942f28:   b	0x0000ffff90942294          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
 ;;  block B3 [85, 85]
  0x0000ffff90942f2c:   ldp	x29, x30, [sp, #320]
  0x0000ffff90942f30:   add	sp, sp, #0x150
  0x0000ffff90942f34:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff90942f38:   cmp	sp, x8
  0x0000ffff90942f3c:   b.hi	0x0000ffff90943468  // b.pmore
  0x0000ffff90942f40:   ret
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401C58
  0x0000ffff90942f44:   mov	x8, #0x1c58                	// #7256
                                                            ;   {metadata({method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90942f48:   movk	x8, #0x2840, lsl #16
  0x0000ffff90942f4c:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90942f50:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90942f54:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90942f58:   str	x8, [sp]
  0x0000ffff90942f5c:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90942f60:   add	x8, x8, #0x8c0
  0x0000ffff90942f64:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
  0x0000ffff90942f68:   b	0x0000ffff90941edc
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804E2E8
  0x0000ffff90942f6c:   mov	x8, #0xe2e8                	// #58088
                                                            ;   {metadata({method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942f70:   movk	x8, #0x2804, lsl #16
  0x0000ffff90942f74:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90942f78:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90942f7c:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90942f80:   str	x8, [sp]
  0x0000ffff90942f84:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90942f88:   add	x8, x8, #0x8c0
  0x0000ffff90942f8c:   blr	x8                          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::zero@-1 (line 551)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff90942f90:   b	0x0000ffff90941f18
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804DDE8
  0x0000ffff90942f94:   mov	x8, #0xdde8                	// #56808
                                                            ;   {metadata({method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90942f98:   movk	x8, #0x2804, lsl #16
  0x0000ffff90942f9c:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90942fa0:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90942fa4:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90942fa8:   str	x8, [sp]
  0x0000ffff90942fac:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90942fb0:   add	x8, x8, #0x8c0
  0x0000ffff90942fb4:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
                                                            ; - jdk.incubator.vector.FloatVector::zero@19 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff90942fb8:   b	0x0000ffff90942020
 ;; CounterOverflowStub slow case
 ;; 0xFC000ABC28
  0x0000ffff90942fbc:   mov	x8, #0xbc28                	// #48168
                                                            ;   {metadata({method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90942fc0:   movk	x8, #0xa, lsl #16
  0x0000ffff90942fc4:   movk	x8, #0xfc, lsl #32
  0x0000ffff90942fc8:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90942fcc:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90942fd0:   str	x8, [sp]
  0x0000ffff90942fd4:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90942fd8:   add	x8, x8, #0x8c0
  0x0000ffff90942fdc:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.FloatVector::zero@24 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff90942fe0:   b	0x0000ffff90942074
 ;; CounterOverflowStub slow case
 ;; 0xFFF928400A28
  0x0000ffff90942fe4:   mov	x8, #0xa28                 	// #2600
                                                            ;   {metadata({method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff90942fe8:   movk	x8, #0x2840, lsl #16
  0x0000ffff90942fec:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90942ff0:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90942ff4:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90942ff8:   str	x8, [sp]
  0x0000ffff90942ffc:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943000:   add	x8, x8, #0x8c0
  0x0000ffff90943004:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.FloatVector::zero@24 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff90943008:   b	0x0000ffff909420b0
 ;; SimpleExceptionStub slow case
  0x0000ffff9094300c:   mov	x8, x0
  0x0000ffff90943010:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90943014:   add	x9, x9, #0xdc0
  0x0000ffff90943018:   blr	x9                          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@32 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
 ;; should not reach here
  0x0000ffff9094301c:   dcps1	#0xdeae
  0x0000ffff90943020:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90943024:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90943028:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff9094302c:   add	x8, x8, #0x9c0
  0x0000ffff90943030:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
 ;; should not reach here
  0x0000ffff90943034:   dcps1	#0xdeae
  0x0000ffff90943038:   .inst	0xaf7bb248 ; undefined
  0x0000ffff9094303c:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280561C0
  0x0000ffff90943040:   mov	x8, #0x61c0                	// #25024
                                                            ;   {metadata({method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90943044:   movk	x8, #0x2805, lsl #16
  0x0000ffff90943048:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094304c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943050:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943054:   str	x8, [sp]
  0x0000ffff90943058:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094305c:   add	x8, x8, #0x8c0
  0x0000ffff90943060:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff90943064:   b	0x0000ffff90942308
 ;; CounterOverflowStub slow case
 ;; 0xFFF9281E5020
  0x0000ffff90943068:   mov	x8, #0x5020                	// #20512
                                                            ;   {metadata({method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff9094306c:   movk	x8, #0x281e, lsl #16
  0x0000ffff90943070:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90943074:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943078:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094307c:   str	x8, [sp]
  0x0000ffff90943080:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943084:   add	x8, x8, #0x8c0
  0x0000ffff90943088:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff9094308c:   b	0x0000ffff909423f0
 ;; CounterOverflowStub slow case
 ;; 0xFC00056388
  0x0000ffff90943090:   mov	x8, #0x6388                	// #25480
                                                            ;   {metadata({method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff90943094:   movk	x8, #0x5, lsl #16
  0x0000ffff90943098:   movk	x8, #0xfc, lsl #32
  0x0000ffff9094309c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909430a0:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909430a4:   str	x8, [sp]
  0x0000ffff909430a8:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909430ac:   add	x8, x8, #0x8c0
  0x0000ffff909430b0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::checkIndex@-1 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff909430b4:   b	0x0000ffff90942430
 ;; DeoptimizeStub slow case
 ;; 0xFFFFFFFFFFFFFFE4
  0x0000ffff909430b8:   mov	x8, #0xffffffffffffffe4    	// #-28
  0x0000ffff909430bc:   str	x8, [sp]
  0x0000ffff909430c0:   adrp	x8, 0x0000ffff97d56000      ;   {runtime_call deoptimize Runtime1 stub}
  0x0000ffff909430c4:   add	x8, x8, #0x9c0
  0x0000ffff909430c8:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; should not reach here
  0x0000ffff909430cc:   dcps1	#0xdeae
  0x0000ffff909430d0:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909430d4:   udf	#65535
 ;; DeoptimizeStub slow case
 ;; 0xFFFFFFFFFFFFFFE4
  0x0000ffff909430d8:   mov	x8, #0xffffffffffffffe4    	// #-28
  0x0000ffff909430dc:   str	x8, [sp]
  0x0000ffff909430e0:   adrp	x8, 0x0000ffff97d56000      ;   {runtime_call deoptimize Runtime1 stub}
  0x0000ffff909430e4:   add	x8, x8, #0x9c0
  0x0000ffff909430e8:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; should not reach here
  0x0000ffff909430ec:   dcps1	#0xdeae
  0x0000ffff909430f0:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909430f4:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280F3720
  0x0000ffff909430f8:   mov	x8, #0x3720                	// #14112
                                                            ;   {metadata({method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff909430fc:   movk	x8, #0x280f, lsl #16
  0x0000ffff90943100:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90943104:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943108:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094310c:   str	x8, [sp]
  0x0000ffff90943110:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943114:   add	x8, x8, #0x8c0
  0x0000ffff90943118:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff9094311c:   b	0x0000ffff909424b0
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280FA960
  0x0000ffff90943120:   mov	x8, #0xa960                	// #43360
                                                            ;   {metadata({method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff90943124:   movk	x8, #0x280f, lsl #16
  0x0000ffff90943128:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094312c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943130:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943134:   str	x8, [sp]
  0x0000ffff90943138:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094313c:   add	x8, x8, #0x8c0
  0x0000ffff90943140:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff90943144:   b	0x0000ffff909424ec
 ;; CounterOverflowStub slow case
 ;; 0xFFF928120F48
  0x0000ffff90943148:   mov	x8, #0xf48                 	// #3912
                                                            ;   {metadata({method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff9094314c:   movk	x8, #0x2812, lsl #16
  0x0000ffff90943150:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90943154:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943158:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094315c:   str	x8, [sp]
  0x0000ffff90943160:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943164:   add	x8, x8, #0x8c0
  0x0000ffff90943168:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@-1 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff9094316c:   b	0x0000ffff90942554
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280572D0
  0x0000ffff90943170:   mov	x8, #0x72d0                	// #29392
                                                            ;   {metadata({method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90943174:   movk	x8, #0x2805, lsl #16
  0x0000ffff90943178:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094317c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943180:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943184:   str	x8, [sp]
  0x0000ffff90943188:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094318c:   add	x8, x8, #0x8c0
  0x0000ffff90943190:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff90943194:   b	0x0000ffff90942594
 ;; CounterOverflowStub slow case
 ;; 0xFFF92811D190
  0x0000ffff90943198:   mov	x8, #0xd190                	// #53648
                                                            ;   {metadata({method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector')}
  0x0000ffff9094319c:   movk	x8, #0x2811, lsl #16
  0x0000ffff909431a0:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909431a4:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909431a8:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909431ac:   str	x8, [sp]
  0x0000ffff909431b0:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909431b4:   add	x8, x8, #0x8c0
  0x0000ffff909431b8:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.Float128Vector::vspecies@-1 (line 86)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff909431bc:   b	0x0000ffff909425d0
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280F2B08
  0x0000ffff909431c0:   mov	x8, #0x2b08                	// #11016
                                                            ;   {metadata({method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff909431c4:   movk	x8, #0x280f, lsl #16
  0x0000ffff909431c8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909431cc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909431d0:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909431d4:   str	x8, [sp]
  0x0000ffff909431d8:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909431dc:   add	x8, x8, #0x8c0
  0x0000ffff909431e0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff909431e4:   b	0x0000ffff90942638
 ;; CounterOverflowStub slow case
 ;; 0xFFF928058A08
  0x0000ffff909431e8:   mov	x8, #0x8a08                	// #35336
                                                            ;   {metadata({method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909431ec:   movk	x8, #0x2805, lsl #16
  0x0000ffff909431f0:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909431f4:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909431f8:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909431fc:   str	x8, [sp]
  0x0000ffff90943200:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943204:   add	x8, x8, #0x8c0
  0x0000ffff90943208:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff9094320c:   b	0x0000ffff90942690
 ;; CounterOverflowStub slow case
 ;; 0xFC000ABC28
  0x0000ffff90943210:   mov	x8, #0xbc28                	// #48168
                                                            ;   {metadata({method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90943214:   movk	x8, #0xa, lsl #16
  0x0000ffff90943218:   movk	x8, #0xfc, lsl #32
  0x0000ffff9094321c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943220:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943224:   str	x8, [sp]
  0x0000ffff90943228:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094322c:   add	x8, x8, #0x8c0
  0x0000ffff90943230:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff90943234:   b	0x0000ffff909426d8
 ;; CounterOverflowStub slow case
 ;; 0xFFF928400A28
  0x0000ffff90943238:   mov	x8, #0xa28                 	// #2600
                                                            ;   {metadata({method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff9094323c:   movk	x8, #0x2840, lsl #16
  0x0000ffff90943240:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90943244:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943248:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094324c:   str	x8, [sp]
  0x0000ffff90943250:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943254:   add	x8, x8, #0x8c0
  0x0000ffff90943258:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff9094325c:   b	0x0000ffff90942714
 ;; SimpleExceptionStub slow case
  0x0000ffff90943260:   mov	x8, x0
  0x0000ffff90943264:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90943268:   add	x9, x9, #0xdc0
  0x0000ffff9094326c:   blr	x9                          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; should not reach here
  0x0000ffff90943270:   dcps1	#0xdeae
  0x0000ffff90943274:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90943278:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFC00175E78
  0x0000ffff9094327c:   mov	x8, #0x5e78                	// #24184
                                                            ;   {metadata({method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90943280:   movk	x8, #0x17, lsl #16
  0x0000ffff90943284:   movk	x8, #0xfc, lsl #32
  0x0000ffff90943288:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff9094328c:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943290:   str	x8, [sp]
  0x0000ffff90943294:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943298:   add	x8, x8, #0x8c0
  0x0000ffff9094329c:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.random.RandomGenerator::nextInt@-1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff909432a0:   b	0x0000ffff9094292c
 ;; CounterOverflowStub slow case
 ;; 0xFC002C9B80
  0x0000ffff909432a4:   mov	x8, #0x9b80                	// #39808
                                                            ;   {metadata({method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff909432a8:   movk	x8, #0x2c, lsl #16
  0x0000ffff909432ac:   movk	x8, #0xfc, lsl #32
  0x0000ffff909432b0:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909432b4:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909432b8:   str	x8, [sp]
  0x0000ffff909432bc:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909432c0:   add	x8, x8, #0x8c0
  0x0000ffff909432c4:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
                                                            ; - java.util.random.RandomGenerator::nextInt@1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff909432c8:   b	0x0000ffff90942968
 ;; ImplicitNullCheckStub slow case
  0x0000ffff909432cc:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff909432d0:   add	x8, x8, #0x9c0
  0x0000ffff909432d4:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
 ;; should not reach here
  0x0000ffff909432d8:   dcps1	#0xdeae
  0x0000ffff909432dc:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909432e0:   udf	#65535
 ;; RangeCheckStub slow case
  0x0000ffff909432e4:   mov	x8, x0
  0x0000ffff909432e8:   mov	x9, x3
 ;; 0xFFFF97D530C0
  0x0000ffff909432ec:   mov	x30, #0x30c0                	// #12480
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000ffff909432f0:   movk	x30, #0x97d5, lsl #16
  0x0000ffff909432f4:   movk	x30, #0xffff, lsl #32
  0x0000ffff909432f8:   blr	x30                         ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
 ;; should not reach here
  0x0000ffff909432fc:   dcps1	#0xdeae
  0x0000ffff90943300:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90943304:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90943308:   add	x2, x3, x2, uxtx
  0x0000ffff9094330c:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90943310:   stp	x0, x2, [sp]
  0x0000ffff90943314:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90943318:   add	x8, x8, #0xe80
  0x0000ffff9094331c:   blr	x8
  0x0000ffff90943320:   add	sp, sp, #0x10
  0x0000ffff90943324:   b	0x0000ffff909429e8
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90943328:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff9094332c:   add	x8, x8, #0x9c0
  0x0000ffff90943330:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
 ;; should not reach here
  0x0000ffff90943334:   dcps1	#0xdeae
  0x0000ffff90943338:   .inst	0xaf7bb248 ; undefined
  0x0000ffff9094333c:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90943340:   add	x0, x0, #0x10
  0x0000ffff90943344:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90943348:   stp	x2, x0, [sp]
  0x0000ffff9094334c:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90943350:   add	x8, x8, #0xe80
  0x0000ffff90943354:   blr	x8
  0x0000ffff90943358:   mov	x2, x0
  0x0000ffff9094335c:   add	sp, sp, #0x10
  0x0000ffff90943360:   b	0x0000ffff909429f8
 ;; SimpleExceptionStub slow case
  0x0000ffff90943364:   mov	x8, x2
  0x0000ffff90943368:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff9094336c:   add	x9, x9, #0xdc0
  0x0000ffff90943370:   blr	x9                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; should not reach here
  0x0000ffff90943374:   dcps1	#0xdeae
  0x0000ffff90943378:   .inst	0xaf7bb248 ; undefined
  0x0000ffff9094337c:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90943380:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90943384:   add	x8, x8, #0x9c0
  0x0000ffff90943388:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*getfield data {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
 ;; should not reach here
  0x0000ffff9094338c:   dcps1	#0xdeae
  0x0000ffff90943390:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90943394:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90943398:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff9094339c:   add	x8, x8, #0x9c0
  0x0000ffff909433a0:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; should not reach here
  0x0000ffff909433a4:   dcps1	#0xdeae
  0x0000ffff909433a8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909433ac:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280505A8
  0x0000ffff909433b0:   mov	x8, #0x5a8                 	// #1448
                                                            ;   {metadata({method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909433b4:   movk	x8, #0x2805, lsl #16
  0x0000ffff909433b8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909433bc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909433c0:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909433c4:   str	x8, [sp]
  0x0000ffff909433c8:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909433cc:   add	x8, x8, #0x8c0
  0x0000ffff909433d0:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::add@-1 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff909433d4:   b	0x0000ffff90942b14
 ;; ImplicitNullCheckStub slow case
  0x0000ffff909433d8:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff909433dc:   add	x8, x8, #0x9c0
  0x0000ffff909433e0:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; should not reach here
  0x0000ffff909433e4:   dcps1	#0xdeae
  0x0000ffff909433e8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909433ec:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF928050690
  0x0000ffff909433f0:   mov	x8, #0x690                 	// #1680
                                                            ;   {metadata({method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909433f4:   movk	x8, #0x2805, lsl #16
  0x0000ffff909433f8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909433fc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943400:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90943404:   str	x8, [sp]
  0x0000ffff90943408:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094340c:   add	x8, x8, #0x8c0
  0x0000ffff90943410:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::add@-1 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff90943414:   b	0x0000ffff90942c34
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804F590
  0x0000ffff90943418:   mov	x8, #0xf590                	// #62864
                                                            ;   {metadata({method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094341c:   movk	x8, #0x2804, lsl #16
  0x0000ffff90943420:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90943424:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90943428:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094342c:   str	x8, [sp]
  0x0000ffff90943430:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90943434:   add	x8, x8, #0x8c0
  0x0000ffff90943438:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff9094343c:   b	0x0000ffff90942c74
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401C58
  0x0000ffff90943440:   mov	x8, #0x1c58                	// #7256
                                                            ;   {metadata({method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90943444:   movk	x8, #0x2840, lsl #16
  0x0000ffff90943448:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094344c:   str	x8, [sp, #8]
 ;; 0x52
  0x0000ffff90943450:   mov	x8, #0x52                  	// #82
  0x0000ffff90943454:   str	x8, [sp]
  0x0000ffff90943458:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094345c:   add	x8, x8, #0x8c0
  0x0000ffff90943460:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff90943464:   b	0x0000ffff90942ee4
 ;; C1SafepointPollStub slow case
  0x0000ffff90943468:   adr	x8, 0x0000ffff90942f34      ;   {internal_word}
  0x0000ffff9094346c:   str	x8, [x28, #1200]
  0x0000ffff90943470:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff90943474:   add	x8, x8, #0xac0
  0x0000ffff90943478:   br	x8
 ;; Unwind handler
  0x0000ffff9094347c:   ldr	x0, [x28, #1368]
  0x0000ffff90943480:   str	xzr, [x28, #1368]
  0x0000ffff90943484:   str	xzr, [x28, #1376]
 ;; remove_frame and dispatch to the unwind handler
  0x0000ffff90943488:   ldp	x29, x30, [sp, #320]
  0x0000ffff9094348c:   add	sp, sp, #0x150
  0x0000ffff90943490:   adrp	x8, Stub::<unknown> 0x0000ffff97d52000
                                                            ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000ffff90943494:   add	x8, x8, #0xa80
  0x0000ffff90943498:   br	x8
  0x0000ffff9094349c:   udf	#0
[Stub Code]
  0x0000ffff909434a0:   ldr	x8, 0x0000ffff909434a8      ;   {no_reloc}
  0x0000ffff909434a4:   br	x8
  0x0000ffff909434a8:   bl	0x0000ffff8fb893a8
  0x0000ffff909434ac:   udf	#65535
  0x0000ffff909434b0:   ldr	x8, 0x0000ffff909434b8      ;   {trampoline_stub}
  0x0000ffff909434b4:   br	x8
  0x0000ffff909434b8:   bl	0x0000ffff8fb893b8
  0x0000ffff909434bc:   udf	#65535
  0x0000ffff909434c0:   ldr	x8, 0x0000ffff909434c8      ;   {trampoline_stub}
  0x0000ffff909434c4:   br	x8
  0x0000ffff909434c8:   bl	0x0000ffff8fb893c8
  0x0000ffff909434cc:   udf	#65535
  0x0000ffff909434d0:   isb                                 ;   {static_stub}
  0x0000ffff909434d4:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff909434d8:   movk	x12, #0x0, lsl #16
  0x0000ffff909434dc:   movk	x12, #0x0, lsl #32
  0x0000ffff909434e0:   mov	x8, #0x0                   	// #0
  0x0000ffff909434e4:   movk	x8, #0x0, lsl #16
  0x0000ffff909434e8:   movk	x8, #0x0, lsl #32
  0x0000ffff909434ec:   br	x8
  0x0000ffff909434f0:   ldr	x8, 0x0000ffff909434f8      ;   {trampoline_stub}
  0x0000ffff909434f4:   br	x8
  0x0000ffff909434f8:   bl	0x0000ffff8fb887f8
  0x0000ffff909434fc:   udf	#65535
  0x0000ffff90943500:   isb                                 ;   {static_stub}
  0x0000ffff90943504:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90943508:   movk	x12, #0x0, lsl #16
  0x0000ffff9094350c:   movk	x12, #0x0, lsl #32
  0x0000ffff90943510:   mov	x8, #0x0                   	// #0
  0x0000ffff90943514:   movk	x8, #0x0, lsl #16
  0x0000ffff90943518:   movk	x8, #0x0, lsl #32
  0x0000ffff9094351c:   br	x8
  0x0000ffff90943520:   ldr	x8, 0x0000ffff90943528      ;   {trampoline_stub}
  0x0000ffff90943524:   br	x8
  0x0000ffff90943528:   bl	0x0000ffff8fb88828
  0x0000ffff9094352c:   udf	#65535
  0x0000ffff90943530:   isb                                 ;   {static_stub}
  0x0000ffff90943534:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90943538:   movk	x12, #0x0, lsl #16
  0x0000ffff9094353c:   movk	x12, #0x0, lsl #32
  0x0000ffff90943540:   mov	x8, #0x0                   	// #0
  0x0000ffff90943544:   movk	x8, #0x0, lsl #16
  0x0000ffff90943548:   movk	x8, #0x0, lsl #32
  0x0000ffff9094354c:   br	x8
  0x0000ffff90943550:   ldr	x8, 0x0000ffff90943558      ;   {trampoline_stub}
  0x0000ffff90943554:   br	x8
  0x0000ffff90943558:   bl	0x0000ffff8fb88858
  0x0000ffff9094355c:   udf	#65535
  0x0000ffff90943560:   isb                                 ;   {static_stub}
  0x0000ffff90943564:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90943568:   movk	x12, #0x0, lsl #16
  0x0000ffff9094356c:   movk	x12, #0x0, lsl #32
  0x0000ffff90943570:   mov	x8, #0x0                   	// #0
  0x0000ffff90943574:   movk	x8, #0x0, lsl #16
  0x0000ffff90943578:   movk	x8, #0x0, lsl #32
  0x0000ffff9094357c:   br	x8
  0x0000ffff90943580:   isb                                 ;   {static_stub}
  0x0000ffff90943584:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90943588:   movk	x12, #0x0, lsl #16
  0x0000ffff9094358c:   movk	x12, #0x0, lsl #32
  0x0000ffff90943590:   mov	x8, #0x0                   	// #0
  0x0000ffff90943594:   movk	x8, #0x0, lsl #16
  0x0000ffff90943598:   movk	x8, #0x0, lsl #32
  0x0000ffff9094359c:   br	x8
  0x0000ffff909435a0:   isb                                 ;   {static_stub}
  0x0000ffff909435a4:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff909435a8:   movk	x12, #0x0, lsl #16
  0x0000ffff909435ac:   movk	x12, #0x0, lsl #32
  0x0000ffff909435b0:   mov	x8, #0x0                   	// #0
  0x0000ffff909435b4:   movk	x8, #0x0, lsl #16
  0x0000ffff909435b8:   movk	x8, #0x0, lsl #32
  0x0000ffff909435bc:   br	x8
[Exception Handler]
  0x0000ffff909435c0:   mov	x19, #0xdead                	// #57005
  0x0000ffff909435c4:   mov	x2, #0x19f                 	// #415
  0x0000ffff909435c8:   mov	x4, #0xdead                	// #57005
  0x0000ffff909435cc:   mov	x5, #0xdead                	// #57005
  0x0000ffff909435d0:   adrp	x8, 0x0000ffff97d55000      ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000ffff909435d4:   add	x8, x8, #0x7c0
  0x0000ffff909435d8:   blr	x8
  0x0000ffff909435dc:   dcps1	#0xdeae
  0x0000ffff909435e0:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909435e4:   udf	#65535
[Deopt Handler Code]
  0x0000ffff909435e8:   adr	x30, 0x0000ffff909435e8
  0x0000ffff909435ec:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff909435f0:   add	x8, x8, #0xdc0
  0x0000ffff909435f4:   br	x8
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff909435f8:   0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
  0x0000ffff90943600:   0x0000080000aa29c8 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8}
  0x0000ffff90943608:   0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
  0x0000ffff90943610:   0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
  0x0000ffff90943618:   0x0000080000abf6a8 a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
  0x0000ffff90943620:   0x0000080000acb8b0 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0}
  0x0000ffff90943628:   0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
  0x0000ffff90943630:   0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
  0x0000ffff90943638:   0x0000080000aa2c10 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
  0x0000ffff90943640:   0x0000080000acbaf8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
  0x0000ffff90943648:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
  0x0000ffff90943650:   0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff90943658:   0x0000fff92841cca8 method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90943660:   0x0000fff928218ce8 method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943668:   0x0000fff928212e20 method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943670:   0x0000fff928207f98 method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff90943678:   0x0000fff928400c90 method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff90943680:   0x000000fc01054180 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'
  0x0000ffff90943688:   0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90943690:   0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943698:   0x000000fc01042278 'jdk/incubator/vector/FloatVector'
  0x0000ffff909436a0:   0x0000fff928213768 method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff909436a8:   0x0000fff9282139f8 method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff909436b0:   0x0000fff928212238 method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff909436b8:   0x0000fff92820a4d0 method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff909436c0:   0x0000fff92820a6c0 method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff909436c8:   0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff909436d0:   0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff909436d8:   0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff909436e0:   0x0000fff928213c38 method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff909436e8:   0x0000fff928213de8 method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff909436f0:   0x0000fff92820ae38 method data for {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff909436f8:   0x0000fff92820ab10 method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90943700:   0x0000fff9282140d8 method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943708:   0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90943710:   0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff90943718:   0x0000fff928120f48 {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff90943720:   0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943728:   0x0000fff9282127f0 method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff90943730:   0x0000fff9282129c8 method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff90943738:   0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff90943740:   0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff90943748:   0x000000fc01001450 'InnerFloat'
  0x0000ffff90943750:   0x0000fff928214e50 method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943758:   0x0000000000000000 
  0x0000ffff90943760:   0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943768:   0x0000fff928215038 method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943770:   0x0000fff928215220 method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943778:   0x0000000000000000 
  0x0000ffff90943780:   0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943788:   0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90943790:   0x0000000000000000 
  0x0000ffff90943798:   0x0000000000000000 
  0x0000ffff909437a0:   0x0000000000000000 
  0x0000ffff909437a8:   0x0000000000000000 
  0x0000ffff909437b0:   0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff909437b8:   0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff909437c0:   0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff909437c8:   0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff909437d0:   0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff909437d8:   0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff909437e0:   0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff909437e8:   0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff909437f0:   0x000000fc00034a08 {method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
  0x0000ffff909437f8:   0x0000fff928020148 {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  0x0000ffff90943800:   0x000000fc0047ba60 {method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
  0x0000ffff90943808:   0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff90941dff offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff90941edc offset=dc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@0 (line 46)
PcDesc(pc=0x0000ffff909421a4 offset=3a4 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
PcDesc(pc=0x0000ffff909421a8 offset=3a8 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909421b4 offset=3b4 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
PcDesc(pc=0x0000ffff90942290 offset=490 bits=0):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
PcDesc(pc=0x0000ffff90942294 offset=494 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff909422a0 offset=4a0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
PcDesc(pc=0x0000ffff909422cc offset=4cc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
PcDesc(pc=0x0000ffff90942464 offset=664 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff90942504 offset=704 bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff90942774 offset=974 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff90942778 offset=978 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942784 offset=984 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff9094285c offset=a5c bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff90942980 offset=b80 bits=0):
   jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff909429ac offset=bac bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff909429b0 offset=bb0 bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: stack[280],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff909429bc offset=bbc bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff909429e8 offset=be8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
PcDesc(pc=0x0000ffff909429f8 offset=bf8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
PcDesc(pc=0x0000ffff90942acc offset=ccc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff90942ad0 offset=cd0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
PcDesc(pc=0x0000ffff90942ad4 offset=cd4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff90942bcc offset=dcc bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff90942be4 offset=de4 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: stack[276]
PcDesc(pc=0x0000ffff90942bf0 offset=df0 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff90942bf4 offset=df4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff90942d20 offset=f20 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff90942d34 offset=f34 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[296],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942d40 offset=f40 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff90942df0 offset=ff0 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff90942e00 offset=1000 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942e0c offset=100c bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff90942ee4 offset=10e4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
PcDesc(pc=0x0000ffff90942ee8 offset=10e8 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942f2c offset=112c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
PcDesc(pc=0x0000ffff90942f68 offset=1168 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942f90 offset=1190 bits=0):
   jdk.incubator.vector.FloatVector::zero@-1 (line 551)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942fb8 offset=11b8 bits=0):
   jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
   Locals
    - l0: 0
   jdk.incubator.vector.FloatVector::zero@19 (line 553)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90942fe0 offset=11e0 bits=0):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943008 offset=1208 bits=0):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094301c offset=121c bits=0):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943034 offset=1234 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943064 offset=1264 bits=0):
   jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg r10 [20],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094308c offset=128c bits=0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
   Locals
    - l0: reg r10 [20],int
    - l1: 4
    - l2: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909430b4 offset=12b4 bits=0):
   java.util.Objects::checkIndex@-1 (line 365)
   Locals
    - l0: reg r10 [20],int
    - l1: reg c_rarg4 [8],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909430cc offset=12cc bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909430ec offset=12ec bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094311c offset=131c bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943144 offset=1344 bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: empty
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094316c offset=136c bits=0):
   jdk.incubator.vector.Float128Vector::fromArray0@-1 (line 851)
   Locals
    - l0: a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943194 offset=1394 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
   Locals
    - l0: a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909431bc offset=13bc bits=0):
   jdk.incubator.vector.Float128Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909431e4 offset=13e4 bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094320c offset=140c bits=0):
   jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
   Locals
    - l0: empty
    - l1: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943234 offset=1434 bits=0):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094325c offset=145c bits=0):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943270 offset=1470 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909432a0 offset=14a0 bits=0):
   java.util.random.RandomGenerator::nextInt@-1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff909432c8 offset=14c8 bits=0):
   jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
   Locals
    - l0: 1024
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff909432d8 offset=14d8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909432fc offset=14fc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943334 offset=1534 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943374 offset=1574 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094338c offset=158c bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909433a4 offset=15a4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909433d4 offset=15d4 bits=0):
   jdk.incubator.vector.FloatVector::add@-1 (line 1223)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg4 [8],oop
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: reg c_rarg3 [6],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: reg v0 [64]
PcDesc(pc=0x0000ffff909433e4 offset=15e4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943414 offset=1614 bits=0):
   jdk.incubator.vector.FloatVector::add@-1 (line 1249)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: stack[276]
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094343c offset=163c bits=0):
   jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: stack[276]
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90943464 offset=1664 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909435f9 offset=17f9 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 42 OopMaps

ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 936 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop } pc offsets: 2424 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop [280]=Oop } pc offsets: 2992 
ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop } pc offsets: 3556 
ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop [296]=Oop } pc offsets: 3892 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 4096 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 4328 
ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 4456 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 4496 
ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop } pc offsets: 4536 4576 4616 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 4636 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4660 4708 4748 4788 4812 4844 
ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4892 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4932 
ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4972 5012 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 5052 
ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 5092 5132 5172 5212 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop } pc offsets: 5232 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 5280 5320 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 5336 5372 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 5428 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 5492 5516 5540 5588 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop } pc offsets: 5604 5652 5692 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 5732 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff90941edc offset=dc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@0 (line 46)
ScopeDesc(pc=0x0000ffff909421a4 offset=3a4):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff909421a4 offset=3a4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
ScopeDesc(pc=0x0000ffff909421a8 offset=3a8):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff909421a8 offset=3a8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909421b4 offset=3b4):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff909421b4 offset=3b4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
ScopeDesc(pc=0x0000ffff90942290 offset=490):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
ScopeDesc(pc=0x0000ffff90942290 offset=490):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
ScopeDesc(pc=0x0000ffff90942294 offset=494):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff909422a0 offset=4a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
ScopeDesc(pc=0x0000ffff909422cc offset=4cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
ScopeDesc(pc=0x0000ffff90942464 offset=664):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x0000ffff90942464 offset=664):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
ScopeDesc(pc=0x0000ffff90942464 offset=664):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff90942464 offset=664):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff90942504 offset=704):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
ScopeDesc(pc=0x0000ffff90942504 offset=704):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
ScopeDesc(pc=0x0000ffff90942504 offset=704):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff90942504 offset=704):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff90942774 offset=974):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff90942774 offset=974):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
ScopeDesc(pc=0x0000ffff90942774 offset=974):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff90942774 offset=974):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff90942778 offset=978):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90942778 offset=978):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90942778 offset=978):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90942778 offset=978):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942784 offset=984):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff90942784 offset=984):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
ScopeDesc(pc=0x0000ffff90942784 offset=984):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff90942784 offset=984):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff9094285c offset=a5c):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
ScopeDesc(pc=0x0000ffff9094285c offset=a5c):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
ScopeDesc(pc=0x0000ffff9094285c offset=a5c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff9094285c offset=a5c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff90942980 offset=b80):
   jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
ScopeDesc(pc=0x0000ffff90942980 offset=b80):
   java.util.random.RandomGenerator::nextInt@1 (line 820)
ScopeDesc(pc=0x0000ffff90942980 offset=b80):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff909429ac offset=bac):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff909429ac offset=bac):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff909429b0 offset=bb0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff909429b0 offset=bb0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: stack[280],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff909429bc offset=bbc):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff909429bc offset=bbc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff909429e8 offset=be8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
ScopeDesc(pc=0x0000ffff909429f8 offset=bf8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
ScopeDesc(pc=0x0000ffff90942acc offset=ccc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff90942ad0 offset=cd0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
ScopeDesc(pc=0x0000ffff90942ad4 offset=cd4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff90942bcc offset=dcc):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff90942bcc offset=dcc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff90942be4 offset=de4):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90942be4 offset=de4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: stack[276]
ScopeDesc(pc=0x0000ffff90942bf0 offset=df0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff90942bf0 offset=df0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff90942bf4 offset=df4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff90942d20 offset=f20):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff90942d20 offset=f20):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff90942d20 offset=f20):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff90942d34 offset=f34):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[296],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff90942d34 offset=f34):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90942d34 offset=f34):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942d40 offset=f40):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff90942d40 offset=f40):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff90942d40 offset=f40):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff90942df0 offset=ff0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff90942df0 offset=ff0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff90942df0 offset=ff0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff90942e00 offset=1000):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90942e00 offset=1000):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90942e00 offset=1000):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942e0c offset=100c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff90942e0c offset=100c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff90942e0c offset=100c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff90942ee4 offset=10e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
ScopeDesc(pc=0x0000ffff90942ee8 offset=10e8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942f2c offset=112c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
ScopeDesc(pc=0x0000ffff90942f68 offset=1168):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942f90 offset=1190):
   jdk.incubator.vector.FloatVector::zero@-1 (line 551)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: empty
ScopeDesc(pc=0x0000ffff90942f90 offset=1190):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942fb8 offset=11b8):
   jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
   Locals
    - l0: 0
ScopeDesc(pc=0x0000ffff90942fb8 offset=11b8):
   jdk.incubator.vector.FloatVector::zero@19 (line 553)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
ScopeDesc(pc=0x0000ffff90942fb8 offset=11b8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90942fe0 offset=11e0):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
ScopeDesc(pc=0x0000ffff90942fe0 offset=11e0):
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
ScopeDesc(pc=0x0000ffff90942fe0 offset=11e0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943008 offset=1208):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
ScopeDesc(pc=0x0000ffff90943008 offset=1208):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff90943008 offset=1208):
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
ScopeDesc(pc=0x0000ffff90943008 offset=1208):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094301c offset=121c):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff9094301c offset=121c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943034 offset=1234):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943064 offset=1264):
   jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg r10 [20],int
    - l3: empty
ScopeDesc(pc=0x0000ffff90943064 offset=1264):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094308c offset=128c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
   Locals
    - l0: reg r10 [20],int
    - l1: 4
    - l2: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff9094308c offset=128c):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094308c offset=128c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909430b4 offset=12b4):
   java.util.Objects::checkIndex@-1 (line 365)
   Locals
    - l0: reg r10 [20],int
    - l1: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff909430b4 offset=12b4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909430b4 offset=12b4):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909430b4 offset=12b4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909430cc offset=12cc):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff909430cc offset=12cc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909430cc offset=12cc):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909430cc offset=12cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909430ec offset=12ec):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff909430ec offset=12ec):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909430ec offset=12ec):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909430ec offset=12ec):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094311c offset=131c):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
ScopeDesc(pc=0x0000ffff9094311c offset=131c):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff9094311c offset=131c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943144 offset=1344):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l1: empty
ScopeDesc(pc=0x0000ffff90943144 offset=1344):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff90943144 offset=1344):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff90943144 offset=1344):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094316c offset=136c):
   jdk.incubator.vector.Float128Vector::fromArray0@-1 (line 851)
   Locals
    - l0: a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff9094316c offset=136c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094316c offset=136c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943194 offset=1394):
   jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
   Locals
    - l0: a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff90943194 offset=1394):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90943194 offset=1394):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90943194 offset=1394):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909431bc offset=13bc):
   jdk.incubator.vector.Float128Vector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff909431bc offset=13bc):
   jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff909431bc offset=13bc):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909431bc offset=13bc):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909431bc offset=13bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909431e4 offset=13e4):
   jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff909431e4 offset=13e4):
   jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
ScopeDesc(pc=0x0000ffff909431e4 offset=13e4):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909431e4 offset=13e4):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909431e4 offset=13e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094320c offset=140c):
   jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
   Locals
    - l0: empty
    - l1: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff9094320c offset=140c):
   jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
ScopeDesc(pc=0x0000ffff9094320c offset=140c):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff9094320c offset=140c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094320c offset=140c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943234 offset=1434):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
ScopeDesc(pc=0x0000ffff90943234 offset=1434):
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
ScopeDesc(pc=0x0000ffff90943234 offset=1434):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90943234 offset=1434):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90943234 offset=1434):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094325c offset=145c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943270 offset=1470):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90943270 offset=1470):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90943270 offset=1470):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90943270 offset=1470):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909432a0 offset=14a0):
   java.util.random.RandomGenerator::nextInt@-1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
ScopeDesc(pc=0x0000ffff909432a0 offset=14a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff909432c8 offset=14c8):
   jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
   Locals
    - l0: 1024
ScopeDesc(pc=0x0000ffff909432c8 offset=14c8):
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
ScopeDesc(pc=0x0000ffff909432c8 offset=14c8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff909432d8 offset=14d8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909432fc offset=14fc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943334 offset=1534):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943374 offset=1574):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094338c offset=158c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909433a4 offset=15a4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909433d4 offset=15d4):
   jdk.incubator.vector.FloatVector::add@-1 (line 1223)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg4 [8],oop
ScopeDesc(pc=0x0000ffff909433d4 offset=15d4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: reg c_rarg3 [6],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: reg v0 [64]
ScopeDesc(pc=0x0000ffff909433e4 offset=15e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943414 offset=1614):
   jdk.incubator.vector.FloatVector::add@-1 (line 1249)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: stack[276]
ScopeDesc(pc=0x0000ffff90943414 offset=1614):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094343c offset=163c):
   jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: stack[276]
ScopeDesc(pc=0x0000ffff9094343c offset=163c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff9094343c offset=163c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90943464 offset=1664):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff90941b00: 300d
relocInfo@0x0000ffff90941b00 [type=6(runtime_call) addr=0x0000ffff90941e34 offset=52] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff90941b02: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff90941b0c [type=7(external_word) addr=0x0000ffff90941e5c offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff90941b0e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff90941b18 [type=7(external_word) addr=0x0000ffff90941e74 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff90941b1a: 3009
relocInfo@0x0000ffff90941b1a [type=6(runtime_call) addr=0x0000ffff90941e98 offset=36] | [destination=0x0000ffff97c263c0]
         @0x0000ffff90941b1c: 78016008
relocInfo@0x0000ffff90941b1e [type=12(metadata) addr=0x0000ffff90941eb8 offset=32 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941b20: 78016009
relocInfo@0x0000ffff90941b22 [type=12(metadata) addr=0x0000ffff90941edc offset=36 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941b24: 78026006
relocInfo@0x0000ffff90941b26 [type=12(metadata) addr=0x0000ffff90941ef4 offset=24 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b28: 78010809
relocInfo@0x0000ffff90941b2a [type=1(oop) addr=0x0000ffff90941f18 offset=36 data=1] | [oop_addr=0x0000ffff909435f8 *=0x0000080000a8e9b8 offset=0]
         @0x0000ffff90941b2c: 78026004
relocInfo@0x0000ffff90941b2e [type=12(metadata) addr=0x0000ffff90941f28 offset=16 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b30: 78026007
relocInfo@0x0000ffff90941b32 [type=12(metadata) addr=0x0000ffff90941f44 offset=28 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b34: 78026028
relocInfo@0x0000ffff90941b36 [type=12(metadata) addr=0x0000ffff90941fe4 offset=160 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b38: 78036006
relocInfo@0x0000ffff90941b3a [type=12(metadata) addr=0x0000ffff90941ffc offset=24 data=3] | [metadata_addr=0x0000ffff90943668 *=0x0000fff928212e20 offset=0]metadata_value=0x0000fff928212e20: method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b3c: 78036009
relocInfo@0x0000ffff90941b3e [type=12(metadata) addr=0x0000ffff90942020 offset=36 data=3] | [metadata_addr=0x0000ffff90943668 *=0x0000fff928212e20 offset=0]metadata_value=0x0000fff928212e20: method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b40: 78026006
relocInfo@0x0000ffff90941b42 [type=12(metadata) addr=0x0000ffff90942038 offset=24 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b44: 78046006
relocInfo@0x0000ffff90941b46 [type=12(metadata) addr=0x0000ffff90942050 offset=24 data=4] | [metadata_addr=0x0000ffff90943670 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941b48: 78046009
relocInfo@0x0000ffff90941b4a [type=12(metadata) addr=0x0000ffff90942074 offset=36 data=4] | [metadata_addr=0x0000ffff90943670 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941b4c: 78056006
relocInfo@0x0000ffff90941b4e [type=12(metadata) addr=0x0000ffff9094208c offset=24 data=5] | [metadata_addr=0x0000ffff90943678 *=0x0000fff928400c90 offset=0]metadata_value=0x0000fff928400c90: method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90941b50: 78026009
relocInfo@0x0000ffff90941b52 [type=12(metadata) addr=0x0000ffff909420b0 offset=36 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b54: 78020804
relocInfo@0x0000ffff90941b56 [type=1(oop) addr=0x0000ffff909420c0 offset=16 data=2] | [oop_addr=0x0000ffff90943600 *=0x0000080000aa29c8 offset=0]
         @0x0000ffff90941b58: 7806600a
relocInfo@0x0000ffff90941b5a [type=12(metadata) addr=0x0000ffff909420e8 offset=40 data=6] | [metadata_addr=0x0000ffff90943680 *=0x000000fc01054180 offset=0]metadata_value=0x000000fc01054180: 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'
         @0x0000ffff90941b5c: 78066008
relocInfo@0x0000ffff90941b5e [type=12(metadata) addr=0x0000ffff90942108 offset=32 data=6] | [metadata_addr=0x0000ffff90943680 *=0x000000fc01054180 offset=0]metadata_value=0x000000fc01054180: 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'
         @0x0000ffff90941b60: 78026017
relocInfo@0x0000ffff90941b62 [type=12(metadata) addr=0x0000ffff90942164 offset=92 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b64: 78030806
relocInfo@0x0000ffff90941b66 [type=1(oop) addr=0x0000ffff9094217c offset=24 data=3] | [oop_addr=0x0000ffff90943608 *=0x0000080000a8ea28 offset=0]
         @0x0000ffff90941b68: 78040803
relocInfo@0x0000ffff90941b6a [type=1(oop) addr=0x0000ffff90942188 offset=12 data=4] | [oop_addr=0x0000ffff90943610 *=0x0000080000000570 offset=0]
         @0x0000ffff90941b6c: 2007
relocInfo@0x0000ffff90941b6c [type=4(static_call) addr=0x0000ffff909421a4 offset=28] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff90941b6e: 8001
relocInfo@0x0000ffff90941b6e [type=16(post_call_nop) addr=0x0000ffff909421a8 offset=4]
         @0x0000ffff90941b70: 78026003
relocInfo@0x0000ffff90941b72 [type=12(metadata) addr=0x0000ffff909421b4 offset=12 data=2] | [metadata_addr=0x0000ffff90943660 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b74: 7809602d
relocInfo@0x0000ffff90941b76 [type=12(metadata) addr=0x0000ffff90942268 offset=180 data=9] | [metadata_addr=0x0000ffff90943698 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b78: 7801600f
relocInfo@0x0000ffff90941b7a [type=12(metadata) addr=0x0000ffff909422a4 offset=60 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941b7c: 7801600a
relocInfo@0x0000ffff90941b7e [type=12(metadata) addr=0x0000ffff909422cc offset=40 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941b80: 780a6006
relocInfo@0x0000ffff90941b82 [type=12(metadata) addr=0x0000ffff909422e4 offset=24 data=10] | [metadata_addr=0x0000ffff909436a0 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b84: 78010809
relocInfo@0x0000ffff90941b86 [type=1(oop) addr=0x0000ffff90942308 offset=36 data=1] | [oop_addr=0x0000ffff909435f8 *=0x0000080000a8e9b8 offset=0]
         @0x0000ffff90941b88: 780a6003
relocInfo@0x0000ffff90941b8a [type=12(metadata) addr=0x0000ffff90942314 offset=12 data=10] | [metadata_addr=0x0000ffff909436a0 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b8c: 780a6028
relocInfo@0x0000ffff90941b8e [type=12(metadata) addr=0x0000ffff909423b4 offset=160 data=10] | [metadata_addr=0x0000ffff909436a0 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941b90: 780b6006
relocInfo@0x0000ffff90941b92 [type=12(metadata) addr=0x0000ffff909423cc offset=24 data=11] | [metadata_addr=0x0000ffff909436a8 *=0x0000fff9282139f8 offset=0]metadata_value=0x0000fff9282139f8: method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff90941b94: 780b6009
relocInfo@0x0000ffff90941b96 [type=12(metadata) addr=0x0000ffff909423f0 offset=36 data=11] | [metadata_addr=0x0000ffff909436a8 *=0x0000fff9282139f8 offset=0]metadata_value=0x0000fff9282139f8: method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff90941b98: 780c6007
relocInfo@0x0000ffff90941b9a [type=12(metadata) addr=0x0000ffff9094240c offset=28 data=12] | [metadata_addr=0x0000ffff909436b0 *=0x0000fff928212238 offset=0]metadata_value=0x0000fff928212238: method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff90941b9c: 780c6009
relocInfo@0x0000ffff90941b9e [type=12(metadata) addr=0x0000ffff90942430 offset=36 data=12] | [metadata_addr=0x0000ffff909436b0 *=0x0000fff928212238 offset=0]metadata_value=0x0000fff928212238: method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff90941ba0: 7801080d
relocInfo@0x0000ffff90941ba2 [type=1(oop) addr=0x0000ffff90942464 offset=52 data=1] | [oop_addr=0x0000ffff909435f8 *=0x0000080000a8e9b8 offset=0]
         @0x0000ffff90941ba4: 780a6004
relocInfo@0x0000ffff90941ba6 [type=12(metadata) addr=0x0000ffff90942474 offset=16 data=10] | [metadata_addr=0x0000ffff909436a0 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941ba8: 780d6006
relocInfo@0x0000ffff90941baa [type=12(metadata) addr=0x0000ffff9094248c offset=24 data=13] | [metadata_addr=0x0000ffff909436b8 *=0x0000fff92820a4d0 offset=0]metadata_value=0x0000fff92820a4d0: method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90941bac: 780d6009
relocInfo@0x0000ffff90941bae [type=12(metadata) addr=0x0000ffff909424b0 offset=36 data=13] | [metadata_addr=0x0000ffff909436b8 *=0x0000fff92820a4d0 offset=0]metadata_value=0x0000fff92820a4d0: method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90941bb0: 780e6006
relocInfo@0x0000ffff90941bb2 [type=12(metadata) addr=0x0000ffff909424c8 offset=24 data=14] | [metadata_addr=0x0000ffff909436c0 *=0x0000fff92820a6c0 offset=0]metadata_value=0x0000fff92820a6c0: method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff90941bb4: 780e6009
relocInfo@0x0000ffff90941bb6 [type=12(metadata) addr=0x0000ffff909424ec offset=36 data=14] | [metadata_addr=0x0000ffff909436c0 *=0x0000fff92820a6c0 offset=0]metadata_value=0x0000fff92820a6c0: method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff90941bb8: 78050807
relocInfo@0x0000ffff90941bba [type=1(oop) addr=0x0000ffff90942508 offset=28 data=5] | [oop_addr=0x0000ffff90943618 *=0x0000080000abf6a8 offset=0]
         @0x0000ffff90941bbc: 780a6004
relocInfo@0x0000ffff90941bbe [type=12(metadata) addr=0x0000ffff90942518 offset=16 data=10] | [metadata_addr=0x0000ffff909436a0 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bc0: 78126006
relocInfo@0x0000ffff90941bc2 [type=12(metadata) addr=0x0000ffff90942530 offset=24 data=18] | [metadata_addr=0x0000ffff909436e0 *=0x0000fff928213c38 offset=0]metadata_value=0x0000fff928213c38: method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff90941bc4: 7812600a
relocInfo@0x0000ffff90941bc6 [type=12(metadata) addr=0x0000ffff90942558 offset=40 data=18] | [metadata_addr=0x0000ffff909436e0 *=0x0000fff928213c38 offset=0]metadata_value=0x0000fff928213c38: method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff90941bc8: 78136006
relocInfo@0x0000ffff90941bca [type=12(metadata) addr=0x0000ffff90942570 offset=24 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bcc: 78136009
relocInfo@0x0000ffff90941bce [type=12(metadata) addr=0x0000ffff90942594 offset=36 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bd0: 78146006
relocInfo@0x0000ffff90941bd2 [type=12(metadata) addr=0x0000ffff909425ac offset=24 data=20] | [metadata_addr=0x0000ffff909436f0 *=0x0000fff92820ae38 offset=0]metadata_value=0x0000fff92820ae38: method data for {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff90941bd4: 78010809
relocInfo@0x0000ffff90941bd6 [type=1(oop) addr=0x0000ffff909425d0 offset=36 data=1] | [oop_addr=0x0000ffff909435f8 *=0x0000080000a8e9b8 offset=0]
         @0x0000ffff90941bd8: 78136004
relocInfo@0x0000ffff90941bda [type=12(metadata) addr=0x0000ffff909425e0 offset=16 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bdc: 78136007
relocInfo@0x0000ffff90941bde [type=12(metadata) addr=0x0000ffff909425fc offset=28 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941be0: 78156006
relocInfo@0x0000ffff90941be2 [type=12(metadata) addr=0x0000ffff90942614 offset=24 data=21] | [metadata_addr=0x0000ffff909436f8 *=0x0000fff92820ab10 offset=0]metadata_value=0x0000fff92820ab10: method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90941be4: 7813600a
relocInfo@0x0000ffff90941be6 [type=12(metadata) addr=0x0000ffff9094263c offset=40 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941be8: 78136006
relocInfo@0x0000ffff90941bea [type=12(metadata) addr=0x0000ffff90942654 offset=24 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bec: 78166006
relocInfo@0x0000ffff90941bee [type=12(metadata) addr=0x0000ffff9094266c offset=24 data=22] | [metadata_addr=0x0000ffff90943700 *=0x0000fff9282140d8 offset=0]metadata_value=0x0000fff9282140d8: method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bf0: 78136009
relocInfo@0x0000ffff90941bf2 [type=12(metadata) addr=0x0000ffff90942690 offset=36 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941bf4: 78046009
relocInfo@0x0000ffff90941bf6 [type=12(metadata) addr=0x0000ffff909426b4 offset=36 data=4] | [metadata_addr=0x0000ffff90943670 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941bf8: 78046009
relocInfo@0x0000ffff90941bfa [type=12(metadata) addr=0x0000ffff909426d8 offset=36 data=4] | [metadata_addr=0x0000ffff90943670 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941bfc: 78056006
relocInfo@0x0000ffff90941bfe [type=12(metadata) addr=0x0000ffff909426f0 offset=24 data=5] | [metadata_addr=0x0000ffff90943678 *=0x0000fff928400c90 offset=0]metadata_value=0x0000fff928400c90: method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90941c00: 78136009
relocInfo@0x0000ffff90941c02 [type=12(metadata) addr=0x0000ffff90942714 offset=36 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c04: 78030806
relocInfo@0x0000ffff90941c06 [type=1(oop) addr=0x0000ffff9094272c offset=24 data=3] | [oop_addr=0x0000ffff90943608 *=0x0000080000a8ea28 offset=0]
         @0x0000ffff90941c08: 78040803
relocInfo@0x0000ffff90941c0a [type=1(oop) addr=0x0000ffff90942738 offset=12 data=4] | [oop_addr=0x0000ffff90943610 *=0x0000080000000570 offset=0]
         @0x0000ffff90941c0c: 78060803
relocInfo@0x0000ffff90941c0e [type=1(oop) addr=0x0000ffff90942744 offset=12 data=6] | [oop_addr=0x0000ffff90943620 *=0x0000080000acb8b0 offset=0]
         @0x0000ffff90941c10: 200c
relocInfo@0x0000ffff90941c10 [type=4(static_call) addr=0x0000ffff90942774 offset=48] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff90941c12: 8001
relocInfo@0x0000ffff90941c12 [type=16(post_call_nop) addr=0x0000ffff90942778 offset=4]
         @0x0000ffff90941c14: 78136003
relocInfo@0x0000ffff90941c16 [type=12(metadata) addr=0x0000ffff90942784 offset=12 data=19] | [metadata_addr=0x0000ffff909436e8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c18: 7809602d
relocInfo@0x0000ffff90941c1a [type=12(metadata) addr=0x0000ffff90942838 offset=180 data=9] | [metadata_addr=0x0000ffff90943698 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c1c: 78070809
relocInfo@0x0000ffff90941c1e [type=1(oop) addr=0x0000ffff9094285c offset=36 data=7] | [oop_addr=0x0000ffff90943628 *=0x0000080000a48310 offset=0]
         @0x0000ffff90941c20: 78016003
relocInfo@0x0000ffff90941c22 [type=12(metadata) addr=0x0000ffff90942868 offset=12 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c24: 781b6028
relocInfo@0x0000ffff90941c26 [type=12(metadata) addr=0x0000ffff90942908 offset=160 data=27] | [metadata_addr=0x0000ffff90943728 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff90941c28: 781b6009
relocInfo@0x0000ffff90941c2a [type=12(metadata) addr=0x0000ffff9094292c offset=36 data=27] | [metadata_addr=0x0000ffff90943728 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff90941c2c: 781c6006
relocInfo@0x0000ffff90941c2e [type=12(metadata) addr=0x0000ffff90942944 offset=24 data=28] | [metadata_addr=0x0000ffff90943730 *=0x0000fff9282129c8 offset=0]metadata_value=0x0000fff9282129c8: method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff90941c30: 781c6009
relocInfo@0x0000ffff90941c32 [type=12(metadata) addr=0x0000ffff90942968 offset=36 data=28] | [metadata_addr=0x0000ffff90943730 *=0x0000fff9282129c8 offset=0]metadata_value=0x0000fff9282129c8: method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff90941c34: 781b6007
relocInfo@0x0000ffff90941c36 [type=12(metadata) addr=0x0000ffff90942984 offset=28 data=27] | [metadata_addr=0x0000ffff90943728 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff90941c38: 78070806
relocInfo@0x0000ffff90941c3a [type=1(oop) addr=0x0000ffff9094299c offset=24 data=7] | [oop_addr=0x0000ffff90943628 *=0x0000080000a48310 offset=0]
         @0x0000ffff90941c3c: 2004
relocInfo@0x0000ffff90941c3c [type=4(static_call) addr=0x0000ffff909429ac offset=16] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff90941c3e: 8001
relocInfo@0x0000ffff90941c3e [type=16(post_call_nop) addr=0x0000ffff909429b0 offset=4]
         @0x0000ffff90941c40: 900b
relocInfo@0x0000ffff90941c40 [type=18(barrier) addr=0x0000ffff909429dc offset=44]
         @0x0000ffff90941c42: 9004
relocInfo@0x0000ffff90941c42 [type=18(barrier) addr=0x0000ffff909429ec offset=16]
         @0x0000ffff90941c44: 78016003
relocInfo@0x0000ffff90941c46 [type=12(metadata) addr=0x0000ffff909429f8 offset=12 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c48: 781f602d
relocInfo@0x0000ffff90941c4a [type=12(metadata) addr=0x0000ffff90942aac offset=180 data=31] | [metadata_addr=0x0000ffff90943748 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff90941c4c: 7801600b
relocInfo@0x0000ffff90941c4e [type=12(metadata) addr=0x0000ffff90942ad8 offset=44 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c50: 78206006
relocInfo@0x0000ffff90941c52 [type=12(metadata) addr=0x0000ffff90942af0 offset=24 data=32] | [metadata_addr=0x0000ffff90943750 *=0x0000fff928214e50 offset=0]metadata_value=0x0000fff928214e50: method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c54: 7820600a
relocInfo@0x0000ffff90941c56 [type=12(metadata) addr=0x0000ffff90942b18 offset=40 data=32] | [metadata_addr=0x0000ffff90943750 *=0x0000fff928214e50 offset=0]metadata_value=0x0000fff928214e50: method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c58: 78080828
relocInfo@0x0000ffff90941c5a [type=1(oop) addr=0x0000ffff90942bb8 offset=160 data=8] | [oop_addr=0x0000ffff90943630 *=0x0000080000ad4da0 offset=0]
         @0x0000ffff90941c5c: 7803100a
relocInfo@0x0000ffff90941c5e [type=2(virtual_call) addr=0x0000ffff90942be0 offset=40 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff90942bd4 metadata=0x0000000000000000]
         @0x0000ffff90941c60: 8001
relocInfo@0x0000ffff90941c60 [type=16(post_call_nop) addr=0x0000ffff90942be4 offset=4]
         @0x0000ffff90941c62: 78016005
relocInfo@0x0000ffff90941c64 [type=12(metadata) addr=0x0000ffff90942bf8 offset=20 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c66: 78236006
relocInfo@0x0000ffff90941c68 [type=12(metadata) addr=0x0000ffff90942c10 offset=24 data=35] | [metadata_addr=0x0000ffff90943768 *=0x0000fff928215038 offset=0]metadata_value=0x0000fff928215038: method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c6a: 7823600a
relocInfo@0x0000ffff90941c6c [type=12(metadata) addr=0x0000ffff90942c38 offset=40 data=35] | [metadata_addr=0x0000ffff90943768 *=0x0000fff928215038 offset=0]metadata_value=0x0000fff928215038: method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c6e: 78246006
relocInfo@0x0000ffff90941c70 [type=12(metadata) addr=0x0000ffff90942c50 offset=24 data=36] | [metadata_addr=0x0000ffff90943770 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c72: 7824600a
relocInfo@0x0000ffff90941c74 [type=12(metadata) addr=0x0000ffff90942c78 offset=40 data=36] | [metadata_addr=0x0000ffff90943770 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c76: 7803102e
relocInfo@0x0000ffff90941c78 [type=2(virtual_call) addr=0x0000ffff90942d30 offset=184 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff90942d24 metadata=0x0000000000000000]
         @0x0000ffff90941c7a: 8001
relocInfo@0x0000ffff90941c7a [type=16(post_call_nop) addr=0x0000ffff90942d34 offset=4]
         @0x0000ffff90941c7c: 78246004
relocInfo@0x0000ffff90941c7e [type=12(metadata) addr=0x0000ffff90942d44 offset=16 data=36] | [metadata_addr=0x0000ffff90943770 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941c80: 7803102e
relocInfo@0x0000ffff90941c82 [type=2(virtual_call) addr=0x0000ffff90942dfc offset=184 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff90942df0 metadata=0x0000000000000000]
         @0x0000ffff90941c84: 8001
relocInfo@0x0000ffff90941c84 [type=16(post_call_nop) addr=0x0000ffff90942e00 offset=4]
         @0x0000ffff90941c86: 78010803
relocInfo@0x0000ffff90941c88 [type=1(oop) addr=0x0000ffff90942e0c offset=12 data=1] | [oop_addr=0x0000ffff909435f8 *=0x0000080000a8e9b8 offset=0]
         @0x0000ffff90941c8a: 78016003
relocInfo@0x0000ffff90941c8c [type=12(metadata) addr=0x0000ffff90942e18 offset=12 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c8e: 7801602a
relocInfo@0x0000ffff90941c90 [type=12(metadata) addr=0x0000ffff90942ec0 offset=168 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941c92: 500a
relocInfo@0x0000ffff90941c92 [type=10(poll) addr=0x0000ffff90942ee8 offset=40]
         @0x0000ffff90941c94: 7c04aece431c0000ffff3803
relocInfo@0x0000ffff90941c9e [type=7(external_word) addr=0x0000ffff90942ef4 offset=12 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff90941ca0: 78016005
relocInfo@0x0000ffff90941ca2 [type=12(metadata) addr=0x0000ffff90942f08 offset=20 data=1] | [metadata_addr=0x0000ffff90943658 *=0x0000fff92841cca8 offset=0]metadata_value=0x0000fff92841cca8: method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941ca4: 580b
relocInfo@0x0000ffff90941ca4 [type=11(poll_return) addr=0x0000ffff90942f34 offset=44]
         @0x0000ffff90941ca6: 78076004
relocInfo@0x0000ffff90941ca8 [type=12(metadata) addr=0x0000ffff90942f44 offset=16 data=7] | [metadata_addr=0x0000ffff90943688 *=0x0000fff928401c58 offset=0]metadata_value=0x0000fff928401c58: {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941caa: 3006
relocInfo@0x0000ffff90941caa [type=6(runtime_call) addr=0x0000ffff90942f5c offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cac: 78086004
relocInfo@0x0000ffff90941cae [type=12(metadata) addr=0x0000ffff90942f6c offset=16 data=8] | [metadata_addr=0x0000ffff90943690 *=0x0000fff92804e2e8 offset=0]metadata_value=0x0000fff92804e2e8: {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941cb0: 3006
relocInfo@0x0000ffff90941cb0 [type=6(runtime_call) addr=0x0000ffff90942f84 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cb2: 782c6004
relocInfo@0x0000ffff90941cb4 [type=12(metadata) addr=0x0000ffff90942f94 offset=16 data=44] | [metadata_addr=0x0000ffff909437b0 *=0x0000fff92804dde8 offset=0]metadata_value=0x0000fff92804dde8: {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941cb6: 3006
relocInfo@0x0000ffff90941cb6 [type=6(runtime_call) addr=0x0000ffff90942fac offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cb8: 782d6004
relocInfo@0x0000ffff90941cba [type=12(metadata) addr=0x0000ffff90942fbc offset=16 data=45] | [metadata_addr=0x0000ffff909437b8 *=0x000000fc000abc28 offset=0]metadata_value=0x000000fc000abc28: {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941cbc: 3006
relocInfo@0x0000ffff90941cbc [type=6(runtime_call) addr=0x0000ffff90942fd4 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cbe: 782e6004
relocInfo@0x0000ffff90941cc0 [type=12(metadata) addr=0x0000ffff90942fe4 offset=16 data=46] | [metadata_addr=0x0000ffff909437c0 *=0x0000fff928400a28 offset=0]metadata_value=0x0000fff928400a28: {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90941cc2: 3006
relocInfo@0x0000ffff90941cc2 [type=6(runtime_call) addr=0x0000ffff90942ffc offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cc4: 3005
relocInfo@0x0000ffff90941cc4 [type=6(runtime_call) addr=0x0000ffff90943010 offset=20] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff90941cc6: 3006
relocInfo@0x0000ffff90941cc6 [type=6(runtime_call) addr=0x0000ffff90943028 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941cc8: 780f6006
relocInfo@0x0000ffff90941cca [type=12(metadata) addr=0x0000ffff90943040 offset=24 data=15] | [metadata_addr=0x0000ffff909436c8 *=0x0000fff9280561c0 offset=0]metadata_value=0x0000fff9280561c0: {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941ccc: 3006
relocInfo@0x0000ffff90941ccc [type=6(runtime_call) addr=0x0000ffff90943058 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cce: 78106004
relocInfo@0x0000ffff90941cd0 [type=12(metadata) addr=0x0000ffff90943068 offset=16 data=16] | [metadata_addr=0x0000ffff909436d0 *=0x0000fff9281e5020 offset=0]metadata_value=0x0000fff9281e5020: {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff90941cd2: 3006
relocInfo@0x0000ffff90941cd2 [type=6(runtime_call) addr=0x0000ffff90943080 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cd4: 78116004
relocInfo@0x0000ffff90941cd6 [type=12(metadata) addr=0x0000ffff90943090 offset=16 data=17] | [metadata_addr=0x0000ffff909436d8 *=0x000000fc00056388 offset=0]metadata_value=0x000000fc00056388: {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff90941cd8: 3006
relocInfo@0x0000ffff90941cd8 [type=6(runtime_call) addr=0x0000ffff909430a8 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cda: 3006
relocInfo@0x0000ffff90941cda [type=6(runtime_call) addr=0x0000ffff909430c0 offset=24] | [destination=0x0000ffff97d569c0]
         @0x0000ffff90941cdc: 3008
relocInfo@0x0000ffff90941cdc [type=6(runtime_call) addr=0x0000ffff909430e0 offset=32] | [destination=0x0000ffff97d569c0]
         @0x0000ffff90941cde: 78176006
relocInfo@0x0000ffff90941ce0 [type=12(metadata) addr=0x0000ffff909430f8 offset=24 data=23] | [metadata_addr=0x0000ffff90943708 *=0x0000fff9280f3720 offset=0]metadata_value=0x0000fff9280f3720: {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90941ce2: 3006
relocInfo@0x0000ffff90941ce2 [type=6(runtime_call) addr=0x0000ffff90943110 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941ce4: 78186004
relocInfo@0x0000ffff90941ce6 [type=12(metadata) addr=0x0000ffff90943120 offset=16 data=24] | [metadata_addr=0x0000ffff90943710 *=0x0000fff9280fa960 offset=0]metadata_value=0x0000fff9280fa960: {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff90941ce8: 3006
relocInfo@0x0000ffff90941ce8 [type=6(runtime_call) addr=0x0000ffff90943138 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cea: 78196004
relocInfo@0x0000ffff90941cec [type=12(metadata) addr=0x0000ffff90943148 offset=16 data=25] | [metadata_addr=0x0000ffff90943718 *=0x0000fff928120f48 offset=0]metadata_value=0x0000fff928120f48: {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff90941cee: 3006
relocInfo@0x0000ffff90941cee [type=6(runtime_call) addr=0x0000ffff90943160 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cf0: 781a6004
relocInfo@0x0000ffff90941cf2 [type=12(metadata) addr=0x0000ffff90943170 offset=16 data=26] | [metadata_addr=0x0000ffff90943720 *=0x0000fff9280572d0 offset=0]metadata_value=0x0000fff9280572d0: {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941cf4: 3006
relocInfo@0x0000ffff90941cf4 [type=6(runtime_call) addr=0x0000ffff90943188 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cf6: 782f6004
relocInfo@0x0000ffff90941cf8 [type=12(metadata) addr=0x0000ffff90943198 offset=16 data=47] | [metadata_addr=0x0000ffff909437c8 *=0x0000fff92811d190 offset=0]metadata_value=0x0000fff92811d190: {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff90941cfa: 3006
relocInfo@0x0000ffff90941cfa [type=6(runtime_call) addr=0x0000ffff909431b0 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941cfc: 78306004
relocInfo@0x0000ffff90941cfe [type=12(metadata) addr=0x0000ffff909431c0 offset=16 data=48] | [metadata_addr=0x0000ffff909437d0 *=0x0000fff9280f2b08 offset=0]metadata_value=0x0000fff9280f2b08: {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90941d00: 3006
relocInfo@0x0000ffff90941d00 [type=6(runtime_call) addr=0x0000ffff909431d8 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d02: 78316004
relocInfo@0x0000ffff90941d04 [type=12(metadata) addr=0x0000ffff909431e8 offset=16 data=49] | [metadata_addr=0x0000ffff909437d8 *=0x0000fff928058a08 offset=0]metadata_value=0x0000fff928058a08: {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941d06: 3006
relocInfo@0x0000ffff90941d06 [type=6(runtime_call) addr=0x0000ffff90943200 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d08: 782d6004
relocInfo@0x0000ffff90941d0a [type=12(metadata) addr=0x0000ffff90943210 offset=16 data=45] | [metadata_addr=0x0000ffff909437b8 *=0x000000fc000abc28 offset=0]metadata_value=0x000000fc000abc28: {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90941d0c: 3006
relocInfo@0x0000ffff90941d0c [type=6(runtime_call) addr=0x0000ffff90943228 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d0e: 782e6004
relocInfo@0x0000ffff90941d10 [type=12(metadata) addr=0x0000ffff90943238 offset=16 data=46] | [metadata_addr=0x0000ffff909437c0 *=0x0000fff928400a28 offset=0]metadata_value=0x0000fff928400a28: {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90941d12: 3006
relocInfo@0x0000ffff90941d12 [type=6(runtime_call) addr=0x0000ffff90943250 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d14: 3005
relocInfo@0x0000ffff90941d14 [type=6(runtime_call) addr=0x0000ffff90943264 offset=20] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff90941d16: 781d6006
relocInfo@0x0000ffff90941d18 [type=12(metadata) addr=0x0000ffff9094327c offset=24 data=29] | [metadata_addr=0x0000ffff90943738 *=0x000000fc00175e78 offset=0]metadata_value=0x000000fc00175e78: {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff90941d1a: 3006
relocInfo@0x0000ffff90941d1a [type=6(runtime_call) addr=0x0000ffff90943294 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d1c: 781e6004
relocInfo@0x0000ffff90941d1e [type=12(metadata) addr=0x0000ffff909432a4 offset=16 data=30] | [metadata_addr=0x0000ffff90943740 *=0x000000fc002c9b80 offset=0]metadata_value=0x000000fc002c9b80: {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff90941d20: 3006
relocInfo@0x0000ffff90941d20 [type=6(runtime_call) addr=0x0000ffff909432bc offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d22: 3004
relocInfo@0x0000ffff90941d22 [type=6(runtime_call) addr=0x0000ffff909432cc offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941d24: 3008
relocInfo@0x0000ffff90941d24 [type=6(runtime_call) addr=0x0000ffff909432ec offset=32] | [destination=0x0000ffff97d530c0]
         @0x0000ffff90941d26: 7c0497d58e800000ffff380a
relocInfo@0x0000ffff90941d30 [type=7(external_word) addr=0x0000ffff90943314 offset=40 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90941d32: 3005
relocInfo@0x0000ffff90941d32 [type=6(runtime_call) addr=0x0000ffff90943328 offset=20] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941d34: 7c0497d58e800000ffff3809
relocInfo@0x0000ffff90941d3e [type=7(external_word) addr=0x0000ffff9094334c offset=36 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90941d40: 3007
relocInfo@0x0000ffff90941d40 [type=6(runtime_call) addr=0x0000ffff90943368 offset=28] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff90941d42: 3006
relocInfo@0x0000ffff90941d42 [type=6(runtime_call) addr=0x0000ffff90943380 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941d44: 3006
relocInfo@0x0000ffff90941d44 [type=6(runtime_call) addr=0x0000ffff90943398 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941d46: 78226006
relocInfo@0x0000ffff90941d48 [type=12(metadata) addr=0x0000ffff909433b0 offset=24 data=34] | [metadata_addr=0x0000ffff90943760 *=0x0000fff9280505a8 offset=0]metadata_value=0x0000fff9280505a8: {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941d4a: 3006
relocInfo@0x0000ffff90941d4a [type=6(runtime_call) addr=0x0000ffff909433c8 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d4c: 3004
relocInfo@0x0000ffff90941d4c [type=6(runtime_call) addr=0x0000ffff909433d8 offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90941d4e: 78266006
relocInfo@0x0000ffff90941d50 [type=12(metadata) addr=0x0000ffff909433f0 offset=24 data=38] | [metadata_addr=0x0000ffff90943780 *=0x0000fff928050690 offset=0]metadata_value=0x0000fff928050690: {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941d52: 3006
relocInfo@0x0000ffff90941d52 [type=6(runtime_call) addr=0x0000ffff90943408 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d54: 78276004
relocInfo@0x0000ffff90941d56 [type=12(metadata) addr=0x0000ffff90943418 offset=16 data=39] | [metadata_addr=0x0000ffff90943788 *=0x0000fff92804f590 offset=0]metadata_value=0x0000fff92804f590: {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90941d58: 3006
relocInfo@0x0000ffff90941d58 [type=6(runtime_call) addr=0x0000ffff90943430 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d5a: 78076004
relocInfo@0x0000ffff90941d5c [type=12(metadata) addr=0x0000ffff90943440 offset=16 data=7] | [metadata_addr=0x0000ffff90943688 *=0x0000fff928401c58 offset=0]metadata_value=0x0000fff928401c58: {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90941d5e: 3006
relocInfo@0x0000ffff90941d5e [type=6(runtime_call) addr=0x0000ffff90943458 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90941d60: 794d4004
relocInfo@0x0000ffff90941d62 [type=8(internal_word) addr=0x0000ffff90943468 offset=16 data=333] | [target=0x0000ffff90942f34]
         @0x0000ffff90941d64: 3002
relocInfo@0x0000ffff90941d64 [type=6(runtime_call) addr=0x0000ffff90943470 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff90941d66: 3008
relocInfo@0x0000ffff90941d66 [type=6(runtime_call) addr=0x0000ffff90943490 offset=32] | [destination=0x0000ffff97d52a80]
         @0x0000ffff90941d68: 0004
relocInfo@0x0000ffff90941d68 [type=0(none) addr=0x0000ffff909434a0 offset=16]
         @0x0000ffff90941d6a: 7c01ff176800
relocInfo@0x0000ffff90941d6e [type=13(trampoline_stub) addr=0x0000ffff909434a0 offset=0 data=-233] | [trampoline owner=0x0000ffff909421a4]
         @0x0000ffff90941d70: 7c01fda36804
relocInfo@0x0000ffff90941d74 [type=13(trampoline_stub) addr=0x0000ffff909434b0 offset=16 data=-605] | [trampoline owner=0x0000ffff90942774]
         @0x0000ffff90941d76: 7c01fd156804
relocInfo@0x0000ffff90941d7a [type=13(trampoline_stub) addr=0x0000ffff909434c0 offset=16 data=-747] | [trampoline owner=0x0000ffff909429ac]
         @0x0000ffff90941d7c: 7c01fc8b2804
relocInfo@0x0000ffff90941d80 [type=5(static_stub) addr=0x0000ffff909434d0 offset=16 data=-885] | [static_call=0x0000ffff90942bd4]
         @0x0000ffff90941d82: 78216001
relocInfo@0x0000ffff90941d84 [type=12(metadata) addr=0x0000ffff909434d4 offset=4 data=33] | [metadata_addr=0x0000ffff90943758 *=0x0000000000000000 offset=0]
         @0x0000ffff90941d86: 7c01fc886807
relocInfo@0x0000ffff90941d8a [type=13(trampoline_stub) addr=0x0000ffff909434f0 offset=28 data=-888] | [trampoline owner=0x0000ffff90942be0]
         @0x0000ffff90941d8c: 7c01fc372804
relocInfo@0x0000ffff90941d90 [type=5(static_stub) addr=0x0000ffff90943500 offset=16 data=-969] | [static_call=0x0000ffff90942d24]
         @0x0000ffff90941d92: 78256001
relocInfo@0x0000ffff90941d94 [type=12(metadata) addr=0x0000ffff90943504 offset=4 data=37] | [metadata_addr=0x0000ffff90943778 *=0x0000000000000000 offset=0]
         @0x0000ffff90941d96: 7c01fc346807
relocInfo@0x0000ffff90941d9a [type=13(trampoline_stub) addr=0x0000ffff90943520 offset=28 data=-972] | [trampoline owner=0x0000ffff90942d30]
         @0x0000ffff90941d9c: 7c01fc042804
relocInfo@0x0000ffff90941da0 [type=5(static_stub) addr=0x0000ffff90943530 offset=16 data=-1020] | [static_call=0x0000ffff90942df0]
         @0x0000ffff90941da2: 78286001
relocInfo@0x0000ffff90941da4 [type=12(metadata) addr=0x0000ffff90943534 offset=4 data=40] | [metadata_addr=0x0000ffff90943790 *=0x0000000000000000 offset=0]
         @0x0000ffff90941da6: 7c01fc016807
relocInfo@0x0000ffff90941daa [type=13(trampoline_stub) addr=0x0000ffff90943550 offset=28 data=-1023] | [trampoline owner=0x0000ffff90942dfc]
         @0x0000ffff90941dac: 7c01fda32804
relocInfo@0x0000ffff90941db0 [type=5(static_stub) addr=0x0000ffff90943560 offset=16 data=-605] | [static_call=0x0000ffff90942774]
         @0x0000ffff90941db2: 78296001
relocInfo@0x0000ffff90941db4 [type=12(metadata) addr=0x0000ffff90943564 offset=4 data=41] | [metadata_addr=0x0000ffff90943798 *=0x0000000000000000 offset=0]
         @0x0000ffff90941db6: 7c01fd152807
relocInfo@0x0000ffff90941dba [type=5(static_stub) addr=0x0000ffff90943580 offset=28 data=-747] | [static_call=0x0000ffff909429ac]
         @0x0000ffff90941dbc: 782a6001
relocInfo@0x0000ffff90941dbe [type=12(metadata) addr=0x0000ffff90943584 offset=4 data=42] | [metadata_addr=0x0000ffff909437a0 *=0x0000000000000000 offset=0]
         @0x0000ffff90941dc0: 7c01ff172807
relocInfo@0x0000ffff90941dc4 [type=5(static_stub) addr=0x0000ffff909435a0 offset=28 data=-233] | [static_call=0x0000ffff909421a4]
         @0x0000ffff90941dc6: 782b6001
relocInfo@0x0000ffff90941dc8 [type=12(metadata) addr=0x0000ffff909435a4 offset=4 data=43] | [metadata_addr=0x0000ffff909437a8 *=0x0000000000000000 offset=0]
         @0x0000ffff90941dca: 300b
relocInfo@0x0000ffff90941dca [type=6(runtime_call) addr=0x0000ffff909435d0 offset=44] | [destination=0x0000ffff97d557c0]
         @0x0000ffff90941dcc: 3007
relocInfo@0x0000ffff90941dcc [type=6(runtime_call) addr=0x0000ffff909435ec offset=28] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff90941dce: 0000
relocInfo@0x0000ffff90941dce [type=0(none) addr=0x0000ffff909435ec offset=0]
         @0x0000ffff90941dd0: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
Dependency of type evol_method
  method  = *{method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = *{method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 6 entries, 52 bytes):
{
   < 0x0000ffff9094229c, 0x0000ffff90943028 > < 0x0000ffff909429c4, 0x0000ffff909432cc > < 0x0000ffff909429e8, 0x0000ffff90943328 > 
   < 0x0000ffff90942acc, 0x0000ffff90943380 > < 0x0000ffff90942ad0, 0x0000ffff90943398 > < 0x0000ffff90942bf0, 0x0000ffff909433d8 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
# 2: 0x0000080000aa29c8 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8}
# 3: 0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
# 4: 0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
# 5: 0x0000080000abf6a8 a 'jdk/incubator/vector/Float128Vector'{0x0000080000abf6a8}
# 6: 0x0000080000acb8b0 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0}
# 7: 0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
# 8: 0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
# 9: 0x0000080000aa2c10 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
#10: 0x0000080000acbaf8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
#11: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
#12: 0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000fff92841cca8 method data for {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 2: 0x0000fff928218ce8 method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 3: 0x0000fff928212e20 method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
# 4: 0x0000fff928207f98 method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
# 5: 0x0000fff928400c90 method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
# 6: 0x000000fc01054180 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'
# 7: 0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 8: 0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 9: 0x000000fc01042278 'jdk/incubator/vector/FloatVector'
#10: 0x0000fff928213768 method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#11: 0x0000fff9282139f8 method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#12: 0x0000fff928212238 method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#13: 0x0000fff92820a4d0 method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#14: 0x0000fff92820a6c0 method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#15: 0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#16: 0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#17: 0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#18: 0x0000fff928213c38 method data for {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#19: 0x0000fff928213de8 method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#20: 0x0000fff92820ae38 method data for {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
#21: 0x0000fff92820ab10 method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#22: 0x0000fff9282140d8 method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#23: 0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#24: 0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#25: 0x0000fff928120f48 {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#26: 0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#27: 0x0000fff9282127f0 method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
#28: 0x0000fff9282129c8 method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#29: 0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
#30: 0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#31: 0x000000fc01001450 'InnerFloat'
#32: 0x0000fff928214e50 method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#33: 0x0000000000000000 nullptr-oop
#34: 0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#35: 0x0000fff928215038 method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#36: 0x0000fff928215220 method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#37: 0x0000000000000000 nullptr-oop
#38: 0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#39: 0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#40: 0x0000000000000000 nullptr-oop
#41: 0x0000000000000000 nullptr-oop
#42: 0x0000000000000000 nullptr-oop
#43: 0x0000000000000000 nullptr-oop
#44: 0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
#45: 0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#46: 0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
#47: 0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
#48: 0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#49: 0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#50: 0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#51: 0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#52: 0x000000fc00034a08 {method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
#53: 0x0000fff928020148 {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
#54: 0x000000fc0047ba60 {method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
#55: 0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1) 5322  554       3       TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED (86 bytes)
 total in heap  [0x0000ffff90944210,0x0000ffff90946990] = 10112
 relocation     [0x0000ffff90944380,0x0000ffff90944648] = 712
 main code      [0x0000ffff90944680,0x0000ffff90945c78] = 5624
 stub code      [0x0000ffff90945c78,0x0000ffff90945dd0] = 344
 oops           [0x0000ffff90945dd0,0x0000ffff90945e30] = 96
 metadata       [0x0000ffff90945e30,0x0000ffff90945fe0] = 432
 scopes data    [0x0000ffff90945fe0,0x0000ffff90946490] = 1200
 scopes pcs     [0x0000ffff90946490,0x0000ffff90946920] = 1168
 dependencies   [0x0000ffff90946920,0x0000ffff90946958] = 56
 nul chk table  [0x0000ffff90946958,0x0000ffff90946990] = 56

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;;  block B66 [0, 0]
  0x0000ffff90944680:   nop
  0x0000ffff90944684:   nop
  0x0000ffff90944688:   nop
  0x0000ffff9094468c:   nop
  0x0000ffff90944690:   nop
  0x0000ffff90944694:   nop
  0x0000ffff90944698:   nop
  0x0000ffff9094469c:   nop
  0x0000ffff909446a0:   nop
[Entry Point]
  # {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[F'
  # parm1:    c_rarg3:c_rarg3 
                        = '[LOuter;'
  #           [sp+0x150]  (sp of caller)
  0x0000ffff909446a4:   ldr	w8, [x1, #8]
  0x0000ffff909446a8:   ldr	w10, [x9, #8]
  0x0000ffff909446ac:   cmp	w8, w10
  0x0000ffff909446b0:   b.eq	0x0000ffff909446c0  // b.none
  0x0000ffff909446b4:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff909446b8:   add	x8, x8, #0xec0
  0x0000ffff909446bc:   br	x8
[Verified Entry Point]
  0x0000ffff909446c0:   nop
  0x0000ffff909446c4:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff909446c8:   str	xzr, [x9]
  0x0000ffff909446cc:   sub	sp, sp, #0x150
  0x0000ffff909446d0:   stp	x29, x30, [sp, #320]
  0x0000ffff909446d4:   ldrb	w8, [x28, #1208]
  0x0000ffff909446d8:   cbz	x8, 0x0000ffff909446f0
 ;; 0xFFFFAECE431C
  0x0000ffff909446dc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff909446e0:   movk	x8, #0xaece, lsl #16
  0x0000ffff909446e4:   movk	x8, #0xffff, lsl #32
  0x0000ffff909446e8:   mov	x0, x28
  0x0000ffff909446ec:   blr	x8
  0x0000ffff909446f0:   ldr	w8, 0x0000ffff9094472c
 ;; 0xFFFFB0903FF8
  0x0000ffff909446f4:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff909446f8:   movk	x9, #0xb090, lsl #16
  0x0000ffff909446fc:   movk	x9, #0xffff, lsl #32
  0x0000ffff90944700:   orr	x9, x9, x8, lsr #32
  0x0000ffff90944704:   ldr	w9, [x9]
  0x0000ffff90944708:   orr	x8, x8, x9, lsl #32
  0x0000ffff9094470c:   ldr	x9, [x28, #88]
  0x0000ffff90944710:   cmp	x8, x9
  0x0000ffff90944714:   b.eq	0x0000ffff90944730  // b.none
 ;; 0xFFFF97C263C0
  0x0000ffff90944718:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff9094471c:   movk	x8, #0x97c2, lsl #16
  0x0000ffff90944720:   movk	x8, #0xffff, lsl #32
  0x0000ffff90944724:   blr	x8
  0x0000ffff90944728:   b	0x0000ffff90944730
  0x0000ffff9094472c:   udf	#58640
  0x0000ffff90944730:   str	x2, [sp, #248]
  0x0000ffff90944734:   str	x3, [sp, #256]
 ;; 0xFFF92841CFB0
  0x0000ffff90944738:   mov	x4, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff9094473c:   movk	x4, #0x2841, lsl #16
  0x0000ffff90944740:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944744:   ldr	w5, [x4, #292]
  0x0000ffff90944748:   add	w5, w5, #0x2
  0x0000ffff9094474c:   str	w5, [x4, #292]
  0x0000ffff90944750:   and	w5, w5, #0x7fe
  0x0000ffff90944754:   cmp	w5, #0x0
 ;;   22 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8324410]
  0x0000ffff90944758:   b.eq	0x0000ffff9094571c  // b.none;*getstatic SPECIES_PREFERRED {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@0 (line 58)
 ;;  block B67 [0, 0]
 ;;  block B0 [0, 13]
 ;; 0xFFF92841CFB0
  0x0000ffff9094475c:   mov	x1, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90944760:   movk	x1, #0x2841, lsl #16
  0x0000ffff90944764:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944768:   ldr	x8, [x1, #368]
  0x0000ffff9094476c:   add	x8, x8, #0x1
  0x0000ffff90944770:   str	x8, [x1, #368]
 ;; 0xFFF928218CE8
  0x0000ffff90944774:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944778:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094477c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944780:   ldr	w4, [x1, #292]
  0x0000ffff90944784:   add	w4, w4, #0x2
  0x0000ffff90944788:   str	w4, [x1, #292]
  0x0000ffff9094478c:   and	w4, w4, #0x1ffffe
  0x0000ffff90944790:   cmp	w4, #0x0
 ;;   48 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8324da0]
  0x0000ffff90944794:   b.eq	0x0000ffff90945744  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff90944798:   mov	x6, #0x7280                	// #29312
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280})}
  0x0000ffff9094479c:   movk	x6, #0xa9, lsl #16
  0x0000ffff909447a0:   movk	x6, #0x800, lsl #32
  0x0000ffff909447a4:   mov	x1, x6
 ;; 0xFFF928218CE8
  0x0000ffff909447a8:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909447ac:   movk	x4, #0x2821, lsl #16
  0x0000ffff909447b0:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909447b4:   ldr	x8, [x4, #416]
  0x0000ffff909447b8:   add	x8, x8, #0x1
  0x0000ffff909447bc:   str	x8, [x4, #416]
  0x0000ffff909447c0:   mov	x1, x6
 ;; 0xFFF928218CE8
  0x0000ffff909447c4:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909447c8:   movk	x4, #0x2821, lsl #16
  0x0000ffff909447cc:   movk	x4, #0xfff9, lsl #32
  0x0000ffff909447d0:   ldr	w1, [x1, #8]
  0x0000ffff909447d4:   eor	x1, x1, #0xfc00000000
  0x0000ffff909447d8:   add	x9, x4, #0x1d8
  0x0000ffff909447dc:   ldr	x8, [x9]
  0x0000ffff909447e0:   cmp	x1, x8
  0x0000ffff909447e4:   b.ne	0x0000ffff909447f8  // b.any
  0x0000ffff909447e8:   ldr	x8, [x4, #480]
  0x0000ffff909447ec:   add	x8, x8, #0x1
  0x0000ffff909447f0:   str	x8, [x4, #480]
  0x0000ffff909447f4:   b	0x0000ffff90944864
  0x0000ffff909447f8:   add	x9, x4, #0x1e8
  0x0000ffff909447fc:   ldr	x8, [x9]
  0x0000ffff90944800:   cmp	x1, x8
  0x0000ffff90944804:   b.ne	0x0000ffff90944818  // b.any
  0x0000ffff90944808:   ldr	x8, [x4, #496]
  0x0000ffff9094480c:   add	x8, x8, #0x1
  0x0000ffff90944810:   str	x8, [x4, #496]
  0x0000ffff90944814:   b	0x0000ffff90944864
  0x0000ffff90944818:   add	x9, x4, #0x1d8
  0x0000ffff9094481c:   ldr	x8, [x9]
  0x0000ffff90944820:   cbnz	x8, 0x0000ffff90944838
  0x0000ffff90944824:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90944828:   orr	x8, xzr, #0x1
  0x0000ffff9094482c:   add	x9, x4, #0x1e0
  0x0000ffff90944830:   str	x8, [x9]
  0x0000ffff90944834:   b	0x0000ffff90944864
  0x0000ffff90944838:   add	x9, x4, #0x1e8
  0x0000ffff9094483c:   ldr	x8, [x9]
  0x0000ffff90944840:   cbnz	x8, 0x0000ffff90944858
  0x0000ffff90944844:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90944848:   orr	x8, xzr, #0x1
  0x0000ffff9094484c:   add	x9, x4, #0x1f0
  0x0000ffff90944850:   str	x8, [x9]
  0x0000ffff90944854:   b	0x0000ffff90944864
  0x0000ffff90944858:   ldr	x8, [x4, #464]
  0x0000ffff9094485c:   add	x8, x8, #0x1
  0x0000ffff90944860:   str	x8, [x4, #464]
 ;; 0xFFF928218CE8
  0x0000ffff90944864:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944868:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094486c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944870:   ldr	x8, [x1, #512]
  0x0000ffff90944874:   add	x8, x8, #0x1
  0x0000ffff90944878:   str	x8, [x1, #512]
 ;; 0xFFF928212E20
  0x0000ffff9094487c:   mov	x1, #0x2e20                	// #11808
                                                            ;   {metadata(method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944880:   movk	x1, #0x2821, lsl #16
  0x0000ffff90944884:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944888:   ldr	w4, [x1, #292]
  0x0000ffff9094488c:   add	w4, w4, #0x2
  0x0000ffff90944890:   str	w4, [x1, #292]
  0x0000ffff90944894:   and	w4, w4, #0x1ffffe
  0x0000ffff90944898:   cmp	w4, #0x0
 ;;   76 branch [EQ]   [CounterOverflowStub: 0x0000fff8f810ddf8]
  0x0000ffff9094489c:   b.eq	0x0000ffff9094576c  // b.none
 ;; 0xFFF928212E20
  0x0000ffff909448a0:   mov	x1, #0x2e20                	// #11808
                                                            ;   {metadata(method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909448a4:   movk	x1, #0x2821, lsl #16
  0x0000ffff909448a8:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909448ac:   ldr	x8, [x1, #368]
  0x0000ffff909448b0:   add	x8, x8, #0x1
  0x0000ffff909448b4:   str	x8, [x1, #368]
 ;; 0xFFF928218CE8
  0x0000ffff909448b8:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909448bc:   movk	x1, #0x2821, lsl #16
  0x0000ffff909448c0:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909448c4:   ldr	x8, [x1, #528]
  0x0000ffff909448c8:   add	x8, x8, #0x1
  0x0000ffff909448cc:   str	x8, [x1, #528]
 ;; 0xFFF928207F98
  0x0000ffff909448d0:   mov	x1, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff909448d4:   movk	x1, #0x2820, lsl #16
  0x0000ffff909448d8:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909448dc:   ldr	w4, [x1, #292]
  0x0000ffff909448e0:   add	w4, w4, #0x2
  0x0000ffff909448e4:   str	w4, [x1, #292]
  0x0000ffff909448e8:   and	w4, w4, #0x1ffffe
  0x0000ffff909448ec:   cmp	w4, #0x0
 ;;   96 branch [EQ]   [CounterOverflowStub: 0x0000fff8f810e530]
  0x0000ffff909448f0:   b.eq	0x0000ffff90945794  // b.none
 ;; 0xFFF928207F98
  0x0000ffff909448f4:   mov	x1, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff909448f8:   movk	x1, #0x2820, lsl #16
  0x0000ffff909448fc:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944900:   ldr	x8, [x1, #416]
  0x0000ffff90944904:   add	x8, x8, #0x1
  0x0000ffff90944908:   str	x8, [x1, #416]
 ;; 0xFFF928400C90
  0x0000ffff9094490c:   mov	x1, #0xc90                 	// #3216
                                                            ;   {metadata(method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff90944910:   movk	x1, #0x2840, lsl #16
  0x0000ffff90944914:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90944918:   ldr	w4, [x1, #292]
  0x0000ffff9094491c:   add	w4, w4, #0x2
  0x0000ffff90944920:   str	w4, [x1, #292]
  0x0000ffff90944924:   and	w4, w4, #0x1ffffe
  0x0000ffff90944928:   cmp	w4, #0x0
 ;;  114 branch [EQ]   [CounterOverflowStub: 0x0000fff8f810ee00]
  0x0000ffff9094492c:   b.eq	0x0000ffff909457bc  // b.none
 ;; 0xFFF928218CE8
  0x0000ffff90944930:   mov	x1, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944934:   movk	x1, #0x2821, lsl #16
  0x0000ffff90944938:   movk	x1, #0xfff9, lsl #32
  0x0000ffff9094493c:   ldr	x8, [x1, #560]
  0x0000ffff90944940:   add	x8, x8, #0x1
  0x0000ffff90944944:   str	x8, [x1, #560]
 ;; 0xFFF8F8022210
  0x0000ffff90944948:   mov	x1, #0x72f0                	// #29424
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff9094494c:   movk	x1, #0xa9, lsl #16
  0x0000ffff90944950:   movk	x1, #0x800, lsl #32
 ;; 0xFFF8F8022220
  0x0000ffff90944954:   mov	x4, #0x570                 	// #1392
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000000570} = float)}
  0x0000ffff90944958:   movk	x4, #0x0, lsl #16
  0x0000ffff9094495c:   movk	x4, #0x800, lsl #32
 ;; 0xFFF8F8022238
  0x0000ffff90944960:   mov	x7, #0x29c8                	// #10696
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8})}
  0x0000ffff90944964:   movk	x7, #0xaa, lsl #16
  0x0000ffff90944968:   movk	x7, #0x800, lsl #32
  0x0000ffff9094496c:   mov	x2, x4
 ;; 0x40
  0x0000ffff90944970:   orr	w3, wzr, #0x40
 ;; 0x0
  0x0000ffff90944974:   mov	x4, #0x0                   	// #0
 ;; 0x0
  0x0000ffff90944978:   movz	w5, #0x0, lsl #16           ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff9094497c:   bl	0x0000ffff90945c78          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
                                                            ;   {static_call}
  0x0000ffff90944980:   nop                                 ;   {other}
  0x0000ffff90944984:   movk	xzr, #0x770
  0x0000ffff90944988:   movk	xzr, #0x0                   ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
 ;; 0xFFF928218CE8
  0x0000ffff9094498c:   mov	x4, #0x8ce8                	// #36072
                                                            ;   {metadata(method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944990:   movk	x4, #0x2821, lsl #16
  0x0000ffff90944994:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944998:   cbnz	x0, 0x0000ffff909449ac
  0x0000ffff9094499c:   ldrb	w8, [x4, #569]
  0x0000ffff909449a0:   orr	x8, x8, #0x1
  0x0000ffff909449a4:   strb	w8, [x4, #569]
  0x0000ffff909449a8:   b	0x0000ffff90944a64
  0x0000ffff909449ac:   ldr	w3, [x0, #8]
  0x0000ffff909449b0:   eor	x3, x3, #0xfc00000000
  0x0000ffff909449b4:   add	x9, x4, #0x248
  0x0000ffff909449b8:   ldr	x8, [x9]
  0x0000ffff909449bc:   cmp	x3, x8
  0x0000ffff909449c0:   b.ne	0x0000ffff909449d4  // b.any
  0x0000ffff909449c4:   ldr	x8, [x4, #592]
  0x0000ffff909449c8:   add	x8, x8, #0x1
  0x0000ffff909449cc:   str	x8, [x4, #592]
  0x0000ffff909449d0:   b	0x0000ffff90944a40
  0x0000ffff909449d4:   add	x9, x4, #0x258
  0x0000ffff909449d8:   ldr	x8, [x9]
  0x0000ffff909449dc:   cmp	x3, x8
  0x0000ffff909449e0:   b.ne	0x0000ffff909449f4  // b.any
  0x0000ffff909449e4:   ldr	x8, [x4, #608]
  0x0000ffff909449e8:   add	x8, x8, #0x1
  0x0000ffff909449ec:   str	x8, [x4, #608]
  0x0000ffff909449f0:   b	0x0000ffff90944a40
  0x0000ffff909449f4:   add	x9, x4, #0x248
  0x0000ffff909449f8:   ldr	x8, [x9]
  0x0000ffff909449fc:   cbnz	x8, 0x0000ffff90944a14
  0x0000ffff90944a00:   str	x3, [x9]
 ;; 0x1
  0x0000ffff90944a04:   orr	x8, xzr, #0x1
  0x0000ffff90944a08:   add	x9, x4, #0x250
  0x0000ffff90944a0c:   str	x8, [x9]
  0x0000ffff90944a10:   b	0x0000ffff90944a40
  0x0000ffff90944a14:   add	x9, x4, #0x258
  0x0000ffff90944a18:   ldr	x8, [x9]
  0x0000ffff90944a1c:   cbnz	x8, 0x0000ffff90944a34
  0x0000ffff90944a20:   str	x3, [x9]
 ;; 0x1
  0x0000ffff90944a24:   orr	x8, xzr, #0x1
  0x0000ffff90944a28:   add	x9, x4, #0x260
  0x0000ffff90944a2c:   str	x8, [x9]
  0x0000ffff90944a30:   b	0x0000ffff90944a40
  0x0000ffff90944a34:   ldr	x8, [x4, #576]
  0x0000ffff90944a38:   add	x8, x8, #0x1
  0x0000ffff90944a3c:   str	x8, [x4, #576]
 ;; 0xFC01042278
  0x0000ffff90944a40:   mov	x3, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff90944a44:   movk	x3, #0x104, lsl #16
  0x0000ffff90944a48:   movk	x3, #0xfc, lsl #32
  0x0000ffff90944a4c:   ldr	w4, [x0, #8]
  0x0000ffff90944a50:   eor	x4, x4, #0xfc00000000
  0x0000ffff90944a54:   ldr	x8, [x4, #96]
  0x0000ffff90944a58:   cmp	x3, x8
  0x0000ffff90944a5c:   b.ne	0x0000ffff909457e4  // b.any
  0x0000ffff90944a60:   b	0x0000ffff90944a64
  0x0000ffff90944a64:   mov	x1, x0                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@32 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
 ;; 0x0
  0x0000ffff90944a68:   movz	w10, #0x0, lsl #16          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@13 (line 61)
 ;;  block B1 [13, 17]
  0x0000ffff90944a6c:   str	x1, [sp, #264]
  0x0000ffff90944a70:   ldr	x2, [sp, #248]
  0x0000ffff90944a74:   ldr	w4, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff90945800
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
  0x0000ffff90944a78:   cmp	w10, w4
 ;; 0xFFF92841CFB0
  0x0000ffff90944a7c:   mov	x5, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90944a80:   movk	x5, #0x2841, lsl #16
  0x0000ffff90944a84:   movk	x5, #0xfff9, lsl #32
 ;; 0x180
  0x0000ffff90944a88:   orr	x8, xzr, #0x180
 ;; 0x190
  0x0000ffff90944a8c:   mov	x9, #0x190                 	// #400
  0x0000ffff90944a90:   csel	x6, x8, x9, ge  // ge = tcont
  0x0000ffff90944a94:   ldr	x7, [x5, x6]
  0x0000ffff90944a98:   add	x7, x7, #0x1
  0x0000ffff90944a9c:   str	x7, [x5, x6]
 ;;  168 branch [GE]   [B3] 
  0x0000ffff90944aa0:   b.ge	0x0000ffff90945704  // b.tcont;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
 ;;  block B2 [20, 3]
 ;; 0xFFF92841CFB0
  0x0000ffff90944aa4:   mov	x5, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90944aa8:   movk	x5, #0x2841, lsl #16
  0x0000ffff90944aac:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944ab0:   ldr	x8, [x5, #416]
  0x0000ffff90944ab4:   add	x8, x8, #0x1
  0x0000ffff90944ab8:   str	x8, [x5, #416]
 ;; 0xFFF928213768
  0x0000ffff90944abc:   mov	x5, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944ac0:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944ac4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944ac8:   ldr	w6, [x5, #292]
  0x0000ffff90944acc:   add	w6, w6, #0x2
  0x0000ffff90944ad0:   str	w6, [x5, #292]
  0x0000ffff90944ad4:   and	w6, w6, #0x1ffffe
  0x0000ffff90944ad8:   cmp	w6, #0x0
 ;;  188 branch [EQ]   [CounterOverflowStub: 0x0000fff8f81111f8]
  0x0000ffff90944adc:   b.eq	0x0000ffff90945818  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff90944ae0:   mov	x5, #0x7280                	// #29312
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280})}
  0x0000ffff90944ae4:   movk	x5, #0xa9, lsl #16
  0x0000ffff90944ae8:   movk	x5, #0x800, lsl #32
 ;; 0xFFF928213768
  0x0000ffff90944aec:   mov	x6, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944af0:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944af4:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944af8:   ldr	w5, [x5, #8]
  0x0000ffff90944afc:   eor	x5, x5, #0xfc00000000
  0x0000ffff90944b00:   add	x9, x6, #0x178
  0x0000ffff90944b04:   ldr	x8, [x9]
  0x0000ffff90944b08:   cmp	x5, x8
  0x0000ffff90944b0c:   b.ne	0x0000ffff90944b20  // b.any
  0x0000ffff90944b10:   ldr	x8, [x6, #384]
  0x0000ffff90944b14:   add	x8, x8, #0x1
  0x0000ffff90944b18:   str	x8, [x6, #384]
  0x0000ffff90944b1c:   b	0x0000ffff90944b8c
  0x0000ffff90944b20:   add	x9, x6, #0x188
  0x0000ffff90944b24:   ldr	x8, [x9]
  0x0000ffff90944b28:   cmp	x5, x8
  0x0000ffff90944b2c:   b.ne	0x0000ffff90944b40  // b.any
  0x0000ffff90944b30:   ldr	x8, [x6, #400]
  0x0000ffff90944b34:   add	x8, x8, #0x1
  0x0000ffff90944b38:   str	x8, [x6, #400]
  0x0000ffff90944b3c:   b	0x0000ffff90944b8c
  0x0000ffff90944b40:   add	x9, x6, #0x178
  0x0000ffff90944b44:   ldr	x8, [x9]
  0x0000ffff90944b48:   cbnz	x8, 0x0000ffff90944b60
  0x0000ffff90944b4c:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90944b50:   orr	x8, xzr, #0x1
  0x0000ffff90944b54:   add	x9, x6, #0x180
  0x0000ffff90944b58:   str	x8, [x9]
  0x0000ffff90944b5c:   b	0x0000ffff90944b8c
  0x0000ffff90944b60:   add	x9, x6, #0x188
  0x0000ffff90944b64:   ldr	x8, [x9]
  0x0000ffff90944b68:   cbnz	x8, 0x0000ffff90944b80
  0x0000ffff90944b6c:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90944b70:   orr	x8, xzr, #0x1
  0x0000ffff90944b74:   add	x9, x6, #0x190
  0x0000ffff90944b78:   str	x8, [x9]
  0x0000ffff90944b7c:   b	0x0000ffff90944b8c
  0x0000ffff90944b80:   ldr	x8, [x6, #368]
  0x0000ffff90944b84:   add	x8, x8, #0x1
  0x0000ffff90944b88:   str	x8, [x6, #368]
 ;; 0xFFF928213768
  0x0000ffff90944b8c:   mov	x5, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944b90:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944b94:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944b98:   ldr	x8, [x5, #416]
  0x0000ffff90944b9c:   add	x8, x8, #0x1
  0x0000ffff90944ba0:   str	x8, [x5, #416]
 ;; 0xFFF9282139F8
  0x0000ffff90944ba4:   mov	x5, #0x39f8                	// #14840
                                                            ;   {metadata(method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff90944ba8:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944bac:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944bb0:   ldr	w6, [x5, #292]
  0x0000ffff90944bb4:   add	w6, w6, #0x2
  0x0000ffff90944bb8:   str	w6, [x5, #292]
  0x0000ffff90944bbc:   and	w6, w6, #0x1ffffe
  0x0000ffff90944bc0:   cmp	w6, #0x0
 ;;  212 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8112b18]
  0x0000ffff90944bc4:   b.eq	0x0000ffff90945840  // b.none
 ;;  block B24 [37, 12]
 ;; 0xFFF9282139F8
  0x0000ffff90944bc8:   mov	x5, #0x39f8                	// #14840
                                                            ;   {metadata(method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff90944bcc:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944bd0:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944bd4:   ldr	x8, [x5, #464]
  0x0000ffff90944bd8:   add	x8, x8, #0x1
  0x0000ffff90944bdc:   str	x8, [x5, #464]
  0x0000ffff90944be0:   sub	w4, w4, #0x3f
 ;; 0xFFF928212238
  0x0000ffff90944be4:   mov	x5, #0x2238                	// #8760
                                                            ;   {metadata(method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff90944be8:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944bec:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944bf0:   ldr	w6, [x5, #292]
  0x0000ffff90944bf4:   add	w6, w6, #0x2
  0x0000ffff90944bf8:   str	w6, [x5, #292]
  0x0000ffff90944bfc:   and	w6, w6, #0x1ffffe
  0x0000ffff90944c00:   cmp	w6, #0x0
 ;;  236 branch [EQ]   [CounterOverflowStub: 0x0000fff8f81133d8]
  0x0000ffff90944c04:   b.eq	0x0000ffff90945868  // b.none
 ;; 0xFFF928212238
  0x0000ffff90944c08:   mov	x5, #0x2238                	// #8760
                                                            ;   {metadata(method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff90944c0c:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944c10:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944c14:   ldr	x8, [x5, #368]
  0x0000ffff90944c18:   add	x8, x8, #0x1
  0x0000ffff90944c1c:   str	x8, [x5, #368]
  0x0000ffff90944c20:   mov	x5, xzr
 ;; 0x0
  0x0000ffff90944c24:   movz	w5, #0x0, lsl #16
  0x0000ffff90944c28:   cmp	w10, w5
 ;;  248 branch [LT]   [DeoptimizeStub: 0x0000fff8f8113a78] [bci:3]
  0x0000ffff90944c2c:   b.lt	0x0000ffff90945890  // b.tstop
  0x0000ffff90944c30:   cmp	w10, w4
 ;;  252 branch [GE]   [DeoptimizeStub: 0x0000fff8f8113e78] [bci:3]
  0x0000ffff90944c34:   b.ge	0x0000ffff909458b0  // b.tcont
  0x0000ffff90944c38:   mov	x4, x10                     ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;;  block B20 [12, 6]
 ;; 0xFFF8F8022208
  0x0000ffff90944c3c:   mov	x5, #0x7280                	// #29312
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280})}
  0x0000ffff90944c40:   movk	x5, #0xa9, lsl #16
  0x0000ffff90944c44:   movk	x5, #0x800, lsl #32
  0x0000ffff90944c48:   mov	x6, x5
 ;; 0xFFF928213768
  0x0000ffff90944c4c:   mov	x7, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944c50:   movk	x7, #0x2821, lsl #16
  0x0000ffff90944c54:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90944c58:   ldr	x8, [x7, #480]
  0x0000ffff90944c5c:   add	x8, x8, #0x1
  0x0000ffff90944c60:   str	x8, [x7, #480]
 ;; 0xFFF92820A4D0
  0x0000ffff90944c64:   mov	x6, #0xa4d0                	// #42192
                                                            ;   {metadata(method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff90944c68:   movk	x6, #0x2820, lsl #16
  0x0000ffff90944c6c:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944c70:   ldr	w7, [x6, #292]
  0x0000ffff90944c74:   add	w7, w7, #0x2
  0x0000ffff90944c78:   str	w7, [x6, #292]
  0x0000ffff90944c7c:   and	w7, w7, #0x1ffffe
  0x0000ffff90944c80:   cmp	w7, #0x0
 ;;  278 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8114660]
  0x0000ffff90944c84:   b.eq	0x0000ffff909458d0  // b.none
 ;; 0xFFF92820A4D0
  0x0000ffff90944c88:   mov	x6, #0xa4d0                	// #42192
                                                            ;   {metadata(method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff90944c8c:   movk	x6, #0x2820, lsl #16
  0x0000ffff90944c90:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944c94:   ldr	x8, [x6, #368]
  0x0000ffff90944c98:   add	x8, x8, #0x1
  0x0000ffff90944c9c:   str	x8, [x6, #368]
 ;; 0xFFF92820A6C0
  0x0000ffff90944ca0:   mov	x5, #0xa6c0                	// #42688
                                                            ;   {metadata(method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff90944ca4:   movk	x5, #0x2820, lsl #16
  0x0000ffff90944ca8:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944cac:   ldr	w6, [x5, #292]
  0x0000ffff90944cb0:   add	w6, w6, #0x2
  0x0000ffff90944cb4:   str	w6, [x5, #292]
  0x0000ffff90944cb8:   and	w6, w6, #0x1ffffe
  0x0000ffff90944cbc:   cmp	w6, #0x0
 ;;  298 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8114eb0]
  0x0000ffff90944cc0:   b.eq	0x0000ffff909458f8  // b.none
 ;; 0xFFF92820A6C0
  0x0000ffff90944cc4:   mov	x5, #0xa6c0                	// #42688
                                                            ;   {metadata(method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff90944cc8:   movk	x5, #0x2820, lsl #16
  0x0000ffff90944ccc:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944cd0:   ldr	x6, [x5, #384]
  0x0000ffff90944cd4:   add	x6, x6, #0x1
  0x0000ffff90944cd8:   str	x6, [x5, #384]              ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;;  block B30 [4, 22]
  0x0000ffff90944cdc:   str	w10, [sp, #272]
 ;;  block B28 [22, 27]
 ;; 0xFFF8F8022248
  0x0000ffff90944ce0:   mov	x5, #0xdb70                	// #56176
                                                            ;   {oop(a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70})}
  0x0000ffff90944ce4:   movk	x5, #0xb8, lsl #16
  0x0000ffff90944ce8:   movk	x5, #0x800, lsl #32
  0x0000ffff90944cec:   mov	x6, x5
 ;; 0xFFF928213768
  0x0000ffff90944cf0:   mov	x7, #0x3768                	// #14184
                                                            ;   {metadata(method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944cf4:   movk	x7, #0x2821, lsl #16
  0x0000ffff90944cf8:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90944cfc:   ldr	x8, [x7, #528]
  0x0000ffff90944d00:   add	x8, x8, #0x1
  0x0000ffff90944d04:   str	x8, [x7, #528]
 ;; 0xFFF928218758
  0x0000ffff90944d08:   mov	x6, #0x8758                	// #34648
                                                            ;   {metadata(method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90944d0c:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944d10:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944d14:   ldr	w7, [x6, #292]
  0x0000ffff90944d18:   add	w7, w7, #0x2
  0x0000ffff90944d1c:   str	w7, [x6, #292]
  0x0000ffff90944d20:   and	w7, w7, #0x1ffffe
  0x0000ffff90944d24:   cmp	w7, #0x0
 ;;  340 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41a96f0]
  0x0000ffff90944d28:   b.eq	0x0000ffff90945920  // b.none
  0x0000ffff90944d2c:   mov	x6, x5
 ;; 0xFFF928218758
  0x0000ffff90944d30:   mov	x7, #0x8758                	// #34648
                                                            ;   {metadata(method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90944d34:   movk	x7, #0x2821, lsl #16
  0x0000ffff90944d38:   movk	x7, #0xfff9, lsl #32
  0x0000ffff90944d3c:   ldr	x8, [x7, #368]
  0x0000ffff90944d40:   add	x8, x8, #0x1
  0x0000ffff90944d44:   str	x8, [x7, #368]
 ;; 0xFFF928213DE8
  0x0000ffff90944d48:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944d4c:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944d50:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944d54:   ldr	w7, [x6, #292]
  0x0000ffff90944d58:   add	w7, w7, #0x2
  0x0000ffff90944d5c:   str	w7, [x6, #292]
  0x0000ffff90944d60:   and	w7, w7, #0x1ffffe
  0x0000ffff90944d64:   cmp	w7, #0x0
 ;;  360 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41a9f40]
  0x0000ffff90944d68:   b.eq	0x0000ffff90945948  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90944d6c:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944d70:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944d74:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944d78:   ldr	x8, [x6, #368]
  0x0000ffff90944d7c:   add	x8, x8, #0x1
  0x0000ffff90944d80:   str	x8, [x6, #368]
 ;; 0xFFF928217410
  0x0000ffff90944d84:   mov	x5, #0x7410                	// #29712
                                                            ;   {metadata(method data for {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90944d88:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944d8c:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944d90:   ldr	w6, [x5, #292]
  0x0000ffff90944d94:   add	w6, w6, #0x2
  0x0000ffff90944d98:   str	w6, [x5, #292]
  0x0000ffff90944d9c:   and	w6, w6, #0x1ffffe
  0x0000ffff90944da0:   cmp	w6, #0x0
 ;;  380 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41aa620]
  0x0000ffff90944da4:   b.eq	0x0000ffff90945970  // b.none
 ;; 0xFFF8F8022208
  0x0000ffff90944da8:   mov	x11, #0x7280                	// #29312
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280})}
  0x0000ffff90944dac:   movk	x11, #0xa9, lsl #16
  0x0000ffff90944db0:   movk	x11, #0x800, lsl #32
  0x0000ffff90944db4:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff90944db8:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944dbc:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944dc0:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944dc4:   ldr	x8, [x6, #416]
  0x0000ffff90944dc8:   add	x8, x8, #0x1
  0x0000ffff90944dcc:   str	x8, [x6, #416]
  0x0000ffff90944dd0:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff90944dd4:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944dd8:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944ddc:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944de0:   ldr	x8, [x6, #464]
  0x0000ffff90944de4:   add	x8, x8, #0x1
  0x0000ffff90944de8:   str	x8, [x6, #464]
 ;; 0xFFF92820AB10
  0x0000ffff90944dec:   mov	x5, #0xab10                	// #43792
                                                            ;   {metadata(method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff90944df0:   movk	x5, #0x2820, lsl #16
  0x0000ffff90944df4:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944df8:   ldr	w6, [x5, #292]
  0x0000ffff90944dfc:   add	w6, w6, #0x2
  0x0000ffff90944e00:   str	w6, [x5, #292]
  0x0000ffff90944e04:   and	w6, w6, #0x1ffffe
  0x0000ffff90944e08:   cmp	w6, #0x0
 ;;  406 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41ab030]
  0x0000ffff90944e0c:   b.eq	0x0000ffff90945998  // b.none
  0x0000ffff90944e10:   mov	x5, x11
 ;; 0xFFF928213DE8
  0x0000ffff90944e14:   mov	x6, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944e18:   movk	x6, #0x2821, lsl #16
  0x0000ffff90944e1c:   movk	x6, #0xfff9, lsl #32
  0x0000ffff90944e20:   ldr	x8, [x6, #512]
  0x0000ffff90944e24:   add	x8, x8, #0x1
  0x0000ffff90944e28:   str	x8, [x6, #512]
 ;; 0xFFF928213DE8
  0x0000ffff90944e2c:   mov	x5, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944e30:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944e34:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944e38:   ldr	x8, [x5, #560]
  0x0000ffff90944e3c:   add	x8, x8, #0x1
  0x0000ffff90944e40:   str	x8, [x5, #560]
 ;; 0xFFF9282140D8
  0x0000ffff90944e44:   mov	x5, #0x40d8                	// #16600
                                                            ;   {metadata(method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944e48:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944e4c:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944e50:   ldr	w6, [x5, #292]
  0x0000ffff90944e54:   add	w6, w6, #0x2
  0x0000ffff90944e58:   str	w6, [x5, #292]
  0x0000ffff90944e5c:   and	w6, w6, #0x1ffffe
  0x0000ffff90944e60:   cmp	w6, #0x0
 ;;  428 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41ab788]
  0x0000ffff90944e64:   b.eq	0x0000ffff909459c0  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90944e68:   mov	x5, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944e6c:   movk	x5, #0x2821, lsl #16
  0x0000ffff90944e70:   movk	x5, #0xfff9, lsl #32
  0x0000ffff90944e74:   ldr	x8, [x5, #576]
  0x0000ffff90944e78:   add	x8, x8, #0x1
  0x0000ffff90944e7c:   str	x8, [x5, #576]
  0x0000ffff90944e80:   sxtw	x0, w4
  0x0000ffff90944e84:   lsl	x4, x0, #2
  0x0000ffff90944e88:   add	x5, x4, #0x10
 ;; 0xFFF928207F98
  0x0000ffff90944e8c:   mov	x4, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90944e90:   movk	x4, #0x2820, lsl #16
  0x0000ffff90944e94:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944e98:   ldr	w6, [x4, #292]
  0x0000ffff90944e9c:   add	w6, w6, #0x2
  0x0000ffff90944ea0:   str	w6, [x4, #292]
  0x0000ffff90944ea4:   and	w6, w6, #0x1ffffe
  0x0000ffff90944ea8:   cmp	w6, #0x0
 ;;  452 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41ac030]
  0x0000ffff90944eac:   b.eq	0x0000ffff909459e8  // b.none
 ;; 0xFFF928207F98
  0x0000ffff90944eb0:   mov	x4, #0x7f98                	// #32664
                                                            ;   {metadata(method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90944eb4:   movk	x4, #0x2820, lsl #16
  0x0000ffff90944eb8:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944ebc:   ldr	x8, [x4, #416]
  0x0000ffff90944ec0:   add	x8, x8, #0x1
  0x0000ffff90944ec4:   str	x8, [x4, #416]
 ;; 0xFFF928400C90
  0x0000ffff90944ec8:   mov	x4, #0xc90                 	// #3216
                                                            ;   {metadata(method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff90944ecc:   movk	x4, #0x2840, lsl #16
  0x0000ffff90944ed0:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944ed4:   ldr	w6, [x4, #292]
  0x0000ffff90944ed8:   add	w6, w6, #0x2
  0x0000ffff90944edc:   str	w6, [x4, #292]
  0x0000ffff90944ee0:   and	w6, w6, #0x1ffffe
  0x0000ffff90944ee4:   cmp	w6, #0x0
 ;;  470 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41acb20]
  0x0000ffff90944ee8:   b.eq	0x0000ffff90945a10  // b.none
 ;; 0xFFF928213DE8
  0x0000ffff90944eec:   mov	x4, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944ef0:   movk	x4, #0x2821, lsl #16
  0x0000ffff90944ef4:   movk	x4, #0xfff9, lsl #32
  0x0000ffff90944ef8:   ldr	x8, [x4, #608]
  0x0000ffff90944efc:   add	x8, x8, #0x1
  0x0000ffff90944f00:   str	x8, [x4, #608]
 ;; 0xFFF8F8022210
  0x0000ffff90944f04:   mov	x4, #0x72f0                	// #29424
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90944f08:   movk	x4, #0xa9, lsl #16
  0x0000ffff90944f0c:   movk	x4, #0x800, lsl #32
 ;; 0xFFF8F8022220
  0x0000ffff90944f10:   mov	x6, #0x570                 	// #1392
                                                            ;   {oop(a 'java/lang/Class'{0x0000080000000570} = float)}
  0x0000ffff90944f14:   movk	x6, #0x0, lsl #16
  0x0000ffff90944f18:   movk	x6, #0x800, lsl #32
 ;; 0xFFF8F8022258
  0x0000ffff90944f1c:   mov	x12, #0xb8b0                	// #47280
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0})}
  0x0000ffff90944f20:   movk	x12, #0xac, lsl #16
  0x0000ffff90944f24:   movk	x12, #0x800, lsl #32
  0x0000ffff90944f28:   mov	x1, x4
  0x0000ffff90944f2c:   mov	x14, x2
  0x0000ffff90944f30:   mov	x2, x6
 ;; 0x40
  0x0000ffff90944f34:   orr	w3, wzr, #0x40
  0x0000ffff90944f38:   mov	x4, x14
 ;; 0x0
  0x0000ffff90944f3c:   movz	w6, #0x0, lsl #16
  0x0000ffff90944f40:   mov	x7, x14
  0x0000ffff90944f44:   str	x11, [sp]
  0x0000ffff90944f48:   str	x12, [sp, #8]               ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90944f4c:   bl	0x0000ffff90945c88          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
                                                            ;   {static_call}
  0x0000ffff90944f50:   nop                                 ;   {other}
  0x0000ffff90944f54:   movk	xzr, #0xd40
  0x0000ffff90944f58:   movk	xzr, #0x100                 ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;; 0xFFF928213DE8
  0x0000ffff90944f5c:   mov	x3, #0x3de8                	// #15848
                                                            ;   {metadata(method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90944f60:   movk	x3, #0x2821, lsl #16
  0x0000ffff90944f64:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90944f68:   cbnz	x0, 0x0000ffff90944f7c
  0x0000ffff90944f6c:   ldrb	w8, [x3, #617]
  0x0000ffff90944f70:   orr	x8, x8, #0x1
  0x0000ffff90944f74:   strb	w8, [x3, #617]
  0x0000ffff90944f78:   b	0x0000ffff90945034
  0x0000ffff90944f7c:   ldr	w2, [x0, #8]
  0x0000ffff90944f80:   eor	x2, x2, #0xfc00000000
  0x0000ffff90944f84:   add	x9, x3, #0x278
  0x0000ffff90944f88:   ldr	x8, [x9]
  0x0000ffff90944f8c:   cmp	x2, x8
  0x0000ffff90944f90:   b.ne	0x0000ffff90944fa4  // b.any
  0x0000ffff90944f94:   ldr	x8, [x3, #640]
  0x0000ffff90944f98:   add	x8, x8, #0x1
  0x0000ffff90944f9c:   str	x8, [x3, #640]
  0x0000ffff90944fa0:   b	0x0000ffff90945010
  0x0000ffff90944fa4:   add	x9, x3, #0x288
  0x0000ffff90944fa8:   ldr	x8, [x9]
  0x0000ffff90944fac:   cmp	x2, x8
  0x0000ffff90944fb0:   b.ne	0x0000ffff90944fc4  // b.any
  0x0000ffff90944fb4:   ldr	x8, [x3, #656]
  0x0000ffff90944fb8:   add	x8, x8, #0x1
  0x0000ffff90944fbc:   str	x8, [x3, #656]
  0x0000ffff90944fc0:   b	0x0000ffff90945010
  0x0000ffff90944fc4:   add	x9, x3, #0x278
  0x0000ffff90944fc8:   ldr	x8, [x9]
  0x0000ffff90944fcc:   cbnz	x8, 0x0000ffff90944fe4
  0x0000ffff90944fd0:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90944fd4:   orr	x8, xzr, #0x1
  0x0000ffff90944fd8:   add	x9, x3, #0x280
  0x0000ffff90944fdc:   str	x8, [x9]
  0x0000ffff90944fe0:   b	0x0000ffff90945010
  0x0000ffff90944fe4:   add	x9, x3, #0x288
  0x0000ffff90944fe8:   ldr	x8, [x9]
  0x0000ffff90944fec:   cbnz	x8, 0x0000ffff90945004
  0x0000ffff90944ff0:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90944ff4:   orr	x8, xzr, #0x1
  0x0000ffff90944ff8:   add	x9, x3, #0x290
  0x0000ffff90944ffc:   str	x8, [x9]
  0x0000ffff90945000:   b	0x0000ffff90945010
  0x0000ffff90945004:   ldr	x8, [x3, #624]
  0x0000ffff90945008:   add	x8, x8, #0x1
  0x0000ffff9094500c:   str	x8, [x3, #624]
 ;; 0xFC01042278
  0x0000ffff90945010:   mov	x2, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff90945014:   movk	x2, #0x104, lsl #16
  0x0000ffff90945018:   movk	x2, #0xfc, lsl #32
  0x0000ffff9094501c:   ldr	w3, [x0, #8]
  0x0000ffff90945020:   eor	x3, x3, #0xfc00000000
  0x0000ffff90945024:   ldr	x8, [x3, #96]
  0x0000ffff90945028:   cmp	x2, x8
  0x0000ffff9094502c:   b.ne	0x0000ffff90945a38  // b.any
  0x0000ffff90945030:   b	0x0000ffff90945034          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;;  block B16 [27, 1]
 ;; 0xFFF8F8022278
  0x0000ffff90945034:   mov	x1, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff90945038:   movk	x1, #0xa4, lsl #16
  0x0000ffff9094503c:   movk	x1, #0x800, lsl #32
 ;; 0xFFF92841CFB0
  0x0000ffff90945040:   mov	x2, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90945044:   movk	x2, #0x2841, lsl #16
  0x0000ffff90945048:   movk	x2, #0xfff9, lsl #32
  0x0000ffff9094504c:   ldr	w1, [x1, #8]
  0x0000ffff90945050:   eor	x1, x1, #0xfc00000000
  0x0000ffff90945054:   add	x9, x2, #0x1b8
  0x0000ffff90945058:   ldr	x8, [x9]
  0x0000ffff9094505c:   cmp	x1, x8
  0x0000ffff90945060:   b.ne	0x0000ffff90945074  // b.any
  0x0000ffff90945064:   ldr	x8, [x2, #448]
  0x0000ffff90945068:   add	x8, x8, #0x1
  0x0000ffff9094506c:   str	x8, [x2, #448]
  0x0000ffff90945070:   b	0x0000ffff909450e0
  0x0000ffff90945074:   add	x9, x2, #0x1c8
  0x0000ffff90945078:   ldr	x8, [x9]
  0x0000ffff9094507c:   cmp	x1, x8
  0x0000ffff90945080:   b.ne	0x0000ffff90945094  // b.any
  0x0000ffff90945084:   ldr	x8, [x2, #464]
  0x0000ffff90945088:   add	x8, x8, #0x1
  0x0000ffff9094508c:   str	x8, [x2, #464]
  0x0000ffff90945090:   b	0x0000ffff909450e0
  0x0000ffff90945094:   add	x9, x2, #0x1b8
  0x0000ffff90945098:   ldr	x8, [x9]
  0x0000ffff9094509c:   cbnz	x8, 0x0000ffff909450b4
  0x0000ffff909450a0:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909450a4:   orr	x8, xzr, #0x1
  0x0000ffff909450a8:   add	x9, x2, #0x1c0
  0x0000ffff909450ac:   str	x8, [x9]
  0x0000ffff909450b0:   b	0x0000ffff909450e0
  0x0000ffff909450b4:   add	x9, x2, #0x1c8
  0x0000ffff909450b8:   ldr	x8, [x9]
  0x0000ffff909450bc:   cbnz	x8, 0x0000ffff909450d4
  0x0000ffff909450c0:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909450c4:   orr	x8, xzr, #0x1
  0x0000ffff909450c8:   add	x9, x2, #0x1d0
  0x0000ffff909450cc:   str	x8, [x9]
  0x0000ffff909450d0:   b	0x0000ffff909450e0
  0x0000ffff909450d4:   ldr	x8, [x2, #432]
  0x0000ffff909450d8:   add	x8, x8, #0x1
  0x0000ffff909450dc:   str	x8, [x2, #432]
 ;; 0xFFF9282127F0
  0x0000ffff909450e0:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff909450e4:   movk	x1, #0x2821, lsl #16
  0x0000ffff909450e8:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909450ec:   ldr	w2, [x1, #292]
  0x0000ffff909450f0:   add	w2, w2, #0x2
  0x0000ffff909450f4:   str	w2, [x1, #292]
  0x0000ffff909450f8:   and	w2, w2, #0x1ffffe
  0x0000ffff909450fc:   cmp	w2, #0x0
 ;;  530 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41ae220]
  0x0000ffff90945100:   b.eq	0x0000ffff90945a54  // b.none
 ;; 0xFFF9282127F0
  0x0000ffff90945104:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90945108:   movk	x1, #0x2821, lsl #16
  0x0000ffff9094510c:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90945110:   ldr	x8, [x1, #368]
  0x0000ffff90945114:   add	x8, x8, #0x1
  0x0000ffff90945118:   str	x8, [x1, #368]
 ;; 0xFFF9282129C8
  0x0000ffff9094511c:   mov	x1, #0x29c8                	// #10696
                                                            ;   {metadata(method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff90945120:   movk	x1, #0x2821, lsl #16
  0x0000ffff90945124:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90945128:   ldr	w2, [x1, #292]
  0x0000ffff9094512c:   add	w2, w2, #0x2
  0x0000ffff90945130:   str	w2, [x1, #292]
  0x0000ffff90945134:   and	w2, w2, #0x1ffffe
  0x0000ffff90945138:   cmp	w2, #0x0
 ;;  548 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41aea10]
  0x0000ffff9094513c:   b.eq	0x0000ffff90945a7c  // b.none
 ;; 0xFFF9282129C8
  0x0000ffff90945140:   mov	x1, #0x29c8                	// #10696
                                                            ;   {metadata(method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff90945144:   movk	x1, #0x2821, lsl #16
  0x0000ffff90945148:   movk	x1, #0xfff9, lsl #32
  0x0000ffff9094514c:   ldr	x2, [x1, #368]
  0x0000ffff90945150:   add	x2, x2, #0x1
  0x0000ffff90945154:   str	x2, [x1, #368]              ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
                                                            ; - java.util.random.RandomGenerator::nextInt@1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
 ;;  block B57 [14, 4]
  0x0000ffff90945158:   str	x0, [sp, #280]
 ;;  block B54 [4, 41]
 ;; 0xFFF9282127F0
  0x0000ffff9094515c:   mov	x1, #0x27f0                	// #10224
                                                            ;   {metadata(method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90945160:   movk	x1, #0x2821, lsl #16
  0x0000ffff90945164:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90945168:   ldr	x8, [x1, #384]
  0x0000ffff9094516c:   add	x8, x8, #0x1
  0x0000ffff90945170:   str	x8, [x1, #384]
 ;; 0xFFF8F8022278
  0x0000ffff90945174:   mov	x1, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff90945178:   movk	x1, #0xa4, lsl #16
  0x0000ffff9094517c:   movk	x1, #0x800, lsl #32
 ;; 0x400
  0x0000ffff90945180:   orr	w2, wzr, #0x400             ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff90945184:   bl	0x0000ffff90945c98          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop [280]=Oop }
                                                            ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
                                                            ;   {static_call}
  0x0000ffff90945188:   nop                                 ;   {other}
  0x0000ffff9094518c:   movk	xzr, #0xf78
  0x0000ffff90945190:   movk	xzr, #0x200                 ;*invokestatic boundedNextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff90945194:   ldr	x4, [sp, #280]
 ;; merged ldr pair
  0x0000ffff90945198:   ldp	x3, x1, [sp, #256]
 ;;  block B52 [41, 82]
  0x0000ffff9094519c:   ldr	w2, [x3, #12]               ; implicit exception: dispatches to 0x0000ffff90945aa4
  0x0000ffff909451a0:   cmp	w0, w2
 ;;  588 branch [AE]   [RangeCheckStub: 0x0000fff8f41af870] [bci:41]
  0x0000ffff909451a4:   b.cs	0x0000ffff90945abc  // b.hs, b.nlast
  0x0000ffff909451a8:   lsl	w2, w0, #3
  0x0000ffff909451ac:   add	x2, x2, #0x10
  0x0000ffff909451b0:   ldr	x0, [x3, x2]
  0x0000ffff909451b4:   tbz	w0, #12, 0x0000ffff909451bc ;   {other}
  0x0000ffff909451b8:   b	0x0000ffff90945ae0
  0x0000ffff909451bc:   lsr	x0, x0, #16                 ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
  0x0000ffff909451c0:   ldr	x2, [x0, #16]               ; implicit exception: dispatches to 0x0000ffff90945b00
  0x0000ffff909451c4:   tbz	w2, #12, 0x0000ffff909451cc ;   {other}
  0x0000ffff909451c8:   b	0x0000ffff90945b18
  0x0000ffff909451cc:   lsr	x2, x2, #16                 ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
 ;; 0xFFF92841CFB0
  0x0000ffff909451d0:   mov	x6, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909451d4:   movk	x6, #0x2841, lsl #16
  0x0000ffff909451d8:   movk	x6, #0xfff9, lsl #32
  0x0000ffff909451dc:   cbnz	x2, 0x0000ffff909451f0
  0x0000ffff909451e0:   ldrb	w8, [x6, #473]
  0x0000ffff909451e4:   orr	x8, x8, #0x1
  0x0000ffff909451e8:   strb	w8, [x6, #473]
  0x0000ffff909451ec:   b	0x0000ffff909452a4
  0x0000ffff909451f0:   ldr	w5, [x2, #8]
  0x0000ffff909451f4:   eor	x5, x5, #0xfc00000000
  0x0000ffff909451f8:   add	x9, x6, #0x1e8
  0x0000ffff909451fc:   ldr	x8, [x9]
  0x0000ffff90945200:   cmp	x5, x8
  0x0000ffff90945204:   b.ne	0x0000ffff90945218  // b.any
  0x0000ffff90945208:   ldr	x8, [x6, #496]
  0x0000ffff9094520c:   add	x8, x8, #0x1
  0x0000ffff90945210:   str	x8, [x6, #496]
  0x0000ffff90945214:   b	0x0000ffff90945284
  0x0000ffff90945218:   add	x9, x6, #0x1f8
  0x0000ffff9094521c:   ldr	x8, [x9]
  0x0000ffff90945220:   cmp	x5, x8
  0x0000ffff90945224:   b.ne	0x0000ffff90945238  // b.any
  0x0000ffff90945228:   ldr	x8, [x6, #512]
  0x0000ffff9094522c:   add	x8, x8, #0x1
  0x0000ffff90945230:   str	x8, [x6, #512]
  0x0000ffff90945234:   b	0x0000ffff90945284
  0x0000ffff90945238:   add	x9, x6, #0x1e8
  0x0000ffff9094523c:   ldr	x8, [x9]
  0x0000ffff90945240:   cbnz	x8, 0x0000ffff90945258
  0x0000ffff90945244:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90945248:   orr	x8, xzr, #0x1
  0x0000ffff9094524c:   add	x9, x6, #0x1f0
  0x0000ffff90945250:   str	x8, [x9]
  0x0000ffff90945254:   b	0x0000ffff90945284
  0x0000ffff90945258:   add	x9, x6, #0x1f8
  0x0000ffff9094525c:   ldr	x8, [x9]
  0x0000ffff90945260:   cbnz	x8, 0x0000ffff90945278
  0x0000ffff90945264:   str	x5, [x9]
 ;; 0x1
  0x0000ffff90945268:   orr	x8, xzr, #0x1
  0x0000ffff9094526c:   add	x9, x6, #0x200
  0x0000ffff90945270:   str	x8, [x9]
  0x0000ffff90945274:   b	0x0000ffff90945284
  0x0000ffff90945278:   ldr	x8, [x6, #480]
  0x0000ffff9094527c:   add	x8, x8, #0x1
  0x0000ffff90945280:   str	x8, [x6, #480]
 ;; 0xFC01001450
  0x0000ffff90945284:   mov	x5, #0x1450                	// #5200
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff90945288:   movk	x5, #0x100, lsl #16
  0x0000ffff9094528c:   movk	x5, #0xfc, lsl #32
  0x0000ffff90945290:   ldr	w8, [x2, #8]
  0x0000ffff90945294:   eor	x8, x8, #0xfc00000000
  0x0000ffff90945298:   cmp	x8, x5
  0x0000ffff9094529c:   b.ne	0x0000ffff90945b3c  // b.any
  0x0000ffff909452a0:   b	0x0000ffff909452a4          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
  0x0000ffff909452a4:   ldr	s0, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff90945b58
                                                            ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
  0x0000ffff909452a8:   ldr	xzr, [x1]                   ; implicit exception: dispatches to 0x0000ffff90945b70
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
  0x0000ffff909452ac:   mov	x2, x1
 ;; 0xFFF92841CFB0
  0x0000ffff909452b0:   mov	x0, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909452b4:   movk	x0, #0x2841, lsl #16
  0x0000ffff909452b8:   movk	x0, #0xfff9, lsl #32
  0x0000ffff909452bc:   ldr	x8, [x0, #528]
  0x0000ffff909452c0:   add	x8, x8, #0x1
  0x0000ffff909452c4:   str	x8, [x0, #528]
 ;; 0xFFF928214E50
  0x0000ffff909452c8:   mov	x2, #0x4e50                	// #20048
                                                            ;   {metadata(method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909452cc:   movk	x2, #0x2821, lsl #16
  0x0000ffff909452d0:   movk	x2, #0xfff9, lsl #32
  0x0000ffff909452d4:   ldr	w0, [x2, #292]
  0x0000ffff909452d8:   add	w0, w0, #0x2
  0x0000ffff909452dc:   str	w0, [x2, #292]
  0x0000ffff909452e0:   and	w0, w0, #0x1ffffe
  0x0000ffff909452e4:   cmp	w0, #0x0
 ;;  624 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41b0b38]
  0x0000ffff909452e8:   b.eq	0x0000ffff90945b88  // b.none
  0x0000ffff909452ec:   mov	x2, x1
 ;; 0xFFF928214E50
  0x0000ffff909452f0:   mov	x0, #0x4e50                	// #20048
                                                            ;   {metadata(method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909452f4:   movk	x0, #0x2821, lsl #16
  0x0000ffff909452f8:   movk	x0, #0xfff9, lsl #32
  0x0000ffff909452fc:   ldr	w2, [x2, #8]
  0x0000ffff90945300:   eor	x2, x2, #0xfc00000000
  0x0000ffff90945304:   add	x9, x0, #0x178
  0x0000ffff90945308:   ldr	x8, [x9]
  0x0000ffff9094530c:   cmp	x2, x8
  0x0000ffff90945310:   b.ne	0x0000ffff90945324  // b.any
  0x0000ffff90945314:   ldr	x8, [x0, #384]
  0x0000ffff90945318:   add	x8, x8, #0x1
  0x0000ffff9094531c:   str	x8, [x0, #384]
  0x0000ffff90945320:   b	0x0000ffff90945390
  0x0000ffff90945324:   add	x9, x0, #0x188
  0x0000ffff90945328:   ldr	x8, [x9]
  0x0000ffff9094532c:   cmp	x2, x8
  0x0000ffff90945330:   b.ne	0x0000ffff90945344  // b.any
  0x0000ffff90945334:   ldr	x8, [x0, #400]
  0x0000ffff90945338:   add	x8, x8, #0x1
  0x0000ffff9094533c:   str	x8, [x0, #400]
  0x0000ffff90945340:   b	0x0000ffff90945390
  0x0000ffff90945344:   add	x9, x0, #0x178
  0x0000ffff90945348:   ldr	x8, [x9]
  0x0000ffff9094534c:   cbnz	x8, 0x0000ffff90945364
  0x0000ffff90945350:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90945354:   orr	x8, xzr, #0x1
  0x0000ffff90945358:   add	x9, x0, #0x180
  0x0000ffff9094535c:   str	x8, [x9]
  0x0000ffff90945360:   b	0x0000ffff90945390
  0x0000ffff90945364:   add	x9, x0, #0x188
  0x0000ffff90945368:   ldr	x8, [x9]
  0x0000ffff9094536c:   cbnz	x8, 0x0000ffff90945384
  0x0000ffff90945370:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90945374:   orr	x8, xzr, #0x1
  0x0000ffff90945378:   add	x9, x0, #0x190
  0x0000ffff9094537c:   str	x8, [x9]
  0x0000ffff90945380:   b	0x0000ffff90945390
  0x0000ffff90945384:   ldr	x8, [x0, #368]
  0x0000ffff90945388:   add	x8, x8, #0x1
  0x0000ffff9094538c:   str	x8, [x0, #368]
 ;; 0xFFF8F80222A8
  0x0000ffff90945390:   mov	x0, #0x4da0                	// #19872
                                                            ;   {oop(a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0})}
  0x0000ffff90945394:   movk	x0, #0xad, lsl #16
  0x0000ffff90945398:   movk	x0, #0x800, lsl #32
  0x0000ffff9094539c:   mov	x2, x0
  0x0000ffff909453a0:   mov	x3, x4                      ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
  0x0000ffff909453a4:   str	x0, [sp, #288]
  0x0000ffff909453a8:   str	s0, [sp, #276]
 ;; 0xFFFFFFFFFFFF
  0x0000ffff909453ac:   mov	x9, #0x3590                	// #13712
  0x0000ffff909453b0:   movk	x9, #0xf856, lsl #16
  0x0000ffff909453b4:   movk	x9, #0xfff8, lsl #32
  0x0000ffff909453b8:   bl	0x0000ffff90945cc8          ; ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
                                                            ;   {virtual_call}
  0x0000ffff909453bc:   nop                                 ;   {other}
  0x0000ffff909453c0:   movk	xzr, #0x11ac
  0x0000ffff909453c4:   movk	xzr, #0x300                 ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
  0x0000ffff909453c8:   ldr	xzr, [x0]                   ; implicit exception: dispatches to 0x0000ffff90945bb0
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff909453cc:   mov	x1, x0
 ;; 0xFFF92841CFB0
  0x0000ffff909453d0:   mov	x2, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909453d4:   movk	x2, #0x2841, lsl #16
  0x0000ffff909453d8:   movk	x2, #0xfff9, lsl #32
  0x0000ffff909453dc:   ldr	x8, [x2, #576]
  0x0000ffff909453e0:   add	x8, x8, #0x1
  0x0000ffff909453e4:   str	x8, [x2, #576]
 ;; 0xFFF928215038
  0x0000ffff909453e8:   mov	x1, #0x5038                	// #20536
                                                            ;   {metadata(method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909453ec:   movk	x1, #0x2821, lsl #16
  0x0000ffff909453f0:   movk	x1, #0xfff9, lsl #32
  0x0000ffff909453f4:   ldr	w2, [x1, #292]
  0x0000ffff909453f8:   add	w2, w2, #0x2
  0x0000ffff909453fc:   str	w2, [x1, #292]
  0x0000ffff90945400:   and	w2, w2, #0x1ffffe
  0x0000ffff90945404:   cmp	w2, #0x0
 ;;  662 branch [EQ]   [CounterOverflowStub: 0x0000fff8f41397b0]
  0x0000ffff90945408:   b.eq	0x0000ffff90945bc8  // b.none
  0x0000ffff9094540c:   mov	x1, x0
 ;; 0xFFF928215038
  0x0000ffff90945410:   mov	x2, #0x5038                	// #20536
                                                            ;   {metadata(method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945414:   movk	x2, #0x2821, lsl #16
  0x0000ffff90945418:   movk	x2, #0xfff9, lsl #32
  0x0000ffff9094541c:   ldr	x8, [x2, #368]
  0x0000ffff90945420:   add	x8, x8, #0x1
  0x0000ffff90945424:   str	x8, [x2, #368]
 ;; 0xFFF928215220
  0x0000ffff90945428:   mov	x1, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094542c:   movk	x1, #0x2821, lsl #16
  0x0000ffff90945430:   movk	x1, #0xfff9, lsl #32
  0x0000ffff90945434:   ldr	w2, [x1, #292]
  0x0000ffff90945438:   add	w2, w2, #0x2
  0x0000ffff9094543c:   str	w2, [x1, #292]
  0x0000ffff90945440:   and	w2, w2, #0x1ffffe
  0x0000ffff90945444:   cmp	w2, #0x0
 ;;  682 branch [EQ]   [CounterOverflowStub: 0x0000fff8f4139e70]
  0x0000ffff90945448:   b.eq	0x0000ffff90945bf0  // b.none
  0x0000ffff9094544c:   mov	x1, x0
 ;; 0xFFF928215220
  0x0000ffff90945450:   mov	x2, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945454:   movk	x2, #0x2821, lsl #16
  0x0000ffff90945458:   movk	x2, #0xfff9, lsl #32
  0x0000ffff9094545c:   ldr	w1, [x1, #8]
  0x0000ffff90945460:   eor	x1, x1, #0xfc00000000
  0x0000ffff90945464:   add	x9, x2, #0x178
  0x0000ffff90945468:   ldr	x8, [x9]
  0x0000ffff9094546c:   cmp	x1, x8
  0x0000ffff90945470:   b.ne	0x0000ffff90945484  // b.any
  0x0000ffff90945474:   ldr	x8, [x2, #384]
  0x0000ffff90945478:   add	x8, x8, #0x1
  0x0000ffff9094547c:   str	x8, [x2, #384]
  0x0000ffff90945480:   b	0x0000ffff909454f0
  0x0000ffff90945484:   add	x9, x2, #0x188
  0x0000ffff90945488:   ldr	x8, [x9]
  0x0000ffff9094548c:   cmp	x1, x8
  0x0000ffff90945490:   b.ne	0x0000ffff909454a4  // b.any
  0x0000ffff90945494:   ldr	x8, [x2, #400]
  0x0000ffff90945498:   add	x8, x8, #0x1
  0x0000ffff9094549c:   str	x8, [x2, #400]
  0x0000ffff909454a0:   b	0x0000ffff909454f0
  0x0000ffff909454a4:   add	x9, x2, #0x178
  0x0000ffff909454a8:   ldr	x8, [x9]
  0x0000ffff909454ac:   cbnz	x8, 0x0000ffff909454c4
  0x0000ffff909454b0:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909454b4:   orr	x8, xzr, #0x1
  0x0000ffff909454b8:   add	x9, x2, #0x180
  0x0000ffff909454bc:   str	x8, [x9]
  0x0000ffff909454c0:   b	0x0000ffff909454f0
  0x0000ffff909454c4:   add	x9, x2, #0x188
  0x0000ffff909454c8:   ldr	x8, [x9]
  0x0000ffff909454cc:   cbnz	x8, 0x0000ffff909454e4
  0x0000ffff909454d0:   str	x1, [x9]
 ;; 0x1
  0x0000ffff909454d4:   orr	x8, xzr, #0x1
  0x0000ffff909454d8:   add	x9, x2, #0x190
  0x0000ffff909454dc:   str	x8, [x9]
  0x0000ffff909454e0:   b	0x0000ffff909454f0
  0x0000ffff909454e4:   ldr	x8, [x2, #368]
  0x0000ffff909454e8:   add	x8, x8, #0x1
  0x0000ffff909454ec:   str	x8, [x2, #368]
  0x0000ffff909454f0:   ldr	s0, [sp, #276]
  0x0000ffff909454f4:   mov	x1, x0                      ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff909454f8:   str	x0, [sp, #296]
 ;; 0xFFFFFFFFFFFF
  0x0000ffff909454fc:   mov	x9, #0x35b8                	// #13752
  0x0000ffff90945500:   movk	x9, #0xf856, lsl #16
  0x0000ffff90945504:   movk	x9, #0xfff8, lsl #32
  0x0000ffff90945508:   bl	0x0000ffff90945cf8          ; ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop [296]=Oop }
                                                            ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
                                                            ;   {virtual_call}
  0x0000ffff9094550c:   nop                                 ;   {other}
  0x0000ffff90945510:   movk	xzr, #0x12fc
  0x0000ffff90945514:   movk	xzr, #0x400                 ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff90945518:   ldr	x2, [sp, #296]
 ;; 0xFFF928215220
  0x0000ffff9094551c:   mov	x3, #0x5220                	// #21024
                                                            ;   {metadata(method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945520:   movk	x3, #0x2821, lsl #16
  0x0000ffff90945524:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90945528:   ldr	w2, [x2, #8]
  0x0000ffff9094552c:   eor	x2, x2, #0xfc00000000
  0x0000ffff90945530:   add	x9, x3, #0x1a8
  0x0000ffff90945534:   ldr	x8, [x9]
  0x0000ffff90945538:   cmp	x2, x8
  0x0000ffff9094553c:   b.ne	0x0000ffff90945550  // b.any
  0x0000ffff90945540:   ldr	x8, [x3, #432]
  0x0000ffff90945544:   add	x8, x8, #0x1
  0x0000ffff90945548:   str	x8, [x3, #432]
  0x0000ffff9094554c:   b	0x0000ffff909455bc
  0x0000ffff90945550:   add	x9, x3, #0x1b8
  0x0000ffff90945554:   ldr	x8, [x9]
  0x0000ffff90945558:   cmp	x2, x8
  0x0000ffff9094555c:   b.ne	0x0000ffff90945570  // b.any
  0x0000ffff90945560:   ldr	x8, [x3, #448]
  0x0000ffff90945564:   add	x8, x8, #0x1
  0x0000ffff90945568:   str	x8, [x3, #448]
  0x0000ffff9094556c:   b	0x0000ffff909455bc
  0x0000ffff90945570:   add	x9, x3, #0x1a8
  0x0000ffff90945574:   ldr	x8, [x9]
  0x0000ffff90945578:   cbnz	x8, 0x0000ffff90945590
  0x0000ffff9094557c:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90945580:   orr	x8, xzr, #0x1
  0x0000ffff90945584:   add	x9, x3, #0x1b0
  0x0000ffff90945588:   str	x8, [x9]
  0x0000ffff9094558c:   b	0x0000ffff909455bc
  0x0000ffff90945590:   add	x9, x3, #0x1b8
  0x0000ffff90945594:   ldr	x8, [x9]
  0x0000ffff90945598:   cbnz	x8, 0x0000ffff909455b0
  0x0000ffff9094559c:   str	x2, [x9]
 ;; 0x1
  0x0000ffff909455a0:   orr	x8, xzr, #0x1
  0x0000ffff909455a4:   add	x9, x3, #0x1c0
  0x0000ffff909455a8:   str	x8, [x9]
  0x0000ffff909455ac:   b	0x0000ffff909455bc
  0x0000ffff909455b0:   ldr	x8, [x3, #416]
  0x0000ffff909455b4:   add	x8, x8, #0x1
  0x0000ffff909455b8:   str	x8, [x3, #416]
  0x0000ffff909455bc:   ldr	x2, [sp, #288]
  0x0000ffff909455c0:   mov	x3, x0
  0x0000ffff909455c4:   ldr	x1, [sp, #296]              ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; 0xFFFFFFFFFFFF
  0x0000ffff909455c8:   mov	x9, #0x35e0                	// #13792
  0x0000ffff909455cc:   movk	x9, #0xf856, lsl #16
  0x0000ffff909455d0:   movk	x9, #0xfff8, lsl #32
  0x0000ffff909455d4:   bl	0x0000ffff90945d28          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
                                                            ;   {virtual_call}
  0x0000ffff909455d8:   nop                                 ;   {other}
  0x0000ffff909455dc:   movk	xzr, #0x13c8
  0x0000ffff909455e0:   movk	xzr, #0x500                 ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; 0xFFF8F8022208
  0x0000ffff909455e4:   mov	x1, #0x7280                	// #29312
                                                            ;   {oop(a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280})}
  0x0000ffff909455e8:   movk	x1, #0xa9, lsl #16
  0x0000ffff909455ec:   movk	x1, #0x800, lsl #32
 ;; 0xFFF92841CFB0
  0x0000ffff909455f0:   mov	x2, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909455f4:   movk	x2, #0x2841, lsl #16
  0x0000ffff909455f8:   movk	x2, #0xfff9, lsl #32
  0x0000ffff909455fc:   ldr	w1, [x1, #8]
  0x0000ffff90945600:   eor	x1, x1, #0xfc00000000
  0x0000ffff90945604:   add	x9, x2, #0x278
  0x0000ffff90945608:   ldr	x8, [x9]
  0x0000ffff9094560c:   cmp	x1, x8
  0x0000ffff90945610:   b.ne	0x0000ffff90945624  // b.any
  0x0000ffff90945614:   ldr	x8, [x2, #640]
  0x0000ffff90945618:   add	x8, x8, #0x1
  0x0000ffff9094561c:   str	x8, [x2, #640]
  0x0000ffff90945620:   b	0x0000ffff90945690
  0x0000ffff90945624:   add	x9, x2, #0x288
  0x0000ffff90945628:   ldr	x8, [x9]
  0x0000ffff9094562c:   cmp	x1, x8
  0x0000ffff90945630:   b.ne	0x0000ffff90945644  // b.any
  0x0000ffff90945634:   ldr	x8, [x2, #656]
  0x0000ffff90945638:   add	x8, x8, #0x1
  0x0000ffff9094563c:   str	x8, [x2, #656]
  0x0000ffff90945640:   b	0x0000ffff90945690
  0x0000ffff90945644:   add	x9, x2, #0x278
  0x0000ffff90945648:   ldr	x8, [x9]
  0x0000ffff9094564c:   cbnz	x8, 0x0000ffff90945664
  0x0000ffff90945650:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90945654:   orr	x8, xzr, #0x1
  0x0000ffff90945658:   add	x9, x2, #0x280
  0x0000ffff9094565c:   str	x8, [x9]
  0x0000ffff90945660:   b	0x0000ffff90945690
  0x0000ffff90945664:   add	x9, x2, #0x288
  0x0000ffff90945668:   ldr	x8, [x9]
  0x0000ffff9094566c:   cbnz	x8, 0x0000ffff90945684
  0x0000ffff90945670:   str	x1, [x9]
 ;; 0x1
  0x0000ffff90945674:   orr	x8, xzr, #0x1
  0x0000ffff90945678:   add	x9, x2, #0x290
  0x0000ffff9094567c:   str	x8, [x9]
  0x0000ffff90945680:   b	0x0000ffff90945690
  0x0000ffff90945684:   ldr	x8, [x2, #624]
  0x0000ffff90945688:   add	x8, x8, #0x1
  0x0000ffff9094568c:   str	x8, [x2, #624]
  0x0000ffff90945690:   ldr	w10, [sp, #272]
  0x0000ffff90945694:   add	w1, w10, #0x40
 ;; 0xFFF92841CFB0
  0x0000ffff90945698:   mov	x2, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff9094569c:   movk	x2, #0x2841, lsl #16
  0x0000ffff909456a0:   movk	x2, #0xfff9, lsl #32
  0x0000ffff909456a4:   ldr	w3, [x2, #296]
  0x0000ffff909456a8:   add	w3, w3, #0x2
  0x0000ffff909456ac:   str	w3, [x2, #296]
  0x0000ffff909456b0:   and	w3, w3, #0x3ffe
  0x0000ffff909456b4:   cmp	w3, #0x0
 ;;  732 branch [EQ]   [CounterOverflowStub: 0x0000fff8f413b220]
  0x0000ffff909456b8:   b.eq	0x0000ffff90945c18  // b.none;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
  0x0000ffff909456bc:   ldr	x8, [x28, #1184]            ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
  0x0000ffff909456c0:   ldr	wzr, [x8]                   ;   {poll}
  0x0000ffff909456c4:   ldrb	w8, [x28, #1208]
  0x0000ffff909456c8:   cbz	x8, 0x0000ffff909456e0
 ;; 0xFFFFAECE431C
  0x0000ffff909456cc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff909456d0:   movk	x8, #0xaece, lsl #16
  0x0000ffff909456d4:   movk	x8, #0xffff, lsl #32
  0x0000ffff909456d8:   mov	x0, x28
  0x0000ffff909456dc:   blr	x8
 ;; 0xFFF92841CFB0
  0x0000ffff909456e0:   mov	x2, #0xcfb0                	// #53168
                                                            ;   {metadata(method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff909456e4:   movk	x2, #0x2841, lsl #16
  0x0000ffff909456e8:   movk	x2, #0xfff9, lsl #32
  0x0000ffff909456ec:   ldr	x3, [x2, #672]
  0x0000ffff909456f0:   add	x3, x3, #0x1
  0x0000ffff909456f4:   str	x3, [x2, #672]
  0x0000ffff909456f8:   mov	x10, x1
  0x0000ffff909456fc:   mov	x1, x0
 ;;  750 branch [AL]   [B1] 
  0x0000ffff90945700:   b	0x0000ffff90944a6c          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
 ;;  block B3 [85, 85]
  0x0000ffff90945704:   ldp	x29, x30, [sp, #320]
  0x0000ffff90945708:   add	sp, sp, #0x150
  0x0000ffff9094570c:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff90945710:   cmp	sp, x8
  0x0000ffff90945714:   b.hi	0x0000ffff90945c40  // b.pmore
  0x0000ffff90945718:   ret
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401D80
  0x0000ffff9094571c:   mov	x8, #0x1d80                	// #7552
                                                            ;   {metadata({method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90945720:   movk	x8, #0x2840, lsl #16
  0x0000ffff90945724:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945728:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff9094572c:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945730:   str	x8, [sp]
  0x0000ffff90945734:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945738:   add	x8, x8, #0x8c0
  0x0000ffff9094573c:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
  0x0000ffff90945740:   b	0x0000ffff9094475c
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804E2E8
  0x0000ffff90945744:   mov	x8, #0xe2e8                	// #58088
                                                            ;   {metadata({method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945748:   movk	x8, #0x2804, lsl #16
  0x0000ffff9094574c:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945750:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945754:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945758:   str	x8, [sp]
  0x0000ffff9094575c:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945760:   add	x8, x8, #0x8c0
  0x0000ffff90945764:   blr	x8                          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::zero@-1 (line 551)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff90945768:   b	0x0000ffff90944798
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804DDE8
  0x0000ffff9094576c:   mov	x8, #0xdde8                	// #56808
                                                            ;   {metadata({method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945770:   movk	x8, #0x2804, lsl #16
  0x0000ffff90945774:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945778:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff9094577c:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945780:   str	x8, [sp]
  0x0000ffff90945784:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945788:   add	x8, x8, #0x8c0
  0x0000ffff9094578c:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
                                                            ; - jdk.incubator.vector.FloatVector::zero@19 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff90945790:   b	0x0000ffff909448a0
 ;; CounterOverflowStub slow case
 ;; 0xFC000ABC28
  0x0000ffff90945794:   mov	x8, #0xbc28                	// #48168
                                                            ;   {metadata({method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff90945798:   movk	x8, #0xa, lsl #16
  0x0000ffff9094579c:   movk	x8, #0xfc, lsl #32
  0x0000ffff909457a0:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909457a4:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909457a8:   str	x8, [sp]
  0x0000ffff909457ac:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909457b0:   add	x8, x8, #0x8c0
  0x0000ffff909457b4:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.FloatVector::zero@24 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff909457b8:   b	0x0000ffff909448f4
 ;; CounterOverflowStub slow case
 ;; 0xFFF928400A28
  0x0000ffff909457bc:   mov	x8, #0xa28                 	// #2600
                                                            ;   {metadata({method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff909457c0:   movk	x8, #0x2840, lsl #16
  0x0000ffff909457c4:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909457c8:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909457cc:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909457d0:   str	x8, [sp]
  0x0000ffff909457d4:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909457d8:   add	x8, x8, #0x8c0
  0x0000ffff909457dc:   blr	x8                          ; ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.FloatVector::zero@24 (line 553)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff909457e0:   b	0x0000ffff90944930
 ;; SimpleExceptionStub slow case
  0x0000ffff909457e4:   mov	x8, x0
  0x0000ffff909457e8:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff909457ec:   add	x9, x9, #0xdc0
  0x0000ffff909457f0:   blr	x9                          ; ImmutableOopMap {[248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@32 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
 ;; should not reach here
  0x0000ffff909457f4:   dcps1	#0xdeae
  0x0000ffff909457f8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909457fc:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945800:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945804:   add	x8, x8, #0x9c0
  0x0000ffff90945808:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
 ;; should not reach here
  0x0000ffff9094580c:   dcps1	#0xdeae
  0x0000ffff90945810:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945814:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280561C0
  0x0000ffff90945818:   mov	x8, #0x61c0                	// #25024
                                                            ;   {metadata({method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094581c:   movk	x8, #0x2805, lsl #16
  0x0000ffff90945820:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945824:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945828:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094582c:   str	x8, [sp]
  0x0000ffff90945830:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945834:   add	x8, x8, #0x8c0
  0x0000ffff90945838:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff9094583c:   b	0x0000ffff90944ae0
 ;; CounterOverflowStub slow case
 ;; 0xFFF9281E5020
  0x0000ffff90945840:   mov	x8, #0x5020                	// #20512
                                                            ;   {metadata({method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics')}
  0x0000ffff90945844:   movk	x8, #0x281e, lsl #16
  0x0000ffff90945848:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094584c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945850:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945854:   str	x8, [sp]
  0x0000ffff90945858:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094585c:   add	x8, x8, #0x8c0
  0x0000ffff90945860:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90945864:   b	0x0000ffff90944bc8
 ;; CounterOverflowStub slow case
 ;; 0xFC00056388
  0x0000ffff90945868:   mov	x8, #0x6388                	// #25480
                                                            ;   {metadata({method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects')}
  0x0000ffff9094586c:   movk	x8, #0x5, lsl #16
  0x0000ffff90945870:   movk	x8, #0xfc, lsl #32
  0x0000ffff90945874:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945878:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094587c:   str	x8, [sp]
  0x0000ffff90945880:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945884:   add	x8, x8, #0x8c0
  0x0000ffff90945888:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::checkIndex@-1 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff9094588c:   b	0x0000ffff90944c08
 ;; DeoptimizeStub slow case
 ;; 0xFFFFFFFFFFFFFFE4
  0x0000ffff90945890:   mov	x8, #0xffffffffffffffe4    	// #-28
  0x0000ffff90945894:   str	x8, [sp]
  0x0000ffff90945898:   adrp	x8, 0x0000ffff97d56000      ;   {runtime_call deoptimize Runtime1 stub}
  0x0000ffff9094589c:   add	x8, x8, #0x9c0
  0x0000ffff909458a0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;; should not reach here
  0x0000ffff909458a4:   dcps1	#0xdeae
  0x0000ffff909458a8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909458ac:   udf	#65535
 ;; DeoptimizeStub slow case
 ;; 0xFFFFFFFFFFFFFFE4
  0x0000ffff909458b0:   mov	x8, #0xffffffffffffffe4    	// #-28
  0x0000ffff909458b4:   str	x8, [sp]
  0x0000ffff909458b8:   adrp	x8, 0x0000ffff97d56000      ;   {runtime_call deoptimize Runtime1 stub}
  0x0000ffff909458bc:   add	x8, x8, #0x9c0
  0x0000ffff909458c0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;; should not reach here
  0x0000ffff909458c4:   dcps1	#0xdeae
  0x0000ffff909458c8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909458cc:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280F3720
  0x0000ffff909458d0:   mov	x8, #0x3720                	// #14112
                                                            ;   {metadata({method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff909458d4:   movk	x8, #0x280f, lsl #16
  0x0000ffff909458d8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909458dc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909458e0:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909458e4:   str	x8, [sp]
  0x0000ffff909458e8:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909458ec:   add	x8, x8, #0x8c0
  0x0000ffff909458f0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff909458f4:   b	0x0000ffff90944c88
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280FA960
  0x0000ffff909458f8:   mov	x8, #0xa960                	// #43360
                                                            ;   {metadata({method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies')}
  0x0000ffff909458fc:   movk	x8, #0x280f, lsl #16
  0x0000ffff90945900:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945904:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945908:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094590c:   str	x8, [sp]
  0x0000ffff90945910:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945914:   add	x8, x8, #0x8c0
  0x0000ffff90945918:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff9094591c:   b	0x0000ffff90944cc4
 ;; CounterOverflowStub slow case
 ;; 0xFFF9281551C0
  0x0000ffff90945920:   mov	x8, #0x51c0                	// #20928
                                                            ;   {metadata({method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90945924:   movk	x8, #0x2815, lsl #16
  0x0000ffff90945928:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094592c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945930:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945934:   str	x8, [sp]
  0x0000ffff90945938:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094593c:   add	x8, x8, #0x8c0
  0x0000ffff90945940:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@-1 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90945944:   b	0x0000ffff90944d2c
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280572D0
  0x0000ffff90945948:   mov	x8, #0x72d0                	// #29392
                                                            ;   {metadata({method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff9094594c:   movk	x8, #0x2805, lsl #16
  0x0000ffff90945950:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945954:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945958:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff9094595c:   str	x8, [sp]
  0x0000ffff90945960:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945964:   add	x8, x8, #0x8c0
  0x0000ffff90945968:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff9094596c:   b	0x0000ffff90944d6c
 ;; CounterOverflowStub slow case
 ;; 0xFFF9281514A8
  0x0000ffff90945970:   mov	x8, #0x14a8                	// #5288
                                                            ;   {metadata({method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff90945974:   movk	x8, #0x2815, lsl #16
  0x0000ffff90945978:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094597c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945980:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945984:   str	x8, [sp]
  0x0000ffff90945988:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094598c:   add	x8, x8, #0x8c0
  0x0000ffff90945990:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatMaxVector::vspecies@-1 (line 86)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90945994:   b	0x0000ffff90944da8
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280F2B08
  0x0000ffff90945998:   mov	x8, #0x2b08                	// #11016
                                                            ;   {metadata({method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff9094599c:   movk	x8, #0x280f, lsl #16
  0x0000ffff909459a0:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909459a4:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909459a8:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909459ac:   str	x8, [sp]
  0x0000ffff909459b0:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909459b4:   add	x8, x8, #0x8c0
  0x0000ffff909459b8:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff909459bc:   b	0x0000ffff90944e10
 ;; CounterOverflowStub slow case
 ;; 0xFFF928058A08
  0x0000ffff909459c0:   mov	x8, #0x8a08                	// #35336
                                                            ;   {metadata({method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff909459c4:   movk	x8, #0x2805, lsl #16
  0x0000ffff909459c8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff909459cc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909459d0:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909459d4:   str	x8, [sp]
  0x0000ffff909459d8:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff909459dc:   add	x8, x8, #0x8c0
  0x0000ffff909459e0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff909459e4:   b	0x0000ffff90944e68
 ;; CounterOverflowStub slow case
 ;; 0xFC000ABC28
  0x0000ffff909459e8:   mov	x8, #0xbc28                	// #48168
                                                            ;   {metadata({method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000ffff909459ec:   movk	x8, #0xa, lsl #16
  0x0000ffff909459f0:   movk	x8, #0xfc, lsl #32
  0x0000ffff909459f4:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff909459f8:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff909459fc:   str	x8, [sp]
  0x0000ffff90945a00:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945a04:   add	x8, x8, #0x8c0
  0x0000ffff90945a08:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90945a0c:   b	0x0000ffff90944eb0
 ;; CounterOverflowStub slow case
 ;; 0xFFF928400A28
  0x0000ffff90945a10:   mov	x8, #0xa28                 	// #2600
                                                            ;   {metadata({method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800')}
  0x0000ffff90945a14:   movk	x8, #0x2840, lsl #16
  0x0000ffff90945a18:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945a1c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945a20:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945a24:   str	x8, [sp]
  0x0000ffff90945a28:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945a2c:   add	x8, x8, #0x8c0
  0x0000ffff90945a30:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff90945a34:   b	0x0000ffff90944eec
 ;; SimpleExceptionStub slow case
  0x0000ffff90945a38:   mov	x8, x0
  0x0000ffff90945a3c:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90945a40:   add	x9, x9, #0xdc0
  0x0000ffff90945a44:   blr	x9                          ; ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
 ;; should not reach here
  0x0000ffff90945a48:   dcps1	#0xdeae
  0x0000ffff90945a4c:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945a50:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFC00175E78
  0x0000ffff90945a54:   mov	x8, #0x5e78                	// #24184
                                                            ;   {metadata({method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator')}
  0x0000ffff90945a58:   movk	x8, #0x17, lsl #16
  0x0000ffff90945a5c:   movk	x8, #0xfc, lsl #32
  0x0000ffff90945a60:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945a64:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945a68:   str	x8, [sp]
  0x0000ffff90945a6c:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945a70:   add	x8, x8, #0x8c0
  0x0000ffff90945a74:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.random.RandomGenerator::nextInt@-1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff90945a78:   b	0x0000ffff90945104
 ;; CounterOverflowStub slow case
 ;; 0xFC002C9B80
  0x0000ffff90945a7c:   mov	x8, #0x9b80                	// #39808
                                                            ;   {metadata({method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport')}
  0x0000ffff90945a80:   movk	x8, #0x2c, lsl #16
  0x0000ffff90945a84:   movk	x8, #0xfc, lsl #32
  0x0000ffff90945a88:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945a8c:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945a90:   str	x8, [sp]
  0x0000ffff90945a94:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945a98:   add	x8, x8, #0x8c0
  0x0000ffff90945a9c:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
                                                            ; - java.util.random.RandomGenerator::nextInt@1 (line 820)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff90945aa0:   b	0x0000ffff90945140
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945aa4:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945aa8:   add	x8, x8, #0x9c0
  0x0000ffff90945aac:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
 ;; should not reach here
  0x0000ffff90945ab0:   dcps1	#0xdeae
  0x0000ffff90945ab4:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945ab8:   udf	#65535
 ;; RangeCheckStub slow case
  0x0000ffff90945abc:   mov	x8, x0
  0x0000ffff90945ac0:   mov	x9, x3
 ;; 0xFFFF97D530C0
  0x0000ffff90945ac4:   mov	x30, #0x30c0                	// #12480
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000ffff90945ac8:   movk	x30, #0x97d5, lsl #16
  0x0000ffff90945acc:   movk	x30, #0xffff, lsl #32
  0x0000ffff90945ad0:   blr	x30                         ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
 ;; should not reach here
  0x0000ffff90945ad4:   dcps1	#0xdeae
  0x0000ffff90945ad8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945adc:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90945ae0:   add	x2, x3, x2, uxtx
  0x0000ffff90945ae4:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90945ae8:   stp	x0, x2, [sp]
  0x0000ffff90945aec:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90945af0:   add	x8, x8, #0xe80
  0x0000ffff90945af4:   blr	x8
  0x0000ffff90945af8:   add	sp, sp, #0x10
  0x0000ffff90945afc:   b	0x0000ffff909451c0
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945b00:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945b04:   add	x8, x8, #0x9c0
  0x0000ffff90945b08:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
 ;; should not reach here
  0x0000ffff90945b0c:   dcps1	#0xdeae
  0x0000ffff90945b10:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945b14:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90945b18:   add	x0, x0, #0x10
  0x0000ffff90945b1c:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90945b20:   stp	x2, x0, [sp]
  0x0000ffff90945b24:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90945b28:   add	x8, x8, #0xe80
  0x0000ffff90945b2c:   blr	x8
  0x0000ffff90945b30:   mov	x2, x0
  0x0000ffff90945b34:   add	sp, sp, #0x10
  0x0000ffff90945b38:   b	0x0000ffff909451d0
 ;; SimpleExceptionStub slow case
  0x0000ffff90945b3c:   mov	x8, x2
  0x0000ffff90945b40:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90945b44:   add	x9, x9, #0xdc0
  0x0000ffff90945b48:   blr	x9                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
 ;; should not reach here
  0x0000ffff90945b4c:   dcps1	#0xdeae
  0x0000ffff90945b50:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945b54:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945b58:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945b5c:   add	x8, x8, #0x9c0
  0x0000ffff90945b60:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*getfield data {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
 ;; should not reach here
  0x0000ffff90945b64:   dcps1	#0xdeae
  0x0000ffff90945b68:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945b6c:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945b70:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945b74:   add	x8, x8, #0x9c0
  0x0000ffff90945b78:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
 ;; should not reach here
  0x0000ffff90945b7c:   dcps1	#0xdeae
  0x0000ffff90945b80:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945b84:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF9280505A8
  0x0000ffff90945b88:   mov	x8, #0x5a8                 	// #1448
                                                            ;   {metadata({method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945b8c:   movk	x8, #0x2805, lsl #16
  0x0000ffff90945b90:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945b94:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945b98:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945b9c:   str	x8, [sp]
  0x0000ffff90945ba0:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945ba4:   add	x8, x8, #0x8c0
  0x0000ffff90945ba8:   blr	x8                          ; ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::add@-1 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
  0x0000ffff90945bac:   b	0x0000ffff909452ec
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90945bb0:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90945bb4:   add	x8, x8, #0x9c0
  0x0000ffff90945bb8:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; should not reach here
  0x0000ffff90945bbc:   dcps1	#0xdeae
  0x0000ffff90945bc0:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945bc4:   udf	#65535
 ;; CounterOverflowStub slow case
 ;; 0xFFF928050690
  0x0000ffff90945bc8:   mov	x8, #0x690                 	// #1680
                                                            ;   {metadata({method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945bcc:   movk	x8, #0x2805, lsl #16
  0x0000ffff90945bd0:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945bd4:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945bd8:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945bdc:   str	x8, [sp]
  0x0000ffff90945be0:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945be4:   add	x8, x8, #0x8c0
  0x0000ffff90945be8:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::add@-1 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff90945bec:   b	0x0000ffff9094540c
 ;; CounterOverflowStub slow case
 ;; 0xFFF92804F590
  0x0000ffff90945bf0:   mov	x8, #0xf590                	// #62864
                                                            ;   {metadata({method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector')}
  0x0000ffff90945bf4:   movk	x8, #0x2804, lsl #16
  0x0000ffff90945bf8:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945bfc:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90945c00:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90945c04:   str	x8, [sp]
  0x0000ffff90945c08:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945c0c:   add	x8, x8, #0x8c0
  0x0000ffff90945c10:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff90945c14:   b	0x0000ffff9094544c
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401D80
  0x0000ffff90945c18:   mov	x8, #0x1d80                	// #7552
                                                            ;   {metadata({method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90945c1c:   movk	x8, #0x2840, lsl #16
  0x0000ffff90945c20:   movk	x8, #0xfff9, lsl #32
  0x0000ffff90945c24:   str	x8, [sp, #8]
 ;; 0x52
  0x0000ffff90945c28:   mov	x8, #0x52                  	// #82
  0x0000ffff90945c2c:   str	x8, [sp]
  0x0000ffff90945c30:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff90945c34:   add	x8, x8, #0x8c0
  0x0000ffff90945c38:   blr	x8                          ; ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
  0x0000ffff90945c3c:   b	0x0000ffff909456bc
 ;; C1SafepointPollStub slow case
  0x0000ffff90945c40:   adr	x8, 0x0000ffff9094570c      ;   {internal_word}
  0x0000ffff90945c44:   str	x8, [x28, #1200]
  0x0000ffff90945c48:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff90945c4c:   add	x8, x8, #0xac0
  0x0000ffff90945c50:   br	x8
 ;; Unwind handler
  0x0000ffff90945c54:   ldr	x0, [x28, #1368]
  0x0000ffff90945c58:   str	xzr, [x28, #1368]
  0x0000ffff90945c5c:   str	xzr, [x28, #1376]
 ;; remove_frame and dispatch to the unwind handler
  0x0000ffff90945c60:   ldp	x29, x30, [sp, #320]
  0x0000ffff90945c64:   add	sp, sp, #0x150
  0x0000ffff90945c68:   adrp	x8, Stub::<unknown> 0x0000ffff97d52000
                                                            ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000ffff90945c6c:   add	x8, x8, #0xa80
  0x0000ffff90945c70:   br	x8
  0x0000ffff90945c74:   udf	#0
[Stub Code]
  0x0000ffff90945c78:   ldr	x8, 0x0000ffff90945c80      ;   {no_reloc}
  0x0000ffff90945c7c:   br	x8
  0x0000ffff90945c80:   bl	0x0000ffff8fb8bb80
  0x0000ffff90945c84:   udf	#65535
  0x0000ffff90945c88:   ldr	x8, 0x0000ffff90945c90      ;   {trampoline_stub}
  0x0000ffff90945c8c:   br	x8
  0x0000ffff90945c90:   bl	0x0000ffff8fb8bb90
  0x0000ffff90945c94:   udf	#65535
  0x0000ffff90945c98:   ldr	x8, 0x0000ffff90945ca0      ;   {trampoline_stub}
  0x0000ffff90945c9c:   br	x8
  0x0000ffff90945ca0:   bl	0x0000ffff8fb8bba0
  0x0000ffff90945ca4:   udf	#65535
  0x0000ffff90945ca8:   isb                                 ;   {static_stub}
  0x0000ffff90945cac:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945cb0:   movk	x12, #0x0, lsl #16
  0x0000ffff90945cb4:   movk	x12, #0x0, lsl #32
  0x0000ffff90945cb8:   mov	x8, #0x0                   	// #0
  0x0000ffff90945cbc:   movk	x8, #0x0, lsl #16
  0x0000ffff90945cc0:   movk	x8, #0x0, lsl #32
  0x0000ffff90945cc4:   br	x8
  0x0000ffff90945cc8:   ldr	x8, 0x0000ffff90945cd0      ;   {trampoline_stub}
  0x0000ffff90945ccc:   br	x8
  0x0000ffff90945cd0:   bl	0x0000ffff8fb8afd0
  0x0000ffff90945cd4:   udf	#65535
  0x0000ffff90945cd8:   isb                                 ;   {static_stub}
  0x0000ffff90945cdc:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945ce0:   movk	x12, #0x0, lsl #16
  0x0000ffff90945ce4:   movk	x12, #0x0, lsl #32
  0x0000ffff90945ce8:   mov	x8, #0x0                   	// #0
  0x0000ffff90945cec:   movk	x8, #0x0, lsl #16
  0x0000ffff90945cf0:   movk	x8, #0x0, lsl #32
  0x0000ffff90945cf4:   br	x8
  0x0000ffff90945cf8:   ldr	x8, 0x0000ffff90945d00      ;   {trampoline_stub}
  0x0000ffff90945cfc:   br	x8
  0x0000ffff90945d00:   bl	0x0000ffff8fb8b000
  0x0000ffff90945d04:   udf	#65535
  0x0000ffff90945d08:   isb                                 ;   {static_stub}
  0x0000ffff90945d0c:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945d10:   movk	x12, #0x0, lsl #16
  0x0000ffff90945d14:   movk	x12, #0x0, lsl #32
  0x0000ffff90945d18:   mov	x8, #0x0                   	// #0
  0x0000ffff90945d1c:   movk	x8, #0x0, lsl #16
  0x0000ffff90945d20:   movk	x8, #0x0, lsl #32
  0x0000ffff90945d24:   br	x8
  0x0000ffff90945d28:   ldr	x8, 0x0000ffff90945d30      ;   {trampoline_stub}
  0x0000ffff90945d2c:   br	x8
  0x0000ffff90945d30:   bl	0x0000ffff8fb8b030
  0x0000ffff90945d34:   udf	#65535
  0x0000ffff90945d38:   isb                                 ;   {static_stub}
  0x0000ffff90945d3c:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945d40:   movk	x12, #0x0, lsl #16
  0x0000ffff90945d44:   movk	x12, #0x0, lsl #32
  0x0000ffff90945d48:   mov	x8, #0x0                   	// #0
  0x0000ffff90945d4c:   movk	x8, #0x0, lsl #16
  0x0000ffff90945d50:   movk	x8, #0x0, lsl #32
  0x0000ffff90945d54:   br	x8
  0x0000ffff90945d58:   isb                                 ;   {static_stub}
  0x0000ffff90945d5c:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945d60:   movk	x12, #0x0, lsl #16
  0x0000ffff90945d64:   movk	x12, #0x0, lsl #32
  0x0000ffff90945d68:   mov	x8, #0x0                   	// #0
  0x0000ffff90945d6c:   movk	x8, #0x0, lsl #16
  0x0000ffff90945d70:   movk	x8, #0x0, lsl #32
  0x0000ffff90945d74:   br	x8
  0x0000ffff90945d78:   isb                                 ;   {static_stub}
  0x0000ffff90945d7c:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff90945d80:   movk	x12, #0x0, lsl #16
  0x0000ffff90945d84:   movk	x12, #0x0, lsl #32
  0x0000ffff90945d88:   mov	x8, #0x0                   	// #0
  0x0000ffff90945d8c:   movk	x8, #0x0, lsl #16
  0x0000ffff90945d90:   movk	x8, #0x0, lsl #32
  0x0000ffff90945d94:   br	x8
[Exception Handler]
  0x0000ffff90945d98:   mov	x19, #0xdead                	// #57005
  0x0000ffff90945d9c:   mov	x2, #0x1a0                 	// #416
  0x0000ffff90945da0:   mov	x4, #0xdead                	// #57005
  0x0000ffff90945da4:   mov	x5, #0xdead                	// #57005
  0x0000ffff90945da8:   adrp	x8, 0x0000ffff97d55000      ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000ffff90945dac:   add	x8, x8, #0x7c0
  0x0000ffff90945db0:   blr	x8
  0x0000ffff90945db4:   dcps1	#0xdeae
  0x0000ffff90945db8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90945dbc:   udf	#65535
[Deopt Handler Code]
  0x0000ffff90945dc0:   adr	x30, 0x0000ffff90945dc0
  0x0000ffff90945dc4:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff90945dc8:   add	x8, x8, #0xdc0
  0x0000ffff90945dcc:   br	x8
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff90945dd0:   0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
  0x0000ffff90945dd8:   0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff90945de0:   0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
  0x0000ffff90945de8:   0x0000080000aa29c8 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8}
  0x0000ffff90945df0:   0x0000080000b8db70 a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
  0x0000ffff90945df8:   0x0000080000acb8b0 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0}
  0x0000ffff90945e00:   0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
  0x0000ffff90945e08:   0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
  0x0000ffff90945e10:   0x0000080000aa2c10 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
  0x0000ffff90945e18:   0x0000080000acbaf8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
  0x0000ffff90945e20:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
  0x0000ffff90945e28:   0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff90945e30:   0x0000fff92841cfb0 method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90945e38:   0x0000fff928218ce8 method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945e40:   0x0000fff928212e20 method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945e48:   0x0000fff928207f98 method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff90945e50:   0x0000fff928400c90 method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff90945e58:   0x0000fff928401d80 {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90945e60:   0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945e68:   0x000000fc01042278 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945e70:   0x0000fff928213768 method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945e78:   0x0000fff9282139f8 method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff90945e80:   0x0000fff928212238 method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff90945e88:   0x0000fff92820a4d0 method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90945e90:   0x0000fff92820a6c0 method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff90945e98:   0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945ea0:   0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff90945ea8:   0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff90945eb0:   0x0000fff928218758 method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff90945eb8:   0x0000fff928213de8 method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945ec0:   0x0000fff928217410 method data for {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff90945ec8:   0x0000fff92820ab10 method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90945ed0:   0x0000fff9282140d8 method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945ed8:   0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90945ee0:   0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff90945ee8:   0x0000fff9281551c0 {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff90945ef0:   0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945ef8:   0x0000fff9282127f0 method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff90945f00:   0x0000fff9282129c8 method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff90945f08:   0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff90945f10:   0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff90945f18:   0x000000fc01001450 'InnerFloat'
  0x0000ffff90945f20:   0x0000fff928214e50 method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f28:   0x0000000000000000 
  0x0000ffff90945f30:   0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f38:   0x0000fff928215038 method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f40:   0x0000fff928215220 method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f48:   0x0000000000000000 
  0x0000ffff90945f50:   0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f58:   0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f60:   0x0000000000000000 
  0x0000ffff90945f68:   0x0000000000000000 
  0x0000ffff90945f70:   0x0000000000000000 
  0x0000ffff90945f78:   0x0000000000000000 
  0x0000ffff90945f80:   0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945f88:   0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff90945f90:   0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff90945f98:   0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff90945fa0:   0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90945fa8:   0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff90945fb0:   0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff90945fb8:   0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff90945fc0:   0x000000fc00034a08 {method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
  0x0000ffff90945fc8:   0x0000fff928020148 {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  0x0000ffff90945fd0:   0x000000fc0047ba60 {method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
  0x0000ffff90945fd8:   0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff9094467f offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff9094475c offset=dc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@0 (line 58)
PcDesc(pc=0x0000ffff9094497c offset=2fc bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
PcDesc(pc=0x0000ffff90944980 offset=300 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094498c offset=30c bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
PcDesc(pc=0x0000ffff90944a68 offset=3e8 bits=0):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
PcDesc(pc=0x0000ffff90944a6c offset=3ec bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@13 (line 61)
PcDesc(pc=0x0000ffff90944a78 offset=3f8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
PcDesc(pc=0x0000ffff90944aa4 offset=424 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
PcDesc(pc=0x0000ffff90944c3c offset=5bc bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff90944cdc offset=65c bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff90944f4c offset=8cc bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff90944f50 offset=8d0 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90944f5c offset=8dc bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff90945034 offset=9b4 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff90945158 offset=ad8 bits=0):
   jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff90945184 offset=b04 bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff90945188 offset=b08 bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: stack[280],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff90945194 offset=b14 bits=0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff909451c0 offset=b40 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
PcDesc(pc=0x0000ffff909451d0 offset=b50 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
PcDesc(pc=0x0000ffff909452a4 offset=c24 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
PcDesc(pc=0x0000ffff909452a8 offset=c28 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
PcDesc(pc=0x0000ffff909452ac offset=c2c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
PcDesc(pc=0x0000ffff909453a4 offset=d24 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
PcDesc(pc=0x0000ffff909453bc offset=d3c bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: stack[276]
PcDesc(pc=0x0000ffff909453c8 offset=d48 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
PcDesc(pc=0x0000ffff909453cc offset=d4c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff909454f8 offset=e78 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff9094550c offset=e8c bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[296],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945518 offset=e98 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff909455c8 offset=f48 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff909455d8 offset=f58 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909455e4 offset=f64 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff909456bc offset=103c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
PcDesc(pc=0x0000ffff909456c0 offset=1040 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945704 offset=1084 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
PcDesc(pc=0x0000ffff90945740 offset=10c0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945768 offset=10e8 bits=0):
   jdk.incubator.vector.FloatVector::zero@-1 (line 551)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945790 offset=1110 bits=0):
   jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
   Locals
    - l0: 0
   jdk.incubator.vector.FloatVector::zero@19 (line 553)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909457b8 offset=1138 bits=0):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909457e0 offset=1160 bits=0):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909457f4 offset=1174 bits=0):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094580c offset=118c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094583c offset=11bc bits=0):
   jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: reg r10 [20],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945864 offset=11e4 bits=0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
   Locals
    - l0: reg r10 [20],int
    - l1: 64
    - l2: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094588c offset=120c bits=0):
   java.util.Objects::checkIndex@-1 (line 365)
   Locals
    - l0: reg r10 [20],int
    - l1: reg c_rarg4 [8],int
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909458a4 offset=1224 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909458c4 offset=1244 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909458f4 offset=1274 bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094591c offset=129c bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: empty
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945944 offset=12c4 bits=0):
   jdk.incubator.vector.FloatMaxVector::fromArray0@-1 (line 844)
   Locals
    - l0: a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff9094596c offset=12ec bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
   Locals
    - l0: a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945994 offset=1314 bits=0):
   jdk.incubator.vector.FloatMaxVector::vspecies@-1 (line 86)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909459bc offset=133c bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff909459e4 offset=1364 bits=0):
   jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
   Locals
    - l0: empty
    - l1: reg c_rarg4 [8],int
   jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945a0c offset=138c bits=0):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945a34 offset=13b4 bits=0):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945a48 offset=13c8 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945a78 offset=13f8 bits=0):
   java.util.random.RandomGenerator::nextInt@-1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff90945aa0 offset=1420 bits=0):
   jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
   Locals
    - l0: 1024
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
PcDesc(pc=0x0000ffff90945ab0 offset=1430 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945ad4 offset=1454 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945b0c offset=148c bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945b4c offset=14cc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945b64 offset=14e4 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945b7c offset=14fc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945bac offset=152c bits=0):
   jdk.incubator.vector.FloatVector::add@-1 (line 1223)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg4 [8],oop
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: reg c_rarg3 [6],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: reg v0 [64]
PcDesc(pc=0x0000ffff90945bbc offset=153c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945bec offset=156c bits=0):
   jdk.incubator.vector.FloatVector::add@-1 (line 1249)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: stack[276]
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945c14 offset=1594 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: stack[276]
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945c3c offset=15bc bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff90945dd1 offset=1751 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 42 OopMaps

ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 768 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop } pc offsets: 2256 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop [280]=Oop } pc offsets: 2824 
ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop } pc offsets: 3388 
ImmutableOopMap {[248]=Oop [256]=Oop [288]=Oop [296]=Oop } pc offsets: 3724 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 3928 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 4160 
ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 4288 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 4328 
ImmutableOopMap {c_rarg6=Oop [248]=Oop [256]=Oop } pc offsets: 4368 4408 4448 
ImmutableOopMap {[248]=Oop [256]=Oop } pc offsets: 4468 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4492 4540 4580 4620 4644 4676 
ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4724 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4764 
ImmutableOopMap {c_rarg2=Oop c_rarg5=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4804 4844 
ImmutableOopMap {c_rarg2=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4884 
ImmutableOopMap {c_rarg2=Oop r11=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 4924 4964 5004 5044 
ImmutableOopMap {[248]=Oop [256]=Oop [264]=Oop } pc offsets: 5064 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [264]=Oop } pc offsets: 5112 5152 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 5168 5204 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 5260 
ImmutableOopMap {c_rarg4=Oop c_rarg1=Oop c_rarg3=Oop [248]=Oop [256]=Oop } pc offsets: 5324 5348 5372 5420 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop [288]=Oop } pc offsets: 5436 5484 5524 
ImmutableOopMap {c_rarg0=Oop [248]=Oop [256]=Oop } pc offsets: 5564 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff9094475c offset=dc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@0 (line 58)
ScopeDesc(pc=0x0000ffff9094497c offset=2fc):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff9094497c offset=2fc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
ScopeDesc(pc=0x0000ffff90944980 offset=300):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90944980 offset=300):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094498c offset=30c):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff9094498c offset=30c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
ScopeDesc(pc=0x0000ffff90944a68 offset=3e8):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
ScopeDesc(pc=0x0000ffff90944a68 offset=3e8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
ScopeDesc(pc=0x0000ffff90944a6c offset=3ec):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@13 (line 61)
ScopeDesc(pc=0x0000ffff90944a78 offset=3f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
ScopeDesc(pc=0x0000ffff90944aa4 offset=424):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
ScopeDesc(pc=0x0000ffff90944c3c offset=5bc):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x0000ffff90944c3c offset=5bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
ScopeDesc(pc=0x0000ffff90944c3c offset=5bc):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff90944c3c offset=5bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff90944cdc offset=65c):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
ScopeDesc(pc=0x0000ffff90944cdc offset=65c):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
ScopeDesc(pc=0x0000ffff90944cdc offset=65c):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff90944cdc offset=65c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff90944f4c offset=8cc):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff90944f4c offset=8cc):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
ScopeDesc(pc=0x0000ffff90944f4c offset=8cc):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff90944f4c offset=8cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff90944f50 offset=8d0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90944f50 offset=8d0):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90944f50 offset=8d0):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90944f50 offset=8d0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90944f5c offset=8dc):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff90944f5c offset=8dc):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
ScopeDesc(pc=0x0000ffff90944f5c offset=8dc):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff90944f5c offset=8dc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff90945034 offset=9b4):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
ScopeDesc(pc=0x0000ffff90945034 offset=9b4):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
ScopeDesc(pc=0x0000ffff90945034 offset=9b4):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff90945034 offset=9b4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff90945158 offset=ad8):
   jdk.internal.util.random.RandomSupport::checkBound@1 (line 174)
ScopeDesc(pc=0x0000ffff90945158 offset=ad8):
   java.util.random.RandomGenerator::nextInt@1 (line 820)
ScopeDesc(pc=0x0000ffff90945158 offset=ad8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff90945184 offset=b04):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff90945184 offset=b04):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff90945188 offset=b08):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90945188 offset=b08):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: stack[280],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff90945194 offset=b14):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff90945194 offset=b14):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff909451c0 offset=b40):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
ScopeDesc(pc=0x0000ffff909451d0 offset=b50):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
ScopeDesc(pc=0x0000ffff909452a4 offset=c24):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
ScopeDesc(pc=0x0000ffff909452a8 offset=c28):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
ScopeDesc(pc=0x0000ffff909452ac offset=c2c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
ScopeDesc(pc=0x0000ffff909453a4 offset=d24):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff909453a4 offset=d24):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
ScopeDesc(pc=0x0000ffff909453bc offset=d3c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff909453bc offset=d3c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: stack[276]
ScopeDesc(pc=0x0000ffff909453c8 offset=d48):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff909453c8 offset=d48):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
ScopeDesc(pc=0x0000ffff909453cc offset=d4c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff909454f8 offset=e78):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff909454f8 offset=e78):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff909454f8 offset=e78):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff9094550c offset=e8c):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[296],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff9094550c offset=e8c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff9094550c offset=e8c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945518 offset=e98):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff90945518 offset=e98):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff90945518 offset=e98):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff909455c8 offset=f48):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff909455c8 offset=f48):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff909455c8 offset=f48):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff909455d8 offset=f58):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909455d8 offset=f58):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff909455d8 offset=f58):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909455e4 offset=f64):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff909455e4 offset=f64):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff909455e4 offset=f64):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff909456bc offset=103c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
ScopeDesc(pc=0x0000ffff909456c0 offset=1040):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945704 offset=1084):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
ScopeDesc(pc=0x0000ffff90945740 offset=10c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],oop
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945768 offset=10e8):
   jdk.incubator.vector.FloatVector::zero@-1 (line 551)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: empty
ScopeDesc(pc=0x0000ffff90945768 offset=10e8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945790 offset=1110):
   jdk.incubator.vector.FloatVector::toBits@-1 (line 489)
   Locals
    - l0: 0
ScopeDesc(pc=0x0000ffff90945790 offset=1110):
   jdk.incubator.vector.FloatVector::zero@19 (line 553)
   Locals
    - l0: empty
    - l1: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
ScopeDesc(pc=0x0000ffff90945790 offset=1110):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909457b8 offset=1138):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
ScopeDesc(pc=0x0000ffff909457b8 offset=1138):
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
ScopeDesc(pc=0x0000ffff909457b8 offset=1138):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909457e0 offset=1160):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
ScopeDesc(pc=0x0000ffff909457e0 offset=1160):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff909457e0 offset=1160):
   jdk.incubator.vector.FloatVector::zero@24 (line 553)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: 0
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
ScopeDesc(pc=0x0000ffff909457e0 offset=1160):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909457f4 offset=1174):
   jdk.incubator.vector.FloatVector::zero@32 (line 552)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff909457f4 offset=1174):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094580c offset=118c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094583c offset=11bc):
   jdk.incubator.vector.FloatVector::fromArray@-1 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: reg r10 [20],int
    - l3: empty
ScopeDesc(pc=0x0000ffff9094583c offset=11bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945864 offset=11e4):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@-1 (line 58)
   Locals
    - l0: reg r10 [20],int
    - l1: 64
    - l2: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff90945864 offset=11e4):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945864 offset=11e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094588c offset=120c):
   java.util.Objects::checkIndex@-1 (line 365)
   Locals
    - l0: reg r10 [20],int
    - l1: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff9094588c offset=120c):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff9094588c offset=120c):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094588c offset=120c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909458a4 offset=1224):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff909458a4 offset=1224):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909458a4 offset=1224):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909458a4 offset=1224):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909458c4 offset=1244):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: reg r10 [20],int
    - @1: reg c_rarg4 [8],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff909458c4 offset=1244):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909458c4 offset=1244):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: reg c_rarg2 [4],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909458c4 offset=1244):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909458f4 offset=1274):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@-1 (line 3768)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
ScopeDesc(pc=0x0000ffff909458f4 offset=1274):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff909458f4 offset=1274):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094591c offset=129c):
   jdk.incubator.vector.AbstractSpecies::dummyVector@-1 (line 308)
   Locals
    - l0: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l1: empty
ScopeDesc(pc=0x0000ffff9094591c offset=129c):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff9094591c offset=129c):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff9094591c offset=129c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: reg r10 [20],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945944 offset=12c4):
   jdk.incubator.vector.FloatMaxVector::fromArray0@-1 (line 844)
   Locals
    - l0: a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff90945944 offset=12c4):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945944 offset=12c4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff9094596c offset=12ec):
   jdk.incubator.vector.FloatVector::fromArray0Template@-1 (line 3281)
   Locals
    - l0: a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff9094596c offset=12ec):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff9094596c offset=12ec):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff9094596c offset=12ec):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945994 offset=1314):
   jdk.incubator.vector.FloatMaxVector::vspecies@-1 (line 86)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff90945994 offset=1314):
   jdk.incubator.vector.FloatVector::fromArray0Template@1 (line 3281)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: empty
ScopeDesc(pc=0x0000ffff90945994 offset=1314):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90945994 offset=1314):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945994 offset=1314):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909459bc offset=133c):
   jdk.incubator.vector.FloatVector$FloatSpecies::elementType@-1 (line 3660)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff909459bc offset=133c):
   jdk.incubator.vector.FloatVector::fromArray0Template@10 (line 3283)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
ScopeDesc(pc=0x0000ffff909459bc offset=133c):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909459bc offset=133c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909459bc offset=133c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff909459e4 offset=1364):
   jdk.incubator.vector.FloatVector::arrayAddress@-1 (line 3531)
   Locals
    - l0: empty
    - l1: reg c_rarg4 [8],int
ScopeDesc(pc=0x0000ffff909459e4 offset=1364):
   jdk.incubator.vector.FloatVector::fromArray0Template@20 (line 3284)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg4 [8],int
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
ScopeDesc(pc=0x0000ffff909459e4 offset=1364):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff909459e4 offset=1364):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff909459e4 offset=1364):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945a0c offset=138c):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
ScopeDesc(pc=0x0000ffff90945a0c offset=138c):
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
ScopeDesc(pc=0x0000ffff90945a0c offset=138c):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90945a0c offset=138c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945a0c offset=138c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   java.lang.invoke.LambdaForm$MH/0x000000fc01000800::invoke@-1
   Locals
    - l0: a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   jdk.incubator.vector.FloatVector::fromArray0Template@28 (line 3284)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: reg c_rarg2 [4],oop
    - @4: 0
    - @5: reg c_rarg5 [10],long
    - @6: 0
    - @7: reg c_rarg2 [4],oop
    - @8: 0
    - @9: reg c_rarg0 [0],long
    - @10: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945a34 offset=13b4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: reg c_rarg2 [4],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945a48 offset=13c8):
   jdk.incubator.vector.FloatVector::fromArray0Template@36 (line 3282)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945a48 offset=13c8):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff90945a48 offset=13c8):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff90945a48 offset=13c8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945a78 offset=13f8):
   java.util.random.RandomGenerator::nextInt@-1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
ScopeDesc(pc=0x0000ffff90945a78 offset=13f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff90945aa0 offset=1420):
   jdk.internal.util.random.RandomSupport::checkBound@-1 (line 174)
   Locals
    - l0: 1024
ScopeDesc(pc=0x0000ffff90945aa0 offset=1420):
   java.util.random.RandomGenerator::nextInt@1 (line 820)
   Locals
    - l0: a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
    - l1: 1024
ScopeDesc(pc=0x0000ffff90945aa0 offset=1420):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: stack[264],oop
    - l5: stack[272]
    - l6: reg c_rarg0 [0],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[256],oop
ScopeDesc(pc=0x0000ffff90945ab0 offset=1430):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945ad4 offset=1454):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945b0c offset=148c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945b4c offset=14cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945b64 offset=14e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945b7c offset=14fc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945bac offset=152c):
   jdk.incubator.vector.FloatVector::add@-1 (line 1223)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg4 [8],oop
ScopeDesc(pc=0x0000ffff90945bac offset=152c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: reg c_rarg3 [6],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: reg v0 [64]
ScopeDesc(pc=0x0000ffff90945bbc offset=153c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945bec offset=156c):
   jdk.incubator.vector.FloatVector::add@-1 (line 1249)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: stack[276]
ScopeDesc(pc=0x0000ffff90945bec offset=156c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945c14 offset=1594):
   jdk.incubator.vector.FloatVector::lanewise@-1 (line 872)
   Locals
    - l0: reg c_rarg0 [0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: stack[276]
ScopeDesc(pc=0x0000ffff90945c14 offset=1594):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff90945c14 offset=1594):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: stack[272]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff90945c3c offset=15bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[248],oop
    - l2: stack[256],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: reg c_rarg0 [0],oop
    - l5: reg c_rarg1 [2],int
    - l6: empty
    - l7: empty
    - l8: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff90944380: 300d
relocInfo@0x0000ffff90944380 [type=6(runtime_call) addr=0x0000ffff909446b4 offset=52] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff90944382: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff9094438c [type=7(external_word) addr=0x0000ffff909446dc offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff9094438e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff90944398 [type=7(external_word) addr=0x0000ffff909446f4 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff9094439a: 3009
relocInfo@0x0000ffff9094439a [type=6(runtime_call) addr=0x0000ffff90944718 offset=36] | [destination=0x0000ffff97c263c0]
         @0x0000ffff9094439c: 78016008
relocInfo@0x0000ffff9094439e [type=12(metadata) addr=0x0000ffff90944738 offset=32 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909443a0: 78016009
relocInfo@0x0000ffff909443a2 [type=12(metadata) addr=0x0000ffff9094475c offset=36 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909443a4: 78026006
relocInfo@0x0000ffff909443a6 [type=12(metadata) addr=0x0000ffff90944774 offset=24 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443a8: 78010809
relocInfo@0x0000ffff909443aa [type=1(oop) addr=0x0000ffff90944798 offset=36 data=1] | [oop_addr=0x0000ffff90945dd0 *=0x0000080000a97280 offset=0]
         @0x0000ffff909443ac: 78026004
relocInfo@0x0000ffff909443ae [type=12(metadata) addr=0x0000ffff909447a8 offset=16 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443b0: 78026007
relocInfo@0x0000ffff909443b2 [type=12(metadata) addr=0x0000ffff909447c4 offset=28 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443b4: 78026028
relocInfo@0x0000ffff909443b6 [type=12(metadata) addr=0x0000ffff90944864 offset=160 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443b8: 78036006
relocInfo@0x0000ffff909443ba [type=12(metadata) addr=0x0000ffff9094487c offset=24 data=3] | [metadata_addr=0x0000ffff90945e40 *=0x0000fff928212e20 offset=0]metadata_value=0x0000fff928212e20: method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443bc: 78036009
relocInfo@0x0000ffff909443be [type=12(metadata) addr=0x0000ffff909448a0 offset=36 data=3] | [metadata_addr=0x0000ffff90945e40 *=0x0000fff928212e20 offset=0]metadata_value=0x0000fff928212e20: method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443c0: 78026006
relocInfo@0x0000ffff909443c2 [type=12(metadata) addr=0x0000ffff909448b8 offset=24 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443c4: 78046006
relocInfo@0x0000ffff909443c6 [type=12(metadata) addr=0x0000ffff909448d0 offset=24 data=4] | [metadata_addr=0x0000ffff90945e48 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff909443c8: 78046009
relocInfo@0x0000ffff909443ca [type=12(metadata) addr=0x0000ffff909448f4 offset=36 data=4] | [metadata_addr=0x0000ffff90945e48 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff909443cc: 78056006
relocInfo@0x0000ffff909443ce [type=12(metadata) addr=0x0000ffff9094490c offset=24 data=5] | [metadata_addr=0x0000ffff90945e50 *=0x0000fff928400c90 offset=0]metadata_value=0x0000fff928400c90: method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff909443d0: 78026009
relocInfo@0x0000ffff909443d2 [type=12(metadata) addr=0x0000ffff90944930 offset=36 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443d4: 78020806
relocInfo@0x0000ffff909443d6 [type=1(oop) addr=0x0000ffff90944948 offset=24 data=2] | [oop_addr=0x0000ffff90945dd8 *=0x0000080000a972f0 offset=0]
         @0x0000ffff909443d8: 78030803
relocInfo@0x0000ffff909443da [type=1(oop) addr=0x0000ffff90944954 offset=12 data=3] | [oop_addr=0x0000ffff90945de0 *=0x0000080000000570 offset=0]
         @0x0000ffff909443dc: 78040803
relocInfo@0x0000ffff909443de [type=1(oop) addr=0x0000ffff90944960 offset=12 data=4] | [oop_addr=0x0000ffff90945de8 *=0x0000080000aa29c8 offset=0]
         @0x0000ffff909443e0: 2007
relocInfo@0x0000ffff909443e0 [type=4(static_call) addr=0x0000ffff9094497c offset=28] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff909443e2: 8001
relocInfo@0x0000ffff909443e2 [type=16(post_call_nop) addr=0x0000ffff90944980 offset=4]
         @0x0000ffff909443e4: 78026003
relocInfo@0x0000ffff909443e6 [type=12(metadata) addr=0x0000ffff9094498c offset=12 data=2] | [metadata_addr=0x0000ffff90945e38 *=0x0000fff928218ce8 offset=0]metadata_value=0x0000fff928218ce8: method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443e8: 7808602d
relocInfo@0x0000ffff909443ea [type=12(metadata) addr=0x0000ffff90944a40 offset=180 data=8] | [metadata_addr=0x0000ffff90945e68 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443ec: 7801600f
relocInfo@0x0000ffff909443ee [type=12(metadata) addr=0x0000ffff90944a7c offset=60 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909443f0: 7801600a
relocInfo@0x0000ffff909443f2 [type=12(metadata) addr=0x0000ffff90944aa4 offset=40 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909443f4: 78096006
relocInfo@0x0000ffff909443f6 [type=12(metadata) addr=0x0000ffff90944abc offset=24 data=9] | [metadata_addr=0x0000ffff90945e70 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909443f8: 78010809
relocInfo@0x0000ffff909443fa [type=1(oop) addr=0x0000ffff90944ae0 offset=36 data=1] | [oop_addr=0x0000ffff90945dd0 *=0x0000080000a97280 offset=0]
         @0x0000ffff909443fc: 78096003
relocInfo@0x0000ffff909443fe [type=12(metadata) addr=0x0000ffff90944aec offset=12 data=9] | [metadata_addr=0x0000ffff90945e70 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944400: 78096028
relocInfo@0x0000ffff90944402 [type=12(metadata) addr=0x0000ffff90944b8c offset=160 data=9] | [metadata_addr=0x0000ffff90945e70 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944404: 780a6006
relocInfo@0x0000ffff90944406 [type=12(metadata) addr=0x0000ffff90944ba4 offset=24 data=10] | [metadata_addr=0x0000ffff90945e78 *=0x0000fff9282139f8 offset=0]metadata_value=0x0000fff9282139f8: method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff90944408: 780a6009
relocInfo@0x0000ffff9094440a [type=12(metadata) addr=0x0000ffff90944bc8 offset=36 data=10] | [metadata_addr=0x0000ffff90945e78 *=0x0000fff9282139f8 offset=0]metadata_value=0x0000fff9282139f8: method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff9094440c: 780b6007
relocInfo@0x0000ffff9094440e [type=12(metadata) addr=0x0000ffff90944be4 offset=28 data=11] | [metadata_addr=0x0000ffff90945e80 *=0x0000fff928212238 offset=0]metadata_value=0x0000fff928212238: method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff90944410: 780b6009
relocInfo@0x0000ffff90944412 [type=12(metadata) addr=0x0000ffff90944c08 offset=36 data=11] | [metadata_addr=0x0000ffff90945e80 *=0x0000fff928212238 offset=0]metadata_value=0x0000fff928212238: method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff90944414: 7801080d
relocInfo@0x0000ffff90944416 [type=1(oop) addr=0x0000ffff90944c3c offset=52 data=1] | [oop_addr=0x0000ffff90945dd0 *=0x0000080000a97280 offset=0]
         @0x0000ffff90944418: 78096004
relocInfo@0x0000ffff9094441a [type=12(metadata) addr=0x0000ffff90944c4c offset=16 data=9] | [metadata_addr=0x0000ffff90945e70 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff9094441c: 780c6006
relocInfo@0x0000ffff9094441e [type=12(metadata) addr=0x0000ffff90944c64 offset=24 data=12] | [metadata_addr=0x0000ffff90945e88 *=0x0000fff92820a4d0 offset=0]metadata_value=0x0000fff92820a4d0: method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90944420: 780c6009
relocInfo@0x0000ffff90944422 [type=12(metadata) addr=0x0000ffff90944c88 offset=36 data=12] | [metadata_addr=0x0000ffff90945e88 *=0x0000fff92820a4d0 offset=0]metadata_value=0x0000fff92820a4d0: method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90944424: 780d6006
relocInfo@0x0000ffff90944426 [type=12(metadata) addr=0x0000ffff90944ca0 offset=24 data=13] | [metadata_addr=0x0000ffff90945e90 *=0x0000fff92820a6c0 offset=0]metadata_value=0x0000fff92820a6c0: method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff90944428: 780d6009
relocInfo@0x0000ffff9094442a [type=12(metadata) addr=0x0000ffff90944cc4 offset=36 data=13] | [metadata_addr=0x0000ffff90945e90 *=0x0000fff92820a6c0 offset=0]metadata_value=0x0000fff92820a6c0: method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff9094442c: 78050807
relocInfo@0x0000ffff9094442e [type=1(oop) addr=0x0000ffff90944ce0 offset=28 data=5] | [oop_addr=0x0000ffff90945df0 *=0x0000080000b8db70 offset=0]
         @0x0000ffff90944430: 78096004
relocInfo@0x0000ffff90944432 [type=12(metadata) addr=0x0000ffff90944cf0 offset=16 data=9] | [metadata_addr=0x0000ffff90945e70 *=0x0000fff928213768 offset=0]metadata_value=0x0000fff928213768: method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944434: 78116006
relocInfo@0x0000ffff90944436 [type=12(metadata) addr=0x0000ffff90944d08 offset=24 data=17] | [metadata_addr=0x0000ffff90945eb0 *=0x0000fff928218758 offset=0]metadata_value=0x0000fff928218758: method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff90944438: 7811600a
relocInfo@0x0000ffff9094443a [type=12(metadata) addr=0x0000ffff90944d30 offset=40 data=17] | [metadata_addr=0x0000ffff90945eb0 *=0x0000fff928218758 offset=0]metadata_value=0x0000fff928218758: method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff9094443c: 78126006
relocInfo@0x0000ffff9094443e [type=12(metadata) addr=0x0000ffff90944d48 offset=24 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944440: 78126009
relocInfo@0x0000ffff90944442 [type=12(metadata) addr=0x0000ffff90944d6c offset=36 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944444: 78136006
relocInfo@0x0000ffff90944446 [type=12(metadata) addr=0x0000ffff90944d84 offset=24 data=19] | [metadata_addr=0x0000ffff90945ec0 *=0x0000fff928217410 offset=0]metadata_value=0x0000fff928217410: method data for {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff90944448: 78010809
relocInfo@0x0000ffff9094444a [type=1(oop) addr=0x0000ffff90944da8 offset=36 data=1] | [oop_addr=0x0000ffff90945dd0 *=0x0000080000a97280 offset=0]
         @0x0000ffff9094444c: 78126004
relocInfo@0x0000ffff9094444e [type=12(metadata) addr=0x0000ffff90944db8 offset=16 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944450: 78126007
relocInfo@0x0000ffff90944452 [type=12(metadata) addr=0x0000ffff90944dd4 offset=28 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944454: 78146006
relocInfo@0x0000ffff90944456 [type=12(metadata) addr=0x0000ffff90944dec offset=24 data=20] | [metadata_addr=0x0000ffff90945ec8 *=0x0000fff92820ab10 offset=0]metadata_value=0x0000fff92820ab10: method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90944458: 7812600a
relocInfo@0x0000ffff9094445a [type=12(metadata) addr=0x0000ffff90944e14 offset=40 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff9094445c: 78126006
relocInfo@0x0000ffff9094445e [type=12(metadata) addr=0x0000ffff90944e2c offset=24 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944460: 78156006
relocInfo@0x0000ffff90944462 [type=12(metadata) addr=0x0000ffff90944e44 offset=24 data=21] | [metadata_addr=0x0000ffff90945ed0 *=0x0000fff9282140d8 offset=0]metadata_value=0x0000fff9282140d8: method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944464: 78126009
relocInfo@0x0000ffff90944466 [type=12(metadata) addr=0x0000ffff90944e68 offset=36 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944468: 78046009
relocInfo@0x0000ffff9094446a [type=12(metadata) addr=0x0000ffff90944e8c offset=36 data=4] | [metadata_addr=0x0000ffff90945e48 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff9094446c: 78046009
relocInfo@0x0000ffff9094446e [type=12(metadata) addr=0x0000ffff90944eb0 offset=36 data=4] | [metadata_addr=0x0000ffff90945e48 *=0x0000fff928207f98 offset=0]metadata_value=0x0000fff928207f98: method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90944470: 78056006
relocInfo@0x0000ffff90944472 [type=12(metadata) addr=0x0000ffff90944ec8 offset=24 data=5] | [metadata_addr=0x0000ffff90945e50 *=0x0000fff928400c90 offset=0]metadata_value=0x0000fff928400c90: method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90944474: 78126009
relocInfo@0x0000ffff90944476 [type=12(metadata) addr=0x0000ffff90944eec offset=36 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944478: 78020806
relocInfo@0x0000ffff9094447a [type=1(oop) addr=0x0000ffff90944f04 offset=24 data=2] | [oop_addr=0x0000ffff90945dd8 *=0x0000080000a972f0 offset=0]
         @0x0000ffff9094447c: 78030803
relocInfo@0x0000ffff9094447e [type=1(oop) addr=0x0000ffff90944f10 offset=12 data=3] | [oop_addr=0x0000ffff90945de0 *=0x0000080000000570 offset=0]
         @0x0000ffff90944480: 78060803
relocInfo@0x0000ffff90944482 [type=1(oop) addr=0x0000ffff90944f1c offset=12 data=6] | [oop_addr=0x0000ffff90945df8 *=0x0000080000acb8b0 offset=0]
         @0x0000ffff90944484: 200c
relocInfo@0x0000ffff90944484 [type=4(static_call) addr=0x0000ffff90944f4c offset=48] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff90944486: 8001
relocInfo@0x0000ffff90944486 [type=16(post_call_nop) addr=0x0000ffff90944f50 offset=4]
         @0x0000ffff90944488: 78126003
relocInfo@0x0000ffff9094448a [type=12(metadata) addr=0x0000ffff90944f5c offset=12 data=18] | [metadata_addr=0x0000ffff90945eb8 *=0x0000fff928213de8 offset=0]metadata_value=0x0000fff928213de8: method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff9094448c: 7808602d
relocInfo@0x0000ffff9094448e [type=12(metadata) addr=0x0000ffff90945010 offset=180 data=8] | [metadata_addr=0x0000ffff90945e68 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944490: 78070809
relocInfo@0x0000ffff90944492 [type=1(oop) addr=0x0000ffff90945034 offset=36 data=7] | [oop_addr=0x0000ffff90945e00 *=0x0000080000a48310 offset=0]
         @0x0000ffff90944494: 78016003
relocInfo@0x0000ffff90944496 [type=12(metadata) addr=0x0000ffff90945040 offset=12 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90944498: 781a6028
relocInfo@0x0000ffff9094449a [type=12(metadata) addr=0x0000ffff909450e0 offset=160 data=26] | [metadata_addr=0x0000ffff90945ef8 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff9094449c: 781a6009
relocInfo@0x0000ffff9094449e [type=12(metadata) addr=0x0000ffff90945104 offset=36 data=26] | [metadata_addr=0x0000ffff90945ef8 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff909444a0: 781b6006
relocInfo@0x0000ffff909444a2 [type=12(metadata) addr=0x0000ffff9094511c offset=24 data=27] | [metadata_addr=0x0000ffff90945f00 *=0x0000fff9282129c8 offset=0]metadata_value=0x0000fff9282129c8: method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff909444a4: 781b6009
relocInfo@0x0000ffff909444a6 [type=12(metadata) addr=0x0000ffff90945140 offset=36 data=27] | [metadata_addr=0x0000ffff90945f00 *=0x0000fff9282129c8 offset=0]metadata_value=0x0000fff9282129c8: method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff909444a8: 781a6007
relocInfo@0x0000ffff909444aa [type=12(metadata) addr=0x0000ffff9094515c offset=28 data=26] | [metadata_addr=0x0000ffff90945ef8 *=0x0000fff9282127f0 offset=0]metadata_value=0x0000fff9282127f0: method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff909444ac: 78070806
relocInfo@0x0000ffff909444ae [type=1(oop) addr=0x0000ffff90945174 offset=24 data=7] | [oop_addr=0x0000ffff90945e00 *=0x0000080000a48310 offset=0]
         @0x0000ffff909444b0: 2004
relocInfo@0x0000ffff909444b0 [type=4(static_call) addr=0x0000ffff90945184 offset=16] | [destination=0x0000ffff97c917c0 metadata=0x0000000000000000]
         @0x0000ffff909444b2: 8001
relocInfo@0x0000ffff909444b2 [type=16(post_call_nop) addr=0x0000ffff90945188 offset=4]
         @0x0000ffff909444b4: 900b
relocInfo@0x0000ffff909444b4 [type=18(barrier) addr=0x0000ffff909451b4 offset=44]
         @0x0000ffff909444b6: 9004
relocInfo@0x0000ffff909444b6 [type=18(barrier) addr=0x0000ffff909451c4 offset=16]
         @0x0000ffff909444b8: 78016003
relocInfo@0x0000ffff909444ba [type=12(metadata) addr=0x0000ffff909451d0 offset=12 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909444bc: 781e602d
relocInfo@0x0000ffff909444be [type=12(metadata) addr=0x0000ffff90945284 offset=180 data=30] | [metadata_addr=0x0000ffff90945f18 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff909444c0: 7801600b
relocInfo@0x0000ffff909444c2 [type=12(metadata) addr=0x0000ffff909452b0 offset=44 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909444c4: 781f6006
relocInfo@0x0000ffff909444c6 [type=12(metadata) addr=0x0000ffff909452c8 offset=24 data=31] | [metadata_addr=0x0000ffff90945f20 *=0x0000fff928214e50 offset=0]metadata_value=0x0000fff928214e50: method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444c8: 781f600a
relocInfo@0x0000ffff909444ca [type=12(metadata) addr=0x0000ffff909452f0 offset=40 data=31] | [metadata_addr=0x0000ffff90945f20 *=0x0000fff928214e50 offset=0]metadata_value=0x0000fff928214e50: method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444cc: 78080828
relocInfo@0x0000ffff909444ce [type=1(oop) addr=0x0000ffff90945390 offset=160 data=8] | [oop_addr=0x0000ffff90945e08 *=0x0000080000ad4da0 offset=0]
         @0x0000ffff909444d0: 7803100a
relocInfo@0x0000ffff909444d2 [type=2(virtual_call) addr=0x0000ffff909453b8 offset=40 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff909453ac metadata=0x0000000000000000]
         @0x0000ffff909444d4: 8001
relocInfo@0x0000ffff909444d4 [type=16(post_call_nop) addr=0x0000ffff909453bc offset=4]
         @0x0000ffff909444d6: 78016005
relocInfo@0x0000ffff909444d8 [type=12(metadata) addr=0x0000ffff909453d0 offset=20 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909444da: 78226006
relocInfo@0x0000ffff909444dc [type=12(metadata) addr=0x0000ffff909453e8 offset=24 data=34] | [metadata_addr=0x0000ffff90945f38 *=0x0000fff928215038 offset=0]metadata_value=0x0000fff928215038: method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444de: 7822600a
relocInfo@0x0000ffff909444e0 [type=12(metadata) addr=0x0000ffff90945410 offset=40 data=34] | [metadata_addr=0x0000ffff90945f38 *=0x0000fff928215038 offset=0]metadata_value=0x0000fff928215038: method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444e2: 78236006
relocInfo@0x0000ffff909444e4 [type=12(metadata) addr=0x0000ffff90945428 offset=24 data=35] | [metadata_addr=0x0000ffff90945f40 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444e6: 7823600a
relocInfo@0x0000ffff909444e8 [type=12(metadata) addr=0x0000ffff90945450 offset=40 data=35] | [metadata_addr=0x0000ffff90945f40 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444ea: 7803102e
relocInfo@0x0000ffff909444ec [type=2(virtual_call) addr=0x0000ffff90945508 offset=184 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff909454fc metadata=0x0000000000000000]
         @0x0000ffff909444ee: 8001
relocInfo@0x0000ffff909444ee [type=16(post_call_nop) addr=0x0000ffff9094550c offset=4]
         @0x0000ffff909444f0: 78236004
relocInfo@0x0000ffff909444f2 [type=12(metadata) addr=0x0000ffff9094551c offset=16 data=35] | [metadata_addr=0x0000ffff90945f40 *=0x0000fff928215220 offset=0]metadata_value=0x0000fff928215220: method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909444f4: 7803102e
relocInfo@0x0000ffff909444f6 [type=2(virtual_call) addr=0x0000ffff909455d4 offset=184 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff909455c8 metadata=0x0000000000000000]
         @0x0000ffff909444f8: 8001
relocInfo@0x0000ffff909444f8 [type=16(post_call_nop) addr=0x0000ffff909455d8 offset=4]
         @0x0000ffff909444fa: 78010803
relocInfo@0x0000ffff909444fc [type=1(oop) addr=0x0000ffff909455e4 offset=12 data=1] | [oop_addr=0x0000ffff90945dd0 *=0x0000080000a97280 offset=0]
         @0x0000ffff909444fe: 78016003
relocInfo@0x0000ffff90944500 [type=12(metadata) addr=0x0000ffff909455f0 offset=12 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90944502: 7801602a
relocInfo@0x0000ffff90944504 [type=12(metadata) addr=0x0000ffff90945698 offset=168 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90944506: 500a
relocInfo@0x0000ffff90944506 [type=10(poll) addr=0x0000ffff909456c0 offset=40]
         @0x0000ffff90944508: 7c04aece431c0000ffff3803
relocInfo@0x0000ffff90944512 [type=7(external_word) addr=0x0000ffff909456cc offset=12 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff90944514: 78016005
relocInfo@0x0000ffff90944516 [type=12(metadata) addr=0x0000ffff909456e0 offset=20 data=1] | [metadata_addr=0x0000ffff90945e30 *=0x0000fff92841cfb0 offset=0]metadata_value=0x0000fff92841cfb0: method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90944518: 580b
relocInfo@0x0000ffff90944518 [type=11(poll_return) addr=0x0000ffff9094570c offset=44]
         @0x0000ffff9094451a: 78066004
relocInfo@0x0000ffff9094451c [type=12(metadata) addr=0x0000ffff9094571c offset=16 data=6] | [metadata_addr=0x0000ffff90945e58 *=0x0000fff928401d80 offset=0]metadata_value=0x0000fff928401d80: {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff9094451e: 3006
relocInfo@0x0000ffff9094451e [type=6(runtime_call) addr=0x0000ffff90945734 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944520: 78076004
relocInfo@0x0000ffff90944522 [type=12(metadata) addr=0x0000ffff90945744 offset=16 data=7] | [metadata_addr=0x0000ffff90945e60 *=0x0000fff92804e2e8 offset=0]metadata_value=0x0000fff92804e2e8: {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944524: 3006
relocInfo@0x0000ffff90944524 [type=6(runtime_call) addr=0x0000ffff9094575c offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944526: 782b6004
relocInfo@0x0000ffff90944528 [type=12(metadata) addr=0x0000ffff9094576c offset=16 data=43] | [metadata_addr=0x0000ffff90945f80 *=0x0000fff92804dde8 offset=0]metadata_value=0x0000fff92804dde8: {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff9094452a: 3006
relocInfo@0x0000ffff9094452a [type=6(runtime_call) addr=0x0000ffff90945784 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff9094452c: 782c6004
relocInfo@0x0000ffff9094452e [type=12(metadata) addr=0x0000ffff90945794 offset=16 data=44] | [metadata_addr=0x0000ffff90945f88 *=0x000000fc000abc28 offset=0]metadata_value=0x000000fc000abc28: {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90944530: 3006
relocInfo@0x0000ffff90944530 [type=6(runtime_call) addr=0x0000ffff909457ac offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944532: 782d6004
relocInfo@0x0000ffff90944534 [type=12(metadata) addr=0x0000ffff909457bc offset=16 data=45] | [metadata_addr=0x0000ffff90945f90 *=0x0000fff928400a28 offset=0]metadata_value=0x0000fff928400a28: {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90944536: 3006
relocInfo@0x0000ffff90944536 [type=6(runtime_call) addr=0x0000ffff909457d4 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944538: 3005
relocInfo@0x0000ffff90944538 [type=6(runtime_call) addr=0x0000ffff909457e8 offset=20] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff9094453a: 3006
relocInfo@0x0000ffff9094453a [type=6(runtime_call) addr=0x0000ffff90945800 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff9094453c: 780e6006
relocInfo@0x0000ffff9094453e [type=12(metadata) addr=0x0000ffff90945818 offset=24 data=14] | [metadata_addr=0x0000ffff90945e98 *=0x0000fff9280561c0 offset=0]metadata_value=0x0000fff9280561c0: {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944540: 3006
relocInfo@0x0000ffff90944540 [type=6(runtime_call) addr=0x0000ffff90945830 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944542: 780f6004
relocInfo@0x0000ffff90944544 [type=12(metadata) addr=0x0000ffff90945840 offset=16 data=15] | [metadata_addr=0x0000ffff90945ea0 *=0x0000fff9281e5020 offset=0]metadata_value=0x0000fff9281e5020: {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
         @0x0000ffff90944546: 3006
relocInfo@0x0000ffff90944546 [type=6(runtime_call) addr=0x0000ffff90945858 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944548: 78106004
relocInfo@0x0000ffff9094454a [type=12(metadata) addr=0x0000ffff90945868 offset=16 data=16] | [metadata_addr=0x0000ffff90945ea8 *=0x000000fc00056388 offset=0]metadata_value=0x000000fc00056388: {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
         @0x0000ffff9094454c: 3006
relocInfo@0x0000ffff9094454c [type=6(runtime_call) addr=0x0000ffff90945880 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff9094454e: 3006
relocInfo@0x0000ffff9094454e [type=6(runtime_call) addr=0x0000ffff90945898 offset=24] | [destination=0x0000ffff97d569c0]
         @0x0000ffff90944550: 3008
relocInfo@0x0000ffff90944550 [type=6(runtime_call) addr=0x0000ffff909458b8 offset=32] | [destination=0x0000ffff97d569c0]
         @0x0000ffff90944552: 78166006
relocInfo@0x0000ffff90944554 [type=12(metadata) addr=0x0000ffff909458d0 offset=24 data=22] | [metadata_addr=0x0000ffff90945ed8 *=0x0000fff9280f3720 offset=0]metadata_value=0x0000fff9280f3720: {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90944556: 3006
relocInfo@0x0000ffff90944556 [type=6(runtime_call) addr=0x0000ffff909458e8 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944558: 78176004
relocInfo@0x0000ffff9094455a [type=12(metadata) addr=0x0000ffff909458f8 offset=16 data=23] | [metadata_addr=0x0000ffff90945ee0 *=0x0000fff9280fa960 offset=0]metadata_value=0x0000fff9280fa960: {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
         @0x0000ffff9094455c: 3006
relocInfo@0x0000ffff9094455c [type=6(runtime_call) addr=0x0000ffff90945910 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff9094455e: 78186004
relocInfo@0x0000ffff90944560 [type=12(metadata) addr=0x0000ffff90945920 offset=16 data=24] | [metadata_addr=0x0000ffff90945ee8 *=0x0000fff9281551c0 offset=0]metadata_value=0x0000fff9281551c0: {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff90944562: 3006
relocInfo@0x0000ffff90944562 [type=6(runtime_call) addr=0x0000ffff90945938 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944564: 78196004
relocInfo@0x0000ffff90944566 [type=12(metadata) addr=0x0000ffff90945948 offset=16 data=25] | [metadata_addr=0x0000ffff90945ef0 *=0x0000fff9280572d0 offset=0]metadata_value=0x0000fff9280572d0: {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff90944568: 3006
relocInfo@0x0000ffff90944568 [type=6(runtime_call) addr=0x0000ffff90945960 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff9094456a: 782e6004
relocInfo@0x0000ffff9094456c [type=12(metadata) addr=0x0000ffff90945970 offset=16 data=46] | [metadata_addr=0x0000ffff90945f98 *=0x0000fff9281514a8 offset=0]metadata_value=0x0000fff9281514a8: {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff9094456e: 3006
relocInfo@0x0000ffff9094456e [type=6(runtime_call) addr=0x0000ffff90945988 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944570: 782f6004
relocInfo@0x0000ffff90944572 [type=12(metadata) addr=0x0000ffff90945998 offset=16 data=47] | [metadata_addr=0x0000ffff90945fa0 *=0x0000fff9280f2b08 offset=0]metadata_value=0x0000fff9280f2b08: {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff90944574: 3006
relocInfo@0x0000ffff90944574 [type=6(runtime_call) addr=0x0000ffff909459b0 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944576: 78306004
relocInfo@0x0000ffff90944578 [type=12(metadata) addr=0x0000ffff909459c0 offset=16 data=48] | [metadata_addr=0x0000ffff90945fa8 *=0x0000fff928058a08 offset=0]metadata_value=0x0000fff928058a08: {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff9094457a: 3006
relocInfo@0x0000ffff9094457a [type=6(runtime_call) addr=0x0000ffff909459d8 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff9094457c: 782c6004
relocInfo@0x0000ffff9094457e [type=12(metadata) addr=0x0000ffff909459e8 offset=16 data=44] | [metadata_addr=0x0000ffff90945f88 *=0x000000fc000abc28 offset=0]metadata_value=0x000000fc000abc28: {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
         @0x0000ffff90944580: 3006
relocInfo@0x0000ffff90944580 [type=6(runtime_call) addr=0x0000ffff90945a00 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944582: 782d6004
relocInfo@0x0000ffff90944584 [type=12(metadata) addr=0x0000ffff90945a10 offset=16 data=45] | [metadata_addr=0x0000ffff90945f90 *=0x0000fff928400a28 offset=0]metadata_value=0x0000fff928400a28: {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
         @0x0000ffff90944586: 3006
relocInfo@0x0000ffff90944586 [type=6(runtime_call) addr=0x0000ffff90945a28 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944588: 3005
relocInfo@0x0000ffff90944588 [type=6(runtime_call) addr=0x0000ffff90945a3c offset=20] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff9094458a: 781c6006
relocInfo@0x0000ffff9094458c [type=12(metadata) addr=0x0000ffff90945a54 offset=24 data=28] | [metadata_addr=0x0000ffff90945f08 *=0x000000fc00175e78 offset=0]metadata_value=0x000000fc00175e78: {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
         @0x0000ffff9094458e: 3006
relocInfo@0x0000ffff9094458e [type=6(runtime_call) addr=0x0000ffff90945a6c offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944590: 781d6004
relocInfo@0x0000ffff90944592 [type=12(metadata) addr=0x0000ffff90945a7c offset=16 data=29] | [metadata_addr=0x0000ffff90945f10 *=0x000000fc002c9b80 offset=0]metadata_value=0x000000fc002c9b80: {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
         @0x0000ffff90944594: 3006
relocInfo@0x0000ffff90944594 [type=6(runtime_call) addr=0x0000ffff90945a94 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90944596: 3004
relocInfo@0x0000ffff90944596 [type=6(runtime_call) addr=0x0000ffff90945aa4 offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90944598: 3008
relocInfo@0x0000ffff90944598 [type=6(runtime_call) addr=0x0000ffff90945ac4 offset=32] | [destination=0x0000ffff97d530c0]
         @0x0000ffff9094459a: 7c0497d58e800000ffff380a
relocInfo@0x0000ffff909445a4 [type=7(external_word) addr=0x0000ffff90945aec offset=40 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff909445a6: 3005
relocInfo@0x0000ffff909445a6 [type=6(runtime_call) addr=0x0000ffff90945b00 offset=20] | [destination=0x0000ffff97d539c0]
         @0x0000ffff909445a8: 7c0497d58e800000ffff3809
relocInfo@0x0000ffff909445b2 [type=7(external_word) addr=0x0000ffff90945b24 offset=36 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff909445b4: 3007
relocInfo@0x0000ffff909445b4 [type=6(runtime_call) addr=0x0000ffff90945b40 offset=28] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff909445b6: 3006
relocInfo@0x0000ffff909445b6 [type=6(runtime_call) addr=0x0000ffff90945b58 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff909445b8: 3006
relocInfo@0x0000ffff909445b8 [type=6(runtime_call) addr=0x0000ffff90945b70 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff909445ba: 78216006
relocInfo@0x0000ffff909445bc [type=12(metadata) addr=0x0000ffff90945b88 offset=24 data=33] | [metadata_addr=0x0000ffff90945f30 *=0x0000fff9280505a8 offset=0]metadata_value=0x0000fff9280505a8: {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909445be: 3006
relocInfo@0x0000ffff909445be [type=6(runtime_call) addr=0x0000ffff90945ba0 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff909445c0: 3004
relocInfo@0x0000ffff909445c0 [type=6(runtime_call) addr=0x0000ffff90945bb0 offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff909445c2: 78256006
relocInfo@0x0000ffff909445c4 [type=12(metadata) addr=0x0000ffff90945bc8 offset=24 data=37] | [metadata_addr=0x0000ffff90945f50 *=0x0000fff928050690 offset=0]metadata_value=0x0000fff928050690: {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909445c6: 3006
relocInfo@0x0000ffff909445c6 [type=6(runtime_call) addr=0x0000ffff90945be0 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff909445c8: 78266004
relocInfo@0x0000ffff909445ca [type=12(metadata) addr=0x0000ffff90945bf0 offset=16 data=38] | [metadata_addr=0x0000ffff90945f58 *=0x0000fff92804f590 offset=0]metadata_value=0x0000fff92804f590: {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
         @0x0000ffff909445cc: 3006
relocInfo@0x0000ffff909445cc [type=6(runtime_call) addr=0x0000ffff90945c08 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff909445ce: 78066004
relocInfo@0x0000ffff909445d0 [type=12(metadata) addr=0x0000ffff90945c18 offset=16 data=6] | [metadata_addr=0x0000ffff90945e58 *=0x0000fff928401d80 offset=0]metadata_value=0x0000fff928401d80: {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff909445d2: 3006
relocInfo@0x0000ffff909445d2 [type=6(runtime_call) addr=0x0000ffff90945c30 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff909445d4: 794d4004
relocInfo@0x0000ffff909445d6 [type=8(internal_word) addr=0x0000ffff90945c40 offset=16 data=333] | [target=0x0000ffff9094570c]
         @0x0000ffff909445d8: 3002
relocInfo@0x0000ffff909445d8 [type=6(runtime_call) addr=0x0000ffff90945c48 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff909445da: 3008
relocInfo@0x0000ffff909445da [type=6(runtime_call) addr=0x0000ffff90945c68 offset=32] | [destination=0x0000ffff97d52a80]
         @0x0000ffff909445dc: 0004
relocInfo@0x0000ffff909445dc [type=0(none) addr=0x0000ffff90945c78 offset=16]
         @0x0000ffff909445de: 7c01ff416800
relocInfo@0x0000ffff909445e2 [type=13(trampoline_stub) addr=0x0000ffff90945c78 offset=0 data=-191] | [trampoline owner=0x0000ffff9094497c]
         @0x0000ffff909445e4: 7c01fdcd6804
relocInfo@0x0000ffff909445e8 [type=13(trampoline_stub) addr=0x0000ffff90945c88 offset=16 data=-563] | [trampoline owner=0x0000ffff90944f4c]
         @0x0000ffff909445ea: 7c01fd3f6804
relocInfo@0x0000ffff909445ee [type=13(trampoline_stub) addr=0x0000ffff90945c98 offset=16 data=-705] | [trampoline owner=0x0000ffff90945184]
         @0x0000ffff909445f0: 7c01fcb52804
relocInfo@0x0000ffff909445f4 [type=5(static_stub) addr=0x0000ffff90945ca8 offset=16 data=-843] | [static_call=0x0000ffff909453ac]
         @0x0000ffff909445f6: 78206001
relocInfo@0x0000ffff909445f8 [type=12(metadata) addr=0x0000ffff90945cac offset=4 data=32] | [metadata_addr=0x0000ffff90945f28 *=0x0000000000000000 offset=0]
         @0x0000ffff909445fa: 7c01fcb26807
relocInfo@0x0000ffff909445fe [type=13(trampoline_stub) addr=0x0000ffff90945cc8 offset=28 data=-846] | [trampoline owner=0x0000ffff909453b8]
         @0x0000ffff90944600: 7c01fc612804
relocInfo@0x0000ffff90944604 [type=5(static_stub) addr=0x0000ffff90945cd8 offset=16 data=-927] | [static_call=0x0000ffff909454fc]
         @0x0000ffff90944606: 78246001
relocInfo@0x0000ffff90944608 [type=12(metadata) addr=0x0000ffff90945cdc offset=4 data=36] | [metadata_addr=0x0000ffff90945f48 *=0x0000000000000000 offset=0]
         @0x0000ffff9094460a: 7c01fc5e6807
relocInfo@0x0000ffff9094460e [type=13(trampoline_stub) addr=0x0000ffff90945cf8 offset=28 data=-930] | [trampoline owner=0x0000ffff90945508]
         @0x0000ffff90944610: 7c01fc2e2804
relocInfo@0x0000ffff90944614 [type=5(static_stub) addr=0x0000ffff90945d08 offset=16 data=-978] | [static_call=0x0000ffff909455c8]
         @0x0000ffff90944616: 78276001
relocInfo@0x0000ffff90944618 [type=12(metadata) addr=0x0000ffff90945d0c offset=4 data=39] | [metadata_addr=0x0000ffff90945f60 *=0x0000000000000000 offset=0]
         @0x0000ffff9094461a: 7c01fc2b6807
relocInfo@0x0000ffff9094461e [type=13(trampoline_stub) addr=0x0000ffff90945d28 offset=28 data=-981] | [trampoline owner=0x0000ffff909455d4]
         @0x0000ffff90944620: 7c01fdcd2804
relocInfo@0x0000ffff90944624 [type=5(static_stub) addr=0x0000ffff90945d38 offset=16 data=-563] | [static_call=0x0000ffff90944f4c]
         @0x0000ffff90944626: 78286001
relocInfo@0x0000ffff90944628 [type=12(metadata) addr=0x0000ffff90945d3c offset=4 data=40] | [metadata_addr=0x0000ffff90945f68 *=0x0000000000000000 offset=0]
         @0x0000ffff9094462a: 7c01fd3f2807
relocInfo@0x0000ffff9094462e [type=5(static_stub) addr=0x0000ffff90945d58 offset=28 data=-705] | [static_call=0x0000ffff90945184]
         @0x0000ffff90944630: 78296001
relocInfo@0x0000ffff90944632 [type=12(metadata) addr=0x0000ffff90945d5c offset=4 data=41] | [metadata_addr=0x0000ffff90945f70 *=0x0000000000000000 offset=0]
         @0x0000ffff90944634: 7c01ff412807
relocInfo@0x0000ffff90944638 [type=5(static_stub) addr=0x0000ffff90945d78 offset=28 data=-191] | [static_call=0x0000ffff9094497c]
         @0x0000ffff9094463a: 782a6001
relocInfo@0x0000ffff9094463c [type=12(metadata) addr=0x0000ffff90945d7c offset=4 data=42] | [metadata_addr=0x0000ffff90945f78 *=0x0000000000000000 offset=0]
         @0x0000ffff9094463e: 300b
relocInfo@0x0000ffff9094463e [type=6(runtime_call) addr=0x0000ffff90945da8 offset=44] | [destination=0x0000ffff97d557c0]
         @0x0000ffff90944640: 3007
relocInfo@0x0000ffff90944640 [type=6(runtime_call) addr=0x0000ffff90945dc4 offset=28] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff90944642: 0000
relocInfo@0x0000ffff90944642 [type=0(none) addr=0x0000ffff90945dc4 offset=0]
         @0x0000ffff90944644: 0000
relocInfo@0x0000ffff90944644 [type=0(none) addr=0x0000ffff90945dc4 offset=0]
         @0x0000ffff90944646: 0000
relocInfo@0x0000ffff90944646 [type=0(none) addr=0x0000ffff90945dc4 offset=0]
         @0x0000ffff90944648: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
Dependency of type evol_method
  method  = *{method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = *{method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = *{method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 6 entries, 52 bytes):
{
   < 0x0000ffff90944a74, 0x0000ffff90945800 > < 0x0000ffff9094519c, 0x0000ffff90945aa4 > < 0x0000ffff909451c0, 0x0000ffff90945b00 > 
   < 0x0000ffff909452a4, 0x0000ffff90945b58 > < 0x0000ffff909452a8, 0x0000ffff90945b70 > < 0x0000ffff909453c8, 0x0000ffff90945bb0 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
# 2: 0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
# 3: 0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
# 4: 0x0000080000aa29c8 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc01054180'{0x0000080000aa29c8}
# 5: 0x0000080000b8db70 a 'jdk/incubator/vector/FloatMaxVector'{0x0000080000b8db70}
# 6: 0x0000080000acb8b0 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc010594f8'{0x0000080000acb8b0}
# 7: 0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
# 8: 0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
# 9: 0x0000080000aa2c10 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000aa2c10}
#10: 0x0000080000acbaf8 a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000080000acbaf8}
#11: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
#12: 0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000fff92841cfb0 method data for {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 2: 0x0000fff928218ce8 method data for {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 3: 0x0000fff928212e20 method data for {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
# 4: 0x0000fff928207f98 method data for {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
# 5: 0x0000fff928400c90 method data for {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
# 6: 0x0000fff928401d80 {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 7: 0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 8: 0x000000fc01042278 'jdk/incubator/vector/FloatVector'
# 9: 0x0000fff928213768 method data for {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#10: 0x0000fff9282139f8 method data for {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#11: 0x0000fff928212238 method data for {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#12: 0x0000fff92820a4d0 method data for {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#13: 0x0000fff92820a6c0 method data for {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#14: 0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#15: 0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#16: 0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#17: 0x0000fff928218758 method data for {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#18: 0x0000fff928213de8 method data for {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#19: 0x0000fff928217410 method data for {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
#20: 0x0000fff92820ab10 method data for {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#21: 0x0000fff9282140d8 method data for {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#22: 0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#23: 0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#24: 0x0000fff9281551c0 {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#25: 0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#26: 0x0000fff9282127f0 method data for {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
#27: 0x0000fff9282129c8 method data for {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#28: 0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
#29: 0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#30: 0x000000fc01001450 'InnerFloat'
#31: 0x0000fff928214e50 method data for {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#32: 0x0000000000000000 nullptr-oop
#33: 0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#34: 0x0000fff928215038 method data for {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#35: 0x0000fff928215220 method data for {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#36: 0x0000000000000000 nullptr-oop
#37: 0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#38: 0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#39: 0x0000000000000000 nullptr-oop
#40: 0x0000000000000000 nullptr-oop
#41: 0x0000000000000000 nullptr-oop
#42: 0x0000000000000000 nullptr-oop
#43: 0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
#44: 0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#45: 0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
#46: 0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
#47: 0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#48: 0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#49: 0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#50: 0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#51: 0x000000fc00034a08 {method} {0x000000fc00034a08} 'floatToRawIntBits' '(F)I' in 'java/lang/Float'
#52: 0x0000fff928020148 {method} {0x0000fff928020148} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
#53: 0x000000fc0047ba60 {method} {0x000000fc0047ba60} 'checkIndex' '(IILjava/util/function/BiFunction;)I' in 'jdk/internal/util/Preconditions'
#54: 0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1) 5564  557       3       TestZGCSpillingAtLoadBarrierStub::test_float (22 bytes)
 total in heap  [0x0000ffff90947590,0x0000ffff90947c50] = 1728
 relocation     [0x0000ffff90947700,0x0000ffff90947768] = 104
 main code      [0x0000ffff90947780,0x0000ffff90947aa8] = 808
 stub code      [0x0000ffff90947aa8,0x0000ffff90947ae0] = 56
 oops           [0x0000ffff90947ae0,0x0000ffff90947ae8] = 8
 metadata       [0x0000ffff90947ae8,0x0000ffff90947b00] = 24
 scopes data    [0x0000ffff90947b00,0x0000ffff90947b58] = 88
 scopes pcs     [0x0000ffff90947b58,0x0000ffff90947c28] = 208
 dependencies   [0x0000ffff90947c28,0x0000ffff90947c30] = 8
 nul chk table  [0x0000ffff90947c30,0x0000ffff90947c50] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;;  block B1 [0, 0]
  0x0000ffff90947780:   nop
  0x0000ffff90947784:   nop
  0x0000ffff90947788:   nop
  0x0000ffff9094778c:   nop
  0x0000ffff90947790:   nop
  0x0000ffff90947794:   nop
  0x0000ffff90947798:   nop
  0x0000ffff9094779c:   nop
  0x0000ffff909477a0:   nop
[Entry Point]
  # {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[LOuter;'
  # parm1:    c_rarg3   = int
  #           [sp+0x30]  (sp of caller)
  0x0000ffff909477a4:   ldr	w8, [x1, #8]
  0x0000ffff909477a8:   ldr	w10, [x9, #8]
  0x0000ffff909477ac:   cmp	w8, w10
  0x0000ffff909477b0:   b.eq	0x0000ffff909477c0  // b.none
  0x0000ffff909477b4:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff909477b8:   add	x8, x8, #0xec0
  0x0000ffff909477bc:   br	x8
[Verified Entry Point]
  0x0000ffff909477c0:   nop
  0x0000ffff909477c4:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff909477c8:   str	xzr, [x9]
  0x0000ffff909477cc:   sub	sp, sp, #0x30
  0x0000ffff909477d0:   stp	x29, x30, [sp, #32]
  0x0000ffff909477d4:   ldrb	w8, [x28, #1208]
  0x0000ffff909477d8:   cbz	x8, 0x0000ffff909477f0
 ;; 0xFFFFAECE431C
  0x0000ffff909477dc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff909477e0:   movk	x8, #0xaece, lsl #16
  0x0000ffff909477e4:   movk	x8, #0xffff, lsl #32
  0x0000ffff909477e8:   mov	x0, x28
  0x0000ffff909477ec:   blr	x8
  0x0000ffff909477f0:   ldr	w8, 0x0000ffff9094782c
 ;; 0xFFFFB0903FF8
  0x0000ffff909477f4:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff909477f8:   movk	x9, #0xb090, lsl #16
  0x0000ffff909477fc:   movk	x9, #0xffff, lsl #32
  0x0000ffff90947800:   orr	x9, x9, x8, lsr #32
  0x0000ffff90947804:   ldr	w9, [x9]
  0x0000ffff90947808:   orr	x8, x8, x9, lsl #32
  0x0000ffff9094780c:   ldr	x9, [x28, #88]
  0x0000ffff90947810:   cmp	x8, x9
  0x0000ffff90947814:   b.eq	0x0000ffff90947830  // b.none
 ;; 0xFFFF97C263C0
  0x0000ffff90947818:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff9094781c:   movk	x8, #0x97c2, lsl #16
  0x0000ffff90947820:   movk	x8, #0xffff, lsl #32
  0x0000ffff90947824:   blr	x8
  0x0000ffff90947828:   b	0x0000ffff90947830
  0x0000ffff9094782c:   udf	#58640
 ;; 0xFFF92841D2B8
  0x0000ffff90947830:   mov	x0, #0xd2b8                	// #53944
                                                            ;   {metadata(method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90947834:   movk	x0, #0x2841, lsl #16
  0x0000ffff90947838:   movk	x0, #0xfff9, lsl #32
  0x0000ffff9094783c:   ldr	w4, [x0, #292]
  0x0000ffff90947840:   add	w4, w4, #0x2
  0x0000ffff90947844:   str	w4, [x0, #292]
  0x0000ffff90947848:   and	w4, w4, #0x7fe
  0x0000ffff9094784c:   cmp	w4, #0x0
 ;;   22 branch [EQ]   [CounterOverflowStub: 0x0000fff8f8264900]
  0x0000ffff90947850:   b.eq	0x0000ffff90947980  // b.none;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@0 (line 34)
 ;;  block B2 [0, 0]
 ;;  block B0 [0, 21]
  0x0000ffff90947854:   scvtf	s0, w3
  0x0000ffff90947858:   ldr	w0, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff909479a8
  0x0000ffff9094785c:   cmp	w3, w0
 ;;   40 branch [AE]   [RangeCheckStub: 0x0000fff8f4057928] [bci:5]
  0x0000ffff90947860:   b.cs	0x0000ffff909479c0  // b.hs, b.nlast
  0x0000ffff90947864:   lsl	w0, w3, #3
  0x0000ffff90947868:   add	x0, x0, #0x10
  0x0000ffff9094786c:   ldr	x1, [x2, x0]
  0x0000ffff90947870:   tbz	w1, #12, 0x0000ffff90947878 ;   {other}
  0x0000ffff90947874:   b	0x0000ffff909479e4
  0x0000ffff90947878:   lsr	x1, x1, #16                 ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
  0x0000ffff9094787c:   ldr	x0, [x1, #16]               ; implicit exception: dispatches to 0x0000ffff90947a08
  0x0000ffff90947880:   tbz	w0, #12, 0x0000ffff90947888 ;   {other}
  0x0000ffff90947884:   b	0x0000ffff90947a20
  0x0000ffff90947888:   lsr	x0, x0, #16                 ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
 ;; 0xFFF92841D2B8
  0x0000ffff9094788c:   mov	x3, #0xd2b8                	// #53944
                                                            ;   {metadata(method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90947890:   movk	x3, #0x2841, lsl #16
  0x0000ffff90947894:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90947898:   cbnz	x0, 0x0000ffff909478ac
  0x0000ffff9094789c:   ldrb	w8, [x3, #361]
  0x0000ffff909478a0:   orr	x8, x8, #0x1
  0x0000ffff909478a4:   strb	w8, [x3, #361]
  0x0000ffff909478a8:   b	0x0000ffff90947960
  0x0000ffff909478ac:   ldr	w2, [x0, #8]
  0x0000ffff909478b0:   eor	x2, x2, #0xfc00000000
  0x0000ffff909478b4:   add	x9, x3, #0x178
  0x0000ffff909478b8:   ldr	x8, [x9]
  0x0000ffff909478bc:   cmp	x2, x8
  0x0000ffff909478c0:   b.ne	0x0000ffff909478d4  // b.any
  0x0000ffff909478c4:   ldr	x8, [x3, #384]
  0x0000ffff909478c8:   add	x8, x8, #0x1
  0x0000ffff909478cc:   str	x8, [x3, #384]
  0x0000ffff909478d0:   b	0x0000ffff90947940
  0x0000ffff909478d4:   add	x9, x3, #0x188
  0x0000ffff909478d8:   ldr	x8, [x9]
  0x0000ffff909478dc:   cmp	x2, x8
  0x0000ffff909478e0:   b.ne	0x0000ffff909478f4  // b.any
  0x0000ffff909478e4:   ldr	x8, [x3, #400]
  0x0000ffff909478e8:   add	x8, x8, #0x1
  0x0000ffff909478ec:   str	x8, [x3, #400]
  0x0000ffff909478f0:   b	0x0000ffff90947940
  0x0000ffff909478f4:   add	x9, x3, #0x178
  0x0000ffff909478f8:   ldr	x8, [x9]
  0x0000ffff909478fc:   cbnz	x8, 0x0000ffff90947914
  0x0000ffff90947900:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90947904:   orr	x8, xzr, #0x1
  0x0000ffff90947908:   add	x9, x3, #0x180
  0x0000ffff9094790c:   str	x8, [x9]
  0x0000ffff90947910:   b	0x0000ffff90947940
  0x0000ffff90947914:   add	x9, x3, #0x188
  0x0000ffff90947918:   ldr	x8, [x9]
  0x0000ffff9094791c:   cbnz	x8, 0x0000ffff90947934
  0x0000ffff90947920:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90947924:   orr	x8, xzr, #0x1
  0x0000ffff90947928:   add	x9, x3, #0x190
  0x0000ffff9094792c:   str	x8, [x9]
  0x0000ffff90947930:   b	0x0000ffff90947940
  0x0000ffff90947934:   ldr	x8, [x3, #368]
  0x0000ffff90947938:   add	x8, x8, #0x1
  0x0000ffff9094793c:   str	x8, [x3, #368]
 ;; 0xFC01001450
  0x0000ffff90947940:   mov	x2, #0x1450                	// #5200
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff90947944:   movk	x2, #0x100, lsl #16
  0x0000ffff90947948:   movk	x2, #0xfc, lsl #32
  0x0000ffff9094794c:   ldr	w8, [x0, #8]
  0x0000ffff90947950:   eor	x8, x8, #0xfc00000000
  0x0000ffff90947954:   cmp	x8, x2
  0x0000ffff90947958:   b.ne	0x0000ffff90947a40  // b.any
  0x0000ffff9094795c:   b	0x0000ffff90947960          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
  0x0000ffff90947960:   ldr	s1, [x0, #12]               ; implicit exception: dispatches to 0x0000ffff90947a5c
                                                            ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)
  0x0000ffff90947964:   fadd	s0, s1, s0
  0x0000ffff90947968:   ldp	x29, x30, [sp, #32]
  0x0000ffff9094796c:   add	sp, sp, #0x30
  0x0000ffff90947970:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff90947974:   cmp	sp, x8
  0x0000ffff90947978:   b.hi	0x0000ffff90947a74  // b.pmore
  0x0000ffff9094797c:   ret
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401A80
  0x0000ffff90947980:   mov	x8, #0x1a80                	// #6784
                                                            ;   {metadata({method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90947984:   movk	x8, #0x2840, lsl #16
  0x0000ffff90947988:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094798c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90947990:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90947994:   str	x8, [sp]
  0x0000ffff90947998:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094799c:   add	x8, x8, #0x8c0
  0x0000ffff909479a0:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop }
                                                            ;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
  0x0000ffff909479a4:   b	0x0000ffff90947854
 ;; ImplicitNullCheckStub slow case
  0x0000ffff909479a8:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff909479ac:   add	x8, x8, #0x9c0
  0x0000ffff909479b0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
 ;; should not reach here
  0x0000ffff909479b4:   dcps1	#0xdeae
  0x0000ffff909479b8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909479bc:   udf	#65535
 ;; RangeCheckStub slow case
  0x0000ffff909479c0:   mov	x8, x3
  0x0000ffff909479c4:   mov	x9, x2
 ;; 0xFFFF97D530C0
  0x0000ffff909479c8:   mov	x30, #0x30c0                	// #12480
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000ffff909479cc:   movk	x30, #0x97d5, lsl #16
  0x0000ffff909479d0:   movk	x30, #0xffff, lsl #32
  0x0000ffff909479d4:   blr	x30                         ; ImmutableOopMap {c_rarg2=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
 ;; should not reach here
  0x0000ffff909479d8:   dcps1	#0xdeae
  0x0000ffff909479dc:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909479e0:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff909479e4:   add	x0, x2, x0, uxtx
  0x0000ffff909479e8:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff909479ec:   stp	x1, x0, [sp]
  0x0000ffff909479f0:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff909479f4:   add	x8, x8, #0xe80
  0x0000ffff909479f8:   blr	x8
  0x0000ffff909479fc:   mov	x1, x0
  0x0000ffff90947a00:   add	sp, sp, #0x10
  0x0000ffff90947a04:   b	0x0000ffff9094787c
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90947a08:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90947a0c:   add	x8, x8, #0x9c0
  0x0000ffff90947a10:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop }
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
 ;; should not reach here
  0x0000ffff90947a14:   dcps1	#0xdeae
  0x0000ffff90947a18:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90947a1c:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90947a20:   add	x1, x1, #0x10
  0x0000ffff90947a24:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90947a28:   stp	x0, x1, [sp]
  0x0000ffff90947a2c:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90947a30:   add	x8, x8, #0xe80
  0x0000ffff90947a34:   blr	x8
  0x0000ffff90947a38:   add	sp, sp, #0x10
  0x0000ffff90947a3c:   b	0x0000ffff9094788c
 ;; SimpleExceptionStub slow case
  0x0000ffff90947a40:   mov	x8, x0
  0x0000ffff90947a44:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90947a48:   add	x9, x9, #0xdc0
  0x0000ffff90947a4c:   blr	x9                          ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
 ;; should not reach here
  0x0000ffff90947a50:   dcps1	#0xdeae
  0x0000ffff90947a54:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90947a58:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90947a5c:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90947a60:   add	x8, x8, #0x9c0
  0x0000ffff90947a64:   blr	x8                          ; ImmutableOopMap {}
                                                            ;*getfield data {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)
 ;; should not reach here
  0x0000ffff90947a68:   dcps1	#0xdeae
  0x0000ffff90947a6c:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90947a70:   udf	#65535
 ;; C1SafepointPollStub slow case
  0x0000ffff90947a74:   adr	x8, 0x0000ffff90947970      ;   {internal_word}
  0x0000ffff90947a78:   str	x8, [x28, #1200]
  0x0000ffff90947a7c:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff90947a80:   add	x8, x8, #0xac0
  0x0000ffff90947a84:   br	x8
 ;; Unwind handler
  0x0000ffff90947a88:   ldr	x0, [x28, #1368]
  0x0000ffff90947a8c:   str	xzr, [x28, #1368]
  0x0000ffff90947a90:   str	xzr, [x28, #1376]
 ;; remove_frame and dispatch to the unwind handler
  0x0000ffff90947a94:   ldp	x29, x30, [sp, #32]
  0x0000ffff90947a98:   add	sp, sp, #0x30
  0x0000ffff90947a9c:   adrp	x8, Stub::<unknown> 0x0000ffff97d52000
                                                            ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000ffff90947aa0:   add	x8, x8, #0xa80
  0x0000ffff90947aa4:   br	x8
[Exception Handler]
  0x0000ffff90947aa8:   mov	x19, #0xdead                	// #57005
                                                            ;   {no_reloc}
  0x0000ffff90947aac:   mov	x2, #0x1a2                 	// #418
  0x0000ffff90947ab0:   mov	x4, #0xdead                	// #57005
  0x0000ffff90947ab4:   mov	x5, #0xdead                	// #57005
  0x0000ffff90947ab8:   adrp	x8, 0x0000ffff97d55000      ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000ffff90947abc:   add	x8, x8, #0x7c0
  0x0000ffff90947ac0:   blr	x8
  0x0000ffff90947ac4:   dcps1	#0xdeae
  0x0000ffff90947ac8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90947acc:   udf	#65535
[Deopt Handler Code]
  0x0000ffff90947ad0:   adr	x30, 0x0000ffff90947ad0
  0x0000ffff90947ad4:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff90947ad8:   add	x8, x8, #0xdc0
  0x0000ffff90947adc:   br	x8
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff90947ae0:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff90947ae8:   0x0000fff92841d2b8 method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90947af0:   0x0000fff928401a80 {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff90947af8:   0x000000fc01001450 'InnerFloat'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff9094777f offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff90947854 offset=d4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@0 (line 34)
PcDesc(pc=0x0000ffff9094787c offset=fc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
PcDesc(pc=0x0000ffff9094788c offset=10c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
PcDesc(pc=0x0000ffff90947960 offset=1e0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
PcDesc(pc=0x0000ffff90947964 offset=1e4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)
PcDesc(pc=0x0000ffff909479a4 offset=224 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],int
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff909479b4 offset=234 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff909479d8 offset=258 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff90947a14 offset=294 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff90947a50 offset=2d0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff90947a68 offset=2e8 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
PcDesc(pc=0x0000ffff90947ae1 offset=361 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop } pc offsets: 548 
ImmutableOopMap {c_rarg2=Oop } pc offsets: 564 600 
ImmutableOopMap {c_rarg1=Oop } pc offsets: 660 
ImmutableOopMap {} pc offsets: 720 744 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff90947854 offset=d4):
   TestZGCSpillingAtLoadBarrierStub::test_float@0 (line 34)
ScopeDesc(pc=0x0000ffff9094787c offset=fc):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
ScopeDesc(pc=0x0000ffff9094788c offset=10c):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
ScopeDesc(pc=0x0000ffff90947960 offset=1e0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
ScopeDesc(pc=0x0000ffff90947964 offset=1e4):
   TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)
ScopeDesc(pc=0x0000ffff909479a4 offset=224):
   TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],int
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x0000ffff909479b4 offset=234):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x0000ffff909479d8 offset=258):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x0000ffff90947a14 offset=294):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x0000ffff90947a50 offset=2d0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
ScopeDesc(pc=0x0000ffff90947a68 offset=2e8):
   TestZGCSpillingAtLoadBarrierStub::test_float@17 (line 36)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff90947700: 300d
relocInfo@0x0000ffff90947700 [type=6(runtime_call) addr=0x0000ffff909477b4 offset=52] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff90947702: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff9094770c [type=7(external_word) addr=0x0000ffff909477dc offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff9094770e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff90947718 [type=7(external_word) addr=0x0000ffff909477f4 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff9094771a: 3009
relocInfo@0x0000ffff9094771a [type=6(runtime_call) addr=0x0000ffff90947818 offset=36] | [destination=0x0000ffff97c263c0]
         @0x0000ffff9094771c: 78016006
relocInfo@0x0000ffff9094771e [type=12(metadata) addr=0x0000ffff90947830 offset=24 data=1] | [metadata_addr=0x0000ffff90947ae8 *=0x0000fff92841d2b8 offset=0]metadata_value=0x0000fff92841d2b8: method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947720: 9010
relocInfo@0x0000ffff90947720 [type=18(barrier) addr=0x0000ffff90947870 offset=64]
         @0x0000ffff90947722: 9004
relocInfo@0x0000ffff90947722 [type=18(barrier) addr=0x0000ffff90947880 offset=16]
         @0x0000ffff90947724: 78016003
relocInfo@0x0000ffff90947726 [type=12(metadata) addr=0x0000ffff9094788c offset=12 data=1] | [metadata_addr=0x0000ffff90947ae8 *=0x0000fff92841d2b8 offset=0]metadata_value=0x0000fff92841d2b8: method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947728: 7803602d
relocInfo@0x0000ffff9094772a [type=12(metadata) addr=0x0000ffff90947940 offset=180 data=3] | [metadata_addr=0x0000ffff90947af8 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff9094772c: 580c
relocInfo@0x0000ffff9094772c [type=11(poll_return) addr=0x0000ffff90947970 offset=48]
         @0x0000ffff9094772e: 78026004
relocInfo@0x0000ffff90947730 [type=12(metadata) addr=0x0000ffff90947980 offset=16 data=2] | [metadata_addr=0x0000ffff90947af0 *=0x0000fff928401a80 offset=0]metadata_value=0x0000fff928401a80: {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947732: 3006
relocInfo@0x0000ffff90947732 [type=6(runtime_call) addr=0x0000ffff90947998 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90947734: 3004
relocInfo@0x0000ffff90947734 [type=6(runtime_call) addr=0x0000ffff909479a8 offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947736: 3008
relocInfo@0x0000ffff90947736 [type=6(runtime_call) addr=0x0000ffff909479c8 offset=32] | [destination=0x0000ffff97d530c0]
         @0x0000ffff90947738: 7c0497d58e800000ffff380a
relocInfo@0x0000ffff90947742 [type=7(external_word) addr=0x0000ffff909479f0 offset=40 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90947744: 3006
relocInfo@0x0000ffff90947744 [type=6(runtime_call) addr=0x0000ffff90947a08 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947746: 7c0497d58e800000ffff3809
relocInfo@0x0000ffff90947750 [type=7(external_word) addr=0x0000ffff90947a2c offset=36 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90947752: 3006
relocInfo@0x0000ffff90947752 [type=6(runtime_call) addr=0x0000ffff90947a44 offset=24] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff90947754: 3006
relocInfo@0x0000ffff90947754 [type=6(runtime_call) addr=0x0000ffff90947a5c offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947756: 78414006
relocInfo@0x0000ffff90947758 [type=8(internal_word) addr=0x0000ffff90947a74 offset=24 data=65] | [target=0x0000ffff90947970]
         @0x0000ffff9094775a: 3002
relocInfo@0x0000ffff9094775a [type=6(runtime_call) addr=0x0000ffff90947a7c offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff9094775c: 3008
relocInfo@0x0000ffff9094775c [type=6(runtime_call) addr=0x0000ffff90947a9c offset=32] | [destination=0x0000ffff97d52a80]
         @0x0000ffff9094775e: 0003
relocInfo@0x0000ffff9094775e [type=0(none) addr=0x0000ffff90947aa8 offset=12]
         @0x0000ffff90947760: 3004
relocInfo@0x0000ffff90947760 [type=6(runtime_call) addr=0x0000ffff90947ab8 offset=16] | [destination=0x0000ffff97d557c0]
         @0x0000ffff90947762: 3007
relocInfo@0x0000ffff90947762 [type=6(runtime_call) addr=0x0000ffff90947ad4 offset=28] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff90947764: 0000
relocInfo@0x0000ffff90947764 [type=0(none) addr=0x0000ffff90947ad4 offset=0]
         @0x0000ffff90947766: 0000
relocInfo@0x0000ffff90947766 [type=0(none) addr=0x0000ffff90947ad4 offset=0]
         @0x0000ffff90947768: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x0000ffff90947858, 0x0000ffff909479a8 > < 0x0000ffff9094787c, 0x0000ffff90947a08 > < 0x0000ffff90947960, 0x0000ffff90947a5c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000fff92841d2b8 method data for {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
#2: 0x0000fff928401a80 {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
#3: 0x000000fc01001450 'InnerFloat'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1) 5571  558       3       TestZGCSpillingAtLoadBarrierStub::test_double (22 bytes)
 total in heap  [0x0000ffff90947c90,0x0000ffff90948350] = 1728
 relocation     [0x0000ffff90947e00,0x0000ffff90947e68] = 104
 main code      [0x0000ffff90947e80,0x0000ffff909481a8] = 808
 stub code      [0x0000ffff909481a8,0x0000ffff909481e0] = 56
 oops           [0x0000ffff909481e0,0x0000ffff909481e8] = 8
 metadata       [0x0000ffff909481e8,0x0000ffff90948200] = 24
 scopes data    [0x0000ffff90948200,0x0000ffff90948258] = 88
 scopes pcs     [0x0000ffff90948258,0x0000ffff90948328] = 208
 dependencies   [0x0000ffff90948328,0x0000ffff90948330] = 8
 nul chk table  [0x0000ffff90948330,0x0000ffff90948350] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;;  block B1 [0, 0]
  0x0000ffff90947e80:   nop
  0x0000ffff90947e84:   nop
  0x0000ffff90947e88:   nop
  0x0000ffff90947e8c:   nop
  0x0000ffff90947e90:   nop
  0x0000ffff90947e94:   nop
  0x0000ffff90947e98:   nop
  0x0000ffff90947e9c:   nop
  0x0000ffff90947ea0:   nop
[Entry Point]
  # {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[LOuter;'
  # parm1:    c_rarg3   = int
  #           [sp+0x40]  (sp of caller)
  0x0000ffff90947ea4:   ldr	w8, [x1, #8]
  0x0000ffff90947ea8:   ldr	w10, [x9, #8]
  0x0000ffff90947eac:   cmp	w8, w10
  0x0000ffff90947eb0:   b.eq	0x0000ffff90947ec0  // b.none
  0x0000ffff90947eb4:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff90947eb8:   add	x8, x8, #0xec0
  0x0000ffff90947ebc:   br	x8
[Verified Entry Point]
  0x0000ffff90947ec0:   nop
  0x0000ffff90947ec4:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff90947ec8:   str	xzr, [x9]
  0x0000ffff90947ecc:   sub	sp, sp, #0x40
  0x0000ffff90947ed0:   stp	x29, x30, [sp, #48]
  0x0000ffff90947ed4:   ldrb	w8, [x28, #1208]
  0x0000ffff90947ed8:   cbz	x8, 0x0000ffff90947ef0
 ;; 0xFFFFAECE431C
  0x0000ffff90947edc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff90947ee0:   movk	x8, #0xaece, lsl #16
  0x0000ffff90947ee4:   movk	x8, #0xffff, lsl #32
  0x0000ffff90947ee8:   mov	x0, x28
  0x0000ffff90947eec:   blr	x8
  0x0000ffff90947ef0:   ldr	w8, 0x0000ffff90947f2c
 ;; 0xFFFFB0903FF8
  0x0000ffff90947ef4:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff90947ef8:   movk	x9, #0xb090, lsl #16
  0x0000ffff90947efc:   movk	x9, #0xffff, lsl #32
  0x0000ffff90947f00:   orr	x9, x9, x8, lsr #32
  0x0000ffff90947f04:   ldr	w9, [x9]
  0x0000ffff90947f08:   orr	x8, x8, x9, lsl #32
  0x0000ffff90947f0c:   ldr	x9, [x28, #88]
  0x0000ffff90947f10:   cmp	x8, x9
  0x0000ffff90947f14:   b.eq	0x0000ffff90947f30  // b.none
 ;; 0xFFFF97C263C0
  0x0000ffff90947f18:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff90947f1c:   movk	x8, #0x97c2, lsl #16
  0x0000ffff90947f20:   movk	x8, #0xffff, lsl #32
  0x0000ffff90947f24:   blr	x8
  0x0000ffff90947f28:   b	0x0000ffff90947f30
  0x0000ffff90947f2c:   udf	#58640
 ;; 0xFFF92841D4A8
  0x0000ffff90947f30:   mov	x0, #0xd4a8                	// #54440
                                                            ;   {metadata(method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90947f34:   movk	x0, #0x2841, lsl #16
  0x0000ffff90947f38:   movk	x0, #0xfff9, lsl #32
  0x0000ffff90947f3c:   ldr	w4, [x0, #292]
  0x0000ffff90947f40:   add	w4, w4, #0x2
  0x0000ffff90947f44:   str	w4, [x0, #292]
  0x0000ffff90947f48:   and	w4, w4, #0x7fe
  0x0000ffff90947f4c:   cmp	w4, #0x0
 ;;   22 branch [EQ]   [CounterOverflowStub: 0x0000fff8f80fc988]
  0x0000ffff90947f50:   b.eq	0x0000ffff90948080  // b.none;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@0 (line 40)
 ;;  block B2 [0, 0]
 ;;  block B0 [0, 21]
  0x0000ffff90947f54:   scvtf	d0, w3
  0x0000ffff90947f58:   ldr	w0, [x2, #12]               ; implicit exception: dispatches to 0x0000ffff909480a8
  0x0000ffff90947f5c:   cmp	w3, w0
 ;;   40 branch [AE]   [RangeCheckStub: 0x0000fff8f4057a38] [bci:5]
  0x0000ffff90947f60:   b.cs	0x0000ffff909480c0  // b.hs, b.nlast
  0x0000ffff90947f64:   lsl	w0, w3, #3
  0x0000ffff90947f68:   add	x0, x0, #0x10
  0x0000ffff90947f6c:   ldr	x1, [x2, x0]
  0x0000ffff90947f70:   tbz	w1, #12, 0x0000ffff90947f78 ;   {other}
  0x0000ffff90947f74:   b	0x0000ffff909480e4
  0x0000ffff90947f78:   lsr	x1, x1, #16                 ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
  0x0000ffff90947f7c:   ldr	x0, [x1, #16]               ; implicit exception: dispatches to 0x0000ffff90948108
  0x0000ffff90947f80:   tbz	w0, #12, 0x0000ffff90947f88 ;   {other}
  0x0000ffff90947f84:   b	0x0000ffff90948120
  0x0000ffff90947f88:   lsr	x0, x0, #16                 ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
 ;; 0xFFF92841D4A8
  0x0000ffff90947f8c:   mov	x3, #0xd4a8                	// #54440
                                                            ;   {metadata(method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90947f90:   movk	x3, #0x2841, lsl #16
  0x0000ffff90947f94:   movk	x3, #0xfff9, lsl #32
  0x0000ffff90947f98:   cbnz	x0, 0x0000ffff90947fac
  0x0000ffff90947f9c:   ldrb	w8, [x3, #361]
  0x0000ffff90947fa0:   orr	x8, x8, #0x1
  0x0000ffff90947fa4:   strb	w8, [x3, #361]
  0x0000ffff90947fa8:   b	0x0000ffff90948060
  0x0000ffff90947fac:   ldr	w2, [x0, #8]
  0x0000ffff90947fb0:   eor	x2, x2, #0xfc00000000
  0x0000ffff90947fb4:   add	x9, x3, #0x178
  0x0000ffff90947fb8:   ldr	x8, [x9]
  0x0000ffff90947fbc:   cmp	x2, x8
  0x0000ffff90947fc0:   b.ne	0x0000ffff90947fd4  // b.any
  0x0000ffff90947fc4:   ldr	x8, [x3, #384]
  0x0000ffff90947fc8:   add	x8, x8, #0x1
  0x0000ffff90947fcc:   str	x8, [x3, #384]
  0x0000ffff90947fd0:   b	0x0000ffff90948040
  0x0000ffff90947fd4:   add	x9, x3, #0x188
  0x0000ffff90947fd8:   ldr	x8, [x9]
  0x0000ffff90947fdc:   cmp	x2, x8
  0x0000ffff90947fe0:   b.ne	0x0000ffff90947ff4  // b.any
  0x0000ffff90947fe4:   ldr	x8, [x3, #400]
  0x0000ffff90947fe8:   add	x8, x8, #0x1
  0x0000ffff90947fec:   str	x8, [x3, #400]
  0x0000ffff90947ff0:   b	0x0000ffff90948040
  0x0000ffff90947ff4:   add	x9, x3, #0x178
  0x0000ffff90947ff8:   ldr	x8, [x9]
  0x0000ffff90947ffc:   cbnz	x8, 0x0000ffff90948014
  0x0000ffff90948000:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90948004:   orr	x8, xzr, #0x1
  0x0000ffff90948008:   add	x9, x3, #0x180
  0x0000ffff9094800c:   str	x8, [x9]
  0x0000ffff90948010:   b	0x0000ffff90948040
  0x0000ffff90948014:   add	x9, x3, #0x188
  0x0000ffff90948018:   ldr	x8, [x9]
  0x0000ffff9094801c:   cbnz	x8, 0x0000ffff90948034
  0x0000ffff90948020:   str	x2, [x9]
 ;; 0x1
  0x0000ffff90948024:   orr	x8, xzr, #0x1
  0x0000ffff90948028:   add	x9, x3, #0x190
  0x0000ffff9094802c:   str	x8, [x9]
  0x0000ffff90948030:   b	0x0000ffff90948040
  0x0000ffff90948034:   ldr	x8, [x3, #368]
  0x0000ffff90948038:   add	x8, x8, #0x1
  0x0000ffff9094803c:   str	x8, [x3, #368]
 ;; 0xFC01001660
  0x0000ffff90948040:   mov	x2, #0x1660                	// #5728
                                                            ;   {metadata('InnerDouble')}
  0x0000ffff90948044:   movk	x2, #0x100, lsl #16
  0x0000ffff90948048:   movk	x2, #0xfc, lsl #32
  0x0000ffff9094804c:   ldr	w8, [x0, #8]
  0x0000ffff90948050:   eor	x8, x8, #0xfc00000000
  0x0000ffff90948054:   cmp	x8, x2
  0x0000ffff90948058:   b.ne	0x0000ffff90948140  // b.any
  0x0000ffff9094805c:   b	0x0000ffff90948060          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
  0x0000ffff90948060:   ldr	d1, [x0, #16]               ; implicit exception: dispatches to 0x0000ffff9094815c
                                                            ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)
  0x0000ffff90948064:   fadd	d0, d1, d0
  0x0000ffff90948068:   ldp	x29, x30, [sp, #48]
  0x0000ffff9094806c:   add	sp, sp, #0x40
  0x0000ffff90948070:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff90948074:   cmp	sp, x8
  0x0000ffff90948078:   b.hi	0x0000ffff90948174  // b.pmore
  0x0000ffff9094807c:   ret
 ;; CounterOverflowStub slow case
 ;; 0xFFF928401B48
  0x0000ffff90948080:   mov	x8, #0x1b48                	// #6984
                                                            ;   {metadata({method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub')}
  0x0000ffff90948084:   movk	x8, #0x2840, lsl #16
  0x0000ffff90948088:   movk	x8, #0xfff9, lsl #32
  0x0000ffff9094808c:   str	x8, [sp, #8]
 ;; 0xFFFFFFFFFFFFFFFF
  0x0000ffff90948090:   mov	x8, #0xffffffffffffffff    	// #-1
  0x0000ffff90948094:   str	x8, [sp]
  0x0000ffff90948098:   adrp	x8, 0x0000ffff97d58000      ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000ffff9094809c:   add	x8, x8, #0x8c0
  0x0000ffff909480a0:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop }
                                                            ;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
  0x0000ffff909480a4:   b	0x0000ffff90947f54
 ;; ImplicitNullCheckStub slow case
  0x0000ffff909480a8:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff909480ac:   add	x8, x8, #0x9c0
  0x0000ffff909480b0:   blr	x8                          ; ImmutableOopMap {c_rarg2=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
 ;; should not reach here
  0x0000ffff909480b4:   dcps1	#0xdeae
  0x0000ffff909480b8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909480bc:   udf	#65535
 ;; RangeCheckStub slow case
  0x0000ffff909480c0:   mov	x8, x3
  0x0000ffff909480c4:   mov	x9, x2
 ;; 0xFFFF97D530C0
  0x0000ffff909480c8:   mov	x30, #0x30c0                	// #12480
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000ffff909480cc:   movk	x30, #0x97d5, lsl #16
  0x0000ffff909480d0:   movk	x30, #0xffff, lsl #32
  0x0000ffff909480d4:   blr	x30                         ; ImmutableOopMap {c_rarg2=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
 ;; should not reach here
  0x0000ffff909480d8:   dcps1	#0xdeae
  0x0000ffff909480dc:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909480e0:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff909480e4:   add	x0, x2, x0, uxtx
  0x0000ffff909480e8:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff909480ec:   stp	x1, x0, [sp]
  0x0000ffff909480f0:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff909480f4:   add	x8, x8, #0xe80
  0x0000ffff909480f8:   blr	x8
  0x0000ffff909480fc:   mov	x1, x0
  0x0000ffff90948100:   add	sp, sp, #0x10
  0x0000ffff90948104:   b	0x0000ffff90947f7c
 ;; ImplicitNullCheckStub slow case
  0x0000ffff90948108:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff9094810c:   add	x8, x8, #0x9c0
  0x0000ffff90948110:   blr	x8                          ; ImmutableOopMap {c_rarg1=Oop }
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
 ;; should not reach here
  0x0000ffff90948114:   dcps1	#0xdeae
  0x0000ffff90948118:   .inst	0xaf7bb248 ; undefined
  0x0000ffff9094811c:   udf	#65535
 ;; ZLoadBarrierStubC1 slow case
  0x0000ffff90948120:   add	x1, x1, #0x10
  0x0000ffff90948124:   sub	sp, sp, #0x10
 ;; merged str pair
  0x0000ffff90948128:   stp	x0, x1, [sp]
  0x0000ffff9094812c:   adrp	x8, 0x0000ffff97d58000      ;   {external_word}
  0x0000ffff90948130:   add	x8, x8, #0xe80
  0x0000ffff90948134:   blr	x8
  0x0000ffff90948138:   add	sp, sp, #0x10
  0x0000ffff9094813c:   b	0x0000ffff90947f8c
 ;; SimpleExceptionStub slow case
  0x0000ffff90948140:   mov	x8, x0
  0x0000ffff90948144:   adrp	x9, 0x0000ffff97d55000      ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000ffff90948148:   add	x9, x9, #0xdc0
  0x0000ffff9094814c:   blr	x9                          ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
 ;; should not reach here
  0x0000ffff90948150:   dcps1	#0xdeae
  0x0000ffff90948154:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90948158:   udf	#65535
 ;; ImplicitNullCheckStub slow case
  0x0000ffff9094815c:   adrp	x8, 0x0000ffff97d53000      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000ffff90948160:   add	x8, x8, #0x9c0
  0x0000ffff90948164:   blr	x8                          ; ImmutableOopMap {}
                                                            ;*getfield data {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)
 ;; should not reach here
  0x0000ffff90948168:   dcps1	#0xdeae
  0x0000ffff9094816c:   .inst	0xaf7bb248 ; undefined
  0x0000ffff90948170:   udf	#65535
 ;; C1SafepointPollStub slow case
  0x0000ffff90948174:   adr	x8, 0x0000ffff90948070      ;   {internal_word}
  0x0000ffff90948178:   str	x8, [x28, #1200]
  0x0000ffff9094817c:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff90948180:   add	x8, x8, #0xac0
  0x0000ffff90948184:   br	x8
 ;; Unwind handler
  0x0000ffff90948188:   ldr	x0, [x28, #1368]
  0x0000ffff9094818c:   str	xzr, [x28, #1368]
  0x0000ffff90948190:   str	xzr, [x28, #1376]
 ;; remove_frame and dispatch to the unwind handler
  0x0000ffff90948194:   ldp	x29, x30, [sp, #48]
  0x0000ffff90948198:   add	sp, sp, #0x40
  0x0000ffff9094819c:   adrp	x8, Stub::<unknown> 0x0000ffff97d52000
                                                            ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000ffff909481a0:   add	x8, x8, #0xa80
  0x0000ffff909481a4:   br	x8
[Exception Handler]
  0x0000ffff909481a8:   mov	x19, #0xdead                	// #57005
                                                            ;   {no_reloc}
  0x0000ffff909481ac:   mov	x2, #0x1a3                 	// #419
  0x0000ffff909481b0:   mov	x4, #0xdead                	// #57005
  0x0000ffff909481b4:   mov	x5, #0xdead                	// #57005
  0x0000ffff909481b8:   adrp	x8, 0x0000ffff97d55000      ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000ffff909481bc:   add	x8, x8, #0x7c0
  0x0000ffff909481c0:   blr	x8
  0x0000ffff909481c4:   dcps1	#0xdeae
  0x0000ffff909481c8:   .inst	0xaf7bb248 ; undefined
  0x0000ffff909481cc:   udf	#65535
[Deopt Handler Code]
  0x0000ffff909481d0:   adr	x30, 0x0000ffff909481d0
  0x0000ffff909481d4:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff909481d8:   add	x8, x8, #0xdc0
  0x0000ffff909481dc:   br	x8
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff909481e0:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff909481e8:   0x0000fff92841d4a8 method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff909481f0:   0x0000fff928401b48 {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff909481f8:   0x000000fc01001660 'InnerDouble'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff90947e7f offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff90947f54 offset=d4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@0 (line 40)
PcDesc(pc=0x0000ffff90947f7c offset=fc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
PcDesc(pc=0x0000ffff90947f8c offset=10c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
PcDesc(pc=0x0000ffff90948060 offset=1e0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
PcDesc(pc=0x0000ffff90948064 offset=1e4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)
PcDesc(pc=0x0000ffff909480a4 offset=224 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],int
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff909480b4 offset=234 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff909480d8 offset=258 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff90948114 offset=294 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff90948150 offset=2d0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff90948168 offset=2e8 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
PcDesc(pc=0x0000ffff909481e1 offset=361 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 6 OopMaps

ImmutableOopMap {c_rarg1=Oop c_rarg2=Oop } pc offsets: 548 
ImmutableOopMap {c_rarg2=Oop } pc offsets: 564 600 
ImmutableOopMap {c_rarg1=Oop } pc offsets: 660 
ImmutableOopMap {} pc offsets: 720 744 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff90947f54 offset=d4):
   TestZGCSpillingAtLoadBarrierStub::test_double@0 (line 40)
ScopeDesc(pc=0x0000ffff90947f7c offset=fc):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
ScopeDesc(pc=0x0000ffff90947f8c offset=10c):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
ScopeDesc(pc=0x0000ffff90948060 offset=1e0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
ScopeDesc(pc=0x0000ffff90948064 offset=1e4):
   TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)
ScopeDesc(pc=0x0000ffff909480a4 offset=224):
   TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
   Locals
    - l0: reg c_rarg1 [2],oop
    - l1: reg c_rarg2 [4],oop
    - l2: reg c_rarg3 [6],int
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x0000ffff909480b4 offset=234):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x0000ffff909480d8 offset=258):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x0000ffff90948114 offset=294):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x0000ffff90948150 offset=2d0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
ScopeDesc(pc=0x0000ffff90948168 offset=2e8):
   TestZGCSpillingAtLoadBarrierStub::test_double@17 (line 42)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff90947e00: 300d
relocInfo@0x0000ffff90947e00 [type=6(runtime_call) addr=0x0000ffff90947eb4 offset=52] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff90947e02: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff90947e0c [type=7(external_word) addr=0x0000ffff90947edc offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff90947e0e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff90947e18 [type=7(external_word) addr=0x0000ffff90947ef4 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff90947e1a: 3009
relocInfo@0x0000ffff90947e1a [type=6(runtime_call) addr=0x0000ffff90947f18 offset=36] | [destination=0x0000ffff97c263c0]
         @0x0000ffff90947e1c: 78016006
relocInfo@0x0000ffff90947e1e [type=12(metadata) addr=0x0000ffff90947f30 offset=24 data=1] | [metadata_addr=0x0000ffff909481e8 *=0x0000fff92841d4a8 offset=0]metadata_value=0x0000fff92841d4a8: method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947e20: 9010
relocInfo@0x0000ffff90947e20 [type=18(barrier) addr=0x0000ffff90947f70 offset=64]
         @0x0000ffff90947e22: 9004
relocInfo@0x0000ffff90947e22 [type=18(barrier) addr=0x0000ffff90947f80 offset=16]
         @0x0000ffff90947e24: 78016003
relocInfo@0x0000ffff90947e26 [type=12(metadata) addr=0x0000ffff90947f8c offset=12 data=1] | [metadata_addr=0x0000ffff909481e8 *=0x0000fff92841d4a8 offset=0]metadata_value=0x0000fff92841d4a8: method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947e28: 7803602d
relocInfo@0x0000ffff90947e2a [type=12(metadata) addr=0x0000ffff90948040 offset=180 data=3] | [metadata_addr=0x0000ffff909481f8 *=0x000000fc01001660 offset=0]metadata_value=0x000000fc01001660: 'InnerDouble'
         @0x0000ffff90947e2c: 580c
relocInfo@0x0000ffff90947e2c [type=11(poll_return) addr=0x0000ffff90948070 offset=48]
         @0x0000ffff90947e2e: 78026004
relocInfo@0x0000ffff90947e30 [type=12(metadata) addr=0x0000ffff90948080 offset=16 data=2] | [metadata_addr=0x0000ffff909481f0 *=0x0000fff928401b48 offset=0]metadata_value=0x0000fff928401b48: {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
         @0x0000ffff90947e32: 3006
relocInfo@0x0000ffff90947e32 [type=6(runtime_call) addr=0x0000ffff90948098 offset=24] | [destination=0x0000ffff97d588c0]
         @0x0000ffff90947e34: 3004
relocInfo@0x0000ffff90947e34 [type=6(runtime_call) addr=0x0000ffff909480a8 offset=16] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947e36: 3008
relocInfo@0x0000ffff90947e36 [type=6(runtime_call) addr=0x0000ffff909480c8 offset=32] | [destination=0x0000ffff97d530c0]
         @0x0000ffff90947e38: 7c0497d58e800000ffff380a
relocInfo@0x0000ffff90947e42 [type=7(external_word) addr=0x0000ffff909480f0 offset=40 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90947e44: 3006
relocInfo@0x0000ffff90947e44 [type=6(runtime_call) addr=0x0000ffff90948108 offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947e46: 7c0497d58e800000ffff3809
relocInfo@0x0000ffff90947e50 [type=7(external_word) addr=0x0000ffff9094812c offset=36 data={97d58e800000ffff}] | [target=0x0000ffff97d58e80]
         @0x0000ffff90947e52: 3006
relocInfo@0x0000ffff90947e52 [type=6(runtime_call) addr=0x0000ffff90948144 offset=24] | [destination=0x0000ffff97d55dc0]
         @0x0000ffff90947e54: 3006
relocInfo@0x0000ffff90947e54 [type=6(runtime_call) addr=0x0000ffff9094815c offset=24] | [destination=0x0000ffff97d539c0]
         @0x0000ffff90947e56: 78414006
relocInfo@0x0000ffff90947e58 [type=8(internal_word) addr=0x0000ffff90948174 offset=24 data=65] | [target=0x0000ffff90948070]
         @0x0000ffff90947e5a: 3002
relocInfo@0x0000ffff90947e5a [type=6(runtime_call) addr=0x0000ffff9094817c offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff90947e5c: 3008
relocInfo@0x0000ffff90947e5c [type=6(runtime_call) addr=0x0000ffff9094819c offset=32] | [destination=0x0000ffff97d52a80]
         @0x0000ffff90947e5e: 0003
relocInfo@0x0000ffff90947e5e [type=0(none) addr=0x0000ffff909481a8 offset=12]
         @0x0000ffff90947e60: 3004
relocInfo@0x0000ffff90947e60 [type=6(runtime_call) addr=0x0000ffff909481b8 offset=16] | [destination=0x0000ffff97d557c0]
         @0x0000ffff90947e62: 3007
relocInfo@0x0000ffff90947e62 [type=6(runtime_call) addr=0x0000ffff909481d4 offset=28] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff90947e64: 0000
relocInfo@0x0000ffff90947e64 [type=0(none) addr=0x0000ffff909481d4 offset=0]
         @0x0000ffff90947e66: 0000
relocInfo@0x0000ffff90947e66 [type=0(none) addr=0x0000ffff909481d4 offset=0]
         @0x0000ffff90947e68: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type leaf_type
  context = InnerDouble
   [nmethod<=klass]InnerDouble
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x0000ffff90947f58, 0x0000ffff909480a8 > < 0x0000ffff90947f7c, 0x0000ffff90948108 > < 0x0000ffff90948060, 0x0000ffff9094815c > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000fff92841d4a8 method data for {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
#2: 0x0000fff928401b48 {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
#3: 0x000000fc01001660 'InnerDouble'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r020 c_rarg1:c_rarg1   : parm 0: rawptr:BotPTR
# -- Old r31_sp -- Framesize: 112 --
#r223 r31_sp+108: in_preserve
#r222 r31_sp+104: return address
#r221 r31_sp+100: in_preserve
#r220 r31_sp+96: saved fp register
#r219 r31_sp+92: pad2, stack alignment
#r218 r31_sp+88: pad2, stack alignment
#r217 r31_sp+84: Fixed slot 1
#r216 r31_sp+80: Fixed slot 0
#r243 r31_sp+76: spill
#r242 r31_sp+72: spill
#r241 r31_sp+68: spill
#r240 r31_sp+64: spill
#r239 r31_sp+60: spill
#r238 r31_sp+56: spill
#r237 r31_sp+52: spill
#r236 r31_sp+48: spill
#r235 r31_sp+44: spill
#r234 r31_sp+40: spill
#r233 r31_sp+36: spill
#r232 r31_sp+32: spill
#r231 r31_sp+28: spill
#r230 r31_sp+24: spill
#r229 r31_sp+20: spill
#r228 r31_sp+16: spill
#r227 r31_sp+12: spill
#r226 r31_sp+ 8: spill
#r225 r31_sp+ 4: spill
#r224 r31_sp+ 0: spill
#
----------------------- MetaData before Compile_id = 559 ------------------------
{method}
 - this oop:          0x0000fff928401c58
 - method holder:     'TestZGCSpillingAtLoadBarrierStub'
 - constants:         0x0000fff928401448 constant pool [132] {0x0000fff928401448} for 'TestZGCSpillingAtLoadBarrierStub' cache=0x0000fff928402a58
 - access:            0x0  
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'test_float_vector_128'
 - signature:         '([F[LOuter;)V'
 - max stack:         4
 - max locals:        9
 - size of params:    3
 - method size:       14
 - highest level:     3
 - vtable index:      9
 - i2i entry:         0x0000ffff97bc73c0
 - adapters:          AHE@0x0000ffffa82a8060: 0xbbb i2c: 0x0000ffff97be4c40 c2i: 0x0000ffff97be4ca8 c2iUV: 0x0000ffff97be4c74 c2iNCI: 0x0000ffff97be4ce4
 - compiled entry     0x0000ffff90941e40
 - code size:         86
 - code start:        0x0000fff928401bf0
 - code end (excl):   0x0000fff928401c46
 - method data:       0x0000fff92841cca8
 - checked ex length: 0
 - linenumber start:  0x0000fff928401c46
 - localvar length:   0
 - compiled code: nmethod5781  552       3       TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 (86 bytes)

------------------------ OptoAssembly for Compile_id = 559 -----------------------
#
#  void ( rawptr:BotPTR )
#
000     N1689: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     BREAKPOINT
        nop 	# 3 bytes pad for loops and calls

010     B1: #	out( B97 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
010     # stack bang size=112
	sub  sp, sp, #112
	stp  rfp, lr, [sp, #96]
	ldr  rscratch1, [guard]
	dmb ishld
	ldr  rscratch2, [rthread, #thread_disarmed_guard_value_offset]
	cmp  rscratch1, rscratch2
	b.eq skip
	blr #nmethod_entry_barrier_stub
	b skip
	guard: int
	
	skip:
	
06c     ldr  R19, [R1, #40]	# ptr
070     ldr  R22, [R1, #56]	# ptr
074     ldr  R21, [R1, #32]	# ptr
078     ldr  R23, [R1, #48]	# ptr
07c     ldrw  R20, [R1, #24]	# int
080     spill R1 -> R0	# spill size = 64
084     CALL, runtime leaf 0x0000ffffaf2dd490 OSR_migration_end
        No JVM State Info
        # 
0b0     cbeq   R22, B97  P=0.001000 C=-1.000000

0b4     B2: #	out( B113 B3 ) <- in( B1 )  Freq: 0.999
0b4     ldrw  R10, [R22, #8]	# compressed class ptr
0b8     mov  R12, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
0c0     cmp  R10, R12	 // compressed ptr
0c4     bne  B113	# unsigned  P=0.000001 C=-1.000000

0c8     B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
0c8     spill R22 -> R10	# spill size = 64
0cc     # checkcastPP of R10

0cc     B4: #	out( B98 B5 ) <- in( B3 B97 )  Freq: 0.999999
0cc     cbeq   R23, B98  P=0.001000 C=-1.000000

0d0     B5: #	out( B113 B6 ) <- in( B4 )  Freq: 0.998999
0d0     ldrw  R12, [R23, #8]	# compressed class ptr
0d4     mov  R11, narrowklass: precise [Outer: 0x0000fff8f8383508 * (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
0dc     cmp  R12, R11	 // compressed ptr
0e0     bne  B113	# unsigned  P=0.000001 C=-1.000000

0e4     B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
0e4     spill R23 -> R13	# spill size = 64
0e8     # checkcastPP of R13

0e8     B7: #	out( B99 B8 ) <- in( B6 B98 )  Freq: 0.999998
0e8     cbeq   R21, B99  P=0.001000 C=-1.000000

0ec     B8: #	out( B113 B9 ) <- in( B7 )  Freq: 0.998998
0ec     ldrw  R11, [R21, #8]	# compressed class ptr
0f0     decode_klass_not_null R11,R11
0f4     ldr  R11, [R11, #96]	# class
0f8     mov  R12, precise jdk/incubator/vector/FloatVector: 0x0000fff8f8385518:Constant:exact *	# ptr
	
104     cmp  R11, R12	 // ptr
108     bne  B113	# unsigned  P=0.000001 C=-1.000000

10c     B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
10c     # checkcastPP of R21

10c     B10: #	out( B120 B11 ) <- in( B9 B99 )  Freq: 0.999997
10c     ldrw  R14, [R10, #12]	# range
110     NullCheck R10

110     B11: #	out( B112 B12 ) <- in( B10 )  Freq: 0.999996
110     ldrw  R12, [R19, #8]	# compressed class ptr
114     NullCheck R19

114     B12: #	out( B112 B13 ) <- in( B11 )  Freq: 0.999995
114     mov  R11, narrowklass: precise jdk/incubator/vector/FloatVector$FloatSpecies: 0x0000fff8f83839c8 (jdk/incubator/vector/VectorSpecies):Constant:exact *	# compressed klass ptr
11c     cmp  R12, R11	 // compressed ptr
120     bne  B112	# unsigned  P=0.000001 C=-1.000000

124     B13: #	out( B112 B14 ) <- in( B12 )  Freq: 0.999994
124     spill R19 -> R11	# spill size = 64
128     # checkcastPP of R11
128     ldrw  R15, [R13, #12]	# range
12c     NullCheck R13

12c     B14: #	out( B31 ) <- in( B13 )  Freq: 0.999993
12c     spill R15 -> [sp, #48]	# spill size = 32
130     spill R11 -> [sp, #40]	# spill size = 64
134     spill R14 -> [sp, #12]	# spill size = 32
138     spill R13 -> [sp, #32]	# spill size = 64
13c     spill R10 -> [sp, #24]	# spill size = 64
140     spill R20 -> [sp, #8]	# spill size = 32
144     spill R21 -> [sp, #0]	# spill size = 64
148     spill R19 -> [sp, #16]	# spill size = 64
14c      -- 	// R28=Thread::current(), empty
14c     b  B31

150     B15: #	out( B16 ) <- in( B47 ) top-of-loop Freq: 243.888
150     str  R11, [R28, #456]	# ptr
154     mov R10, #1	# long
158     str  R10, [R13]	# int
15c     mov  R10, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
164     strw  R10, [R13, #8]	# compressed klass ptr
168     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
16c     strw  zr, [R13, #12]	# int

170     B16: #	out( B17 ) <- in( B49 B15 ) top-of-loop Freq: 243.912
170     movq    [R13, #16], R15	# ptr
17c     
17c     # checkcastPP of R13
17c     spill R13 -> [sp, #0]	# spill size = 64

180     B17: #	out( B65 B18 ) <- in( B16 B57 )  Freq: 256.701
180     fmovs R11, V18	# MoveF2I_reg_reg
184     spill [sp, #0] -> R10	# spill size = 64
188     ldrw  R10, [R10, #8]	# compressed class ptr
18c     sxtw  R11, R11	# i2l
190     spill R11 -> [sp, #56]	# spill size = 64
194     mov  R12, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
19c     cmp  R10, R12	 // compressed ptr
1a0     bne  B65	# unsigned  P=0.049816 C=-1.000000

1a4     B18: #	out( B72 B19 ) <- in( B17 )  Freq: 243.913
1a4     spill [sp, #0] -> R29	# spill size = 64
1a8     # checkcastPP of R29
1a8     ldr  R14, [R28, #456]	# ptr
1ac     ldr  R10, [R28, #472]	# ptr
1b0     add R11, R14, #32	# ptr
1b4     cmp  R11, R10	 // ptr
1b8     bhs  B72	# unsigned  P=0.000100 C=-1.000000

1bc     B19: #	out( B20 ) <- in( B18 )  Freq: 243.888
1bc     str  R11, [R28, #456]	# ptr
1c0     mov R10, #1	# long
1c4     str  R10, [R14]	# int
1c8     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
1cc     mov  R10, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
1d4     strw  R10, [R14, #8]	# compressed klass ptr
1d8     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
1dc     mov R12, #4	# int
1e0     strw  R12, [R14, #12]	# int
1e4     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
1e8     add R10, R14, #16	# ptr
1ec     ClearArray #2, R10

1f0     B20: #	out( B74 B21 ) <- in( B73 B19 )  Freq: 243.913
1f0     replicateF V16, V18
1f4     
1f4     # checkcastPP of R14
1f4     storeV16 [R14, #16], V16	# vector (128 bits)
1f8     ldr  R12, [R28, #456]	# ptr
1fc     ldr  R10, [R28, #472]	# ptr
200     add R11, R12, #24	# ptr
204     cmp  R11, R10	 // ptr
208     bhs  B74	# unsigned  P=0.000100 C=-1.000000

20c     B21: #	out( B22 ) <- in( B20 )  Freq: 243.888
20c     str  R11, [R28, #456]	# ptr
210     mov R10, #1	# long
214     str  R10, [R12]	# int
218     mov  R13, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
220     strw  R13, [R12, #8]	# compressed klass ptr
224     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
228     strw  zr, [R12, #12]	# int

22c     B22: #	out( B23 ) <- in( B75 B21 )  Freq: 243.913
22c     movq    [R12, #16], R14	# ptr
238     
238     # checkcastPP of R12
238     spill R12 -> [sp, #56]	# spill size = 64

23c     B23: #	out( B58 B24 ) <- in( B22 B70 )  Freq: 256.701
23c     spill [sp, #0] -> R10	# spill size = 64
240     ldrw  R11, [R10, #8]	# compressed class ptr
244     spill [sp, #56] -> R10	# spill size = 64
248     ldrw  R10, [R10, #8]	# compressed class ptr
24c     decode_klass_not_null R12,R10
250     ldr  R12, [R12, #120]	# ptr
254     ldr  R29, [R12]
260     mov  R13, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
268     cmp  R11, R13	 // compressed ptr
26c     bne  B58	# unsigned  P=0.049816 C=-1.000000

270     B24: #	out( B105 B25 ) <- in( B23 )  Freq: 243.913
270     spill [sp, #0] -> R11	# spill size = 64
274     # checkcastPP of R11
274     spill R11 -> [sp, #0]	# spill size = 64
278     mov  R11, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
280     cmp  R10, R11	 // compressed ptr
284     bne  B105	# unsigned  P=0.000000 C=10176.000000

288     B25: #	out( B76 B26 ) <- in( B24 )  Freq: 243.913
288     spill [sp, #56] -> R29	# spill size = 64
28c     # checkcastPP of R29
28c     ldr  R12, [R28, #456]	# ptr
290     ldr  R10, [R28, #472]	# ptr
294     add R11, R12, #32	# ptr
298     cmp  R11, R10	 // ptr
29c     bhs  B76	# unsigned  P=0.000100 C=-1.000000

2a0     B26: #	out( B27 ) <- in( B25 )  Freq: 243.888
2a0     str  R11, [R28, #456]	# ptr
2a4     mov R10, #1	# long
2a8     str  R10, [R12]	# int
2ac     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
2b0     mov  R13, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
2b8     strw  R13, [R12, #8]	# compressed klass ptr
2bc     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
2c0     mov R10, #4	# int
2c4     strw  R10, [R12, #12]	# int
2c8     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
2cc     add R10, R12, #16	# ptr
2d0     ClearArray #2, R10

2d4     B27: #	out( B78 B28 ) <- in( B77 B26 )  Freq: 243.913
2d4     
2d4     MEMBAR-store-store
2d8     # checkcastPP of R12
2d8     spill R12 -> [sp, #56]	# spill size = 64
2dc     ldr  R13, [R28, #456]	# ptr
2e0     ldr  R10, [R28, #472]	# ptr
2e4     add R11, R13, #24	# ptr
2e8     spill [sp, #0] -> R14	# spill size = 64
2ec     ldr  R12, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
2f8     loadV16 V16, [R12, #16]	# vector (128 bits)
2fc     ldr  R12, [R29, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
308     loadV16 V17, [R12, #16]	# vector (128 bits)
30c     vaddF V16, V16, V17
310     spill [sp, #56] -> R12	# spill size = 64
314     storeV16 [R12, #16], V16	# vector (128 bits)
318     cmp  R11, R10	 // ptr
31c     bhs  B78	# unsigned  P=0.000100 C=-1.000000

320     B28: #	out( B29 ) <- in( B27 )  Freq: 243.888
320     str  R11, [R28, #456]	# ptr
324     mov R10, #1	# long
328     str  R10, [R13]	# int
32c     mov  R10, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
334     strw  R10, [R13, #8]	# compressed klass ptr
338     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
33c     strw  zr, [R13, #12]	# int

340     B29: #	out( B30 ) <- in( B79 B28 )  Freq: 243.913
340     spill [sp, #56] -> R11	# spill size = 64
344     movq    [R13, #16], R11	# ptr
350     
350     # checkcastPP of R13
350     spill R13 -> [sp, #0]	# spill size = 64

354     B30: #	out( B31 ) <- in( B29 B64 )  Freq: 256.7
354     spill [sp, #40] -> R10	# spill size = 64
358     ldrw  R11, [R10, #12]	# int ! Field: jdk/incubator/vector/AbstractSpecies.laneCount (constant)
35c     ldr  R10, [R28, #1184]	# ptr
360     spill [sp, #52] -> R13	# spill size = 32
364     addw  R12, R11, R13
368     spill R12 -> [sp, #8]	# spill size = 32
36c     ldrw zr, [R10]	# Safepoint: poll for GC        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:82 (line 49) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=r31_sp + #0 L[5]=R12 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=876/0x36c}

38c     B31: #	out( B71 B32 ) <- in( B14 B30 ) Loop( B31-B30 inner ) Freq: 257.703
38c     spill [sp, #8] -> R10	# spill size = 32
390     spill [sp, #12] -> R12	# spill size = 32
390     cmpw  R10, R12
394     bge  B71  P=0.003861 C=66818.000000

398     B32: #	out( B103 B33 ) <- in( B31 )  Freq: 256.708
398     spill [sp, #40] -> R10	# spill size = 64
39c     ldrw  R11, [R10, #12]	# int ! Field: jdk/incubator/vector/AbstractSpecies.laneCount (constant)
3a0     subw  R10, R12, R11
3a4     addw R29, R10, #1
3a8     cblt   R29, B103 # int  P=0.000001 C=-1.000000

3ac     B33: #	out( B100 B34 ) <- in( B32 )  Freq: 256.708
3ac     spill [sp, #8] -> R11	# spill size = 32
3b0     cmpw  R11, R29	# unsigned
3b4     bhs  B100	# unsigned  P=0.000001 C=-1.000000

3b8     B34: #	out( B82 B35 ) <- in( B33 )  Freq: 256.707
3b8     spill [sp, #8] -> R10	# spill size = 32
3bc     # castII of R10
3bc     spill R10 -> [sp, #52]	# spill size = 32
3c0     spill [sp, #40] -> R10	# spill size = 64
3c4     ldr  R29, [R10, #104] ! Field: jdk/incubator/vector/AbstractSpecies.dummyVector (constant)
3d0     cbeq   R29, B82  P=0.000034 C=59218.000000

3d4     B35: #	out( B104 B36 ) <- in( B34 B84 )  Freq: 256.707
3d4     ldrw  R11, [R29, #8]	# compressed class ptr
3d8     decode_klass_not_null R10,R11
3dc     ldr  R10, [R10, #96]	# class
3e0     mov  R11, precise jdk/incubator/vector/FloatVector: 0x0000fff8f8385518:Constant:exact *	# ptr
	
3ec     cmp  R10, R11	 // ptr
3f0     bne  B104	# unsigned  P=0.000001 C=-1.000000

3f4     B36: #	out( B140 B37 ) <- in( B35 )  Freq: 256.707
3f4     spill R29 -> R1	# spill size = 64
3f8     # checkcastPP of R1
3f8     spill [sp, #24] -> R2	# spill size = 64
3fc     spill [sp, #52] -> R3	# spill size = 32
400     CALL,dynamic 0x0000ffff97c914c0 	// ==>  jdk.incubator.vector.FloatVector::fromArray0
        # jdk.incubator.vector.FloatVector::fromArray @ bci:24 (line 2799) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #16 L[4]=r31_sp + #0 L[5]=r31_sp + #8 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=1040/0x410}

420     B37: #	out( B101 B38 ) <- in( B36 )  Freq: 256.702
        # Block is sole successor of call
420     spill R0 -> [sp, #56]	# spill size = 64
424     mov  R10, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
430     ldrw  R11, [R10, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
434     ldrw  R10, [R10, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
438     addw  R13, R11, R10
43c     eorw  R12, R13, R13, LSR #16
440     mov R13, #-747796405	# int
448     mulw  R13, R12, R13
44c     eorw  R12, R13, R13, LSR #16
450     mov R14, #-747796405	# int
458     mulw  R13, R12, R14
45c     eorw  R12, R13, R13, LSR #16
460     andsw  R29, R12, #1023	# int
464     mov  R12, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
470     ldrw  R13, [R12, #12]	# int ! Field: jdk/random/L32X64MixRandom.a
474     spill [sp, #32] -> R12	# spill size = 64
478     add R12, R12, R29, I2L #3	# ptr
47c     mov  R14, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
488     ldrw  R14, [R14, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
48c     eorw  R15, R14, R10	# int
490     eorw  R10, R15, R10, ROR #6
494     mov R14, #-1380669139	# int
49c     madd  R13, R11, R14, R13
4a0     eorw  R10, R10, R15, LSL #9
4a4     ror    R14, R15, #19
4a8     mov  R11, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
4b4     strw  R13, [R11, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
4b8     strw  R14, [R11, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
4bc     strw  R10, [R11, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
4c0     spill [sp, #48] -> R11	# spill size = 32
4c4     cmpw  R29, R11	# unsigned
4c8     bhs  B101	# unsigned  P=0.000001 C=-1.000000

4cc     B38: #	out( B102 B39 ) <- in( B37 )  Freq: 256.702
4cc     ldr  R10, [R12, #16]
4d8     cbeq   R10, B102  P=0.000001 C=-1.000000

4dc     B39: #	out( B116 B40 ) <- in( B38 )  Freq: 256.701
4dc     ldr  R29, [R10, #16] ! Field: Outer.field
4e8     ldrw  R11, [R29, #8]	# compressed class ptr
4ec     NullCheck R29

4ec     B40: #	out( B115 B41 ) <- in( B39 )  Freq: 256.701
4ec     mov  R10, narrowklass: precise InnerFloat: 0x0000fff8f8383918:Constant:exact *	# compressed klass ptr
4f4     cmp  R11, R10	 // compressed ptr
4f8     bne  B115	# unsigned  P=0.000000 C=-1.000000

4fc     B41: #	out( B117 B42 ) <- in( B40 )  Freq: 256.701
4fc     # checkcastPP of R29
4fc     ldrs  V18, [R29, #12]	# float ! Field: InnerFloat.data
500     spill [sp, #0] -> R10	# spill size = 64
504     ldrw  R11, [R10, #8]	# compressed class ptr
508     NullCheck R10

508     B42: #	out( B50 B43 ) <- in( B41 )  Freq: 256.701
508     mov  R12, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
510     cmp  R11, R12	 // compressed ptr
514     bne  B50	# unsigned  P=0.049817 C=-1.000000

518     B43: #	out( B118 B44 ) <- in( B42 )  Freq: 243.913
518     # checkcastPP of R10
518     spill R10 -> [sp, #0]	# spill size = 64
51c     ldrw  R11, [R0, #8]	# compressed class ptr
520     NullCheck R0

520     B44: #	out( B106 B45 ) <- in( B43 )  Freq: 243.913
520     mov  R10, narrowklass: precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# compressed klass ptr
528     cmp  R11, R10	 // compressed ptr
52c     bne  B106	# unsigned  P=0.000000 C=10176.000000

530     B45: #	out( B80 B46 ) <- in( B44 )  Freq: 243.912
530     spill R0 -> R10	# spill size = 64
534     # checkcastPP of R10
534     spill R10 -> [sp, #56]	# spill size = 64
538     ldr  R15, [R28, #456]	# ptr
53c     ldr  R10, [R28, #472]	# ptr
540     add R11, R15, #32	# ptr
544     cmp  R11, R10	 // ptr
548     bhs  B80	# unsigned  P=0.000100 C=-1.000000

54c     B46: #	out( B47 ) <- in( B45 )  Freq: 243.888
54c     str  R11, [R28, #456]	# ptr
550     mov R10, #1	# long
554     str  R10, [R15]	# int
558     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
55c     mov  R12, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
564     strw  R12, [R15, #8]	# compressed klass ptr
568     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
56c     mov R10, #4	# int
570     strw  R10, [R15, #12]	# int
574     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
578     add R10, R15, #16	# ptr
57c     ClearArray #2, R10

580     B47: #	out( B15 B48 ) <- in( B81 B46 )  Freq: 243.912
580     
580     # checkcastPP of R15
580     ldr  R13, [R28, #456]	# ptr
584     ldr  R10, [R28, #472]	# ptr
588     add R11, R13, #24	# ptr
58c     spill [sp, #56] -> R14	# spill size = 64
590     ldr  R12, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
59c     loadV16 V16, [R12, #16]	# vector (128 bits)
5a0     spill [sp, #0] -> R14	# spill size = 64
5a4     ldr  R12, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
5b0     loadV16 V17, [R12, #16]	# vector (128 bits)
5b4     vaddF V16, V17, V16
5b8     storeV16 [R15, #16], V16	# vector (128 bits)
5bc     cmp  R11, R10	 // ptr
5c0     blo  B15	# unsigned  P=0.999900 C=-1.000000

5c4     B48: #	out( B131 B49 ) <- in( B47 )  Freq: 0.0243953
5c4     spill R15 -> [sp, #64]	# spill size = 64
5c8     spill V18 -> [sp, #8]	# spill size = 32
5cc     mov  R1, precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# ptr
	
5d8     spill R14 -> R29	# spill size = 64
5dc     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f40ac968 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#4 STK[5]=R29 STK[6]=r31_sp + #56 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #8
        # OopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop off=1504/0x5e0}

5f0     B49: #	out( B16 ) <- in( B48 )  Freq: 0.0243948
        # Block is sole successor of call
5f0     spill R0 -> R13	# spill size = 64
5f4     spill [sp, #8] -> V18	# spill size = 32
5f8     spill [sp, #64] -> R15	# spill size = 64
5fc     b  B16

600     B50: #	out( B107 B51 ) <- in( B42 )  Freq: 12.7882
600     mov  R12, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
608     cmp  R11, R12	 // compressed ptr
60c     bne  B107	# unsigned  P=0.000001 C=-1.000000

610     B51: #	out( B119 B52 ) <- in( B50 )  Freq: 12.7881
610     # checkcastPP of R10
610     spill R10 -> [sp, #0]	# spill size = 64
614     ldrw  R11, [R0, #8]	# compressed class ptr
618     NullCheck R0

618     B52: #	out( B110 B53 ) <- in( B51 )  Freq: 12.7881
618     mov  R10, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
620     cmp  R11, R10	 // compressed ptr
624     bne  B110	# unsigned  P=0.000000 C=10176.000000

628     B53: #	out( B85 B54 ) <- in( B52 )  Freq: 12.7881
628     spill R0 -> R10	# spill size = 64
62c     # checkcastPP of R10
62c     spill R10 -> [sp, #56]	# spill size = 64
630     ldr  R12, [R28, #456]	# ptr
634     ldr  R10, [R28, #472]	# ptr
638     add R11, R12, #272	# ptr
63c     cmp  R11, R10	 // ptr
640     bhs  B85	# unsigned  P=0.000100 C=-1.000000

644     B54: #	out( B55 ) <- in( B53 )  Freq: 12.7868
644     str  R11, [R28, #456]	# ptr
648     mov R10, #1	# long
64c     str  R10, [R12]	# int
650     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
654     mov  R13, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
65c     strw  R13, [R12, #8]	# compressed klass ptr
660     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
664     mov R10, #64	# int
668     strw  R10, [R12, #12]	# int
66c     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
670     add R10, R12, #16	# ptr
674     mov R11, #32	# long
678     ClearArray R11, R10

6a0     B55: #	out( B87 B56 ) <- in( B86 B54 )  Freq: 12.7881
6a0     
6a0     # checkcastPP of R12
6a0     spill R12 -> [sp, #64]	# spill size = 64
6a4     add R10, R12, #16	# ptr
6a8     ldr  R0, [R28, #456]	# ptr
6ac     ldr  R11, [R28, #472]	# ptr
6b0     add R12, R0, #24	# ptr
6b4     spill [sp, #56] -> R14	# spill size = 64
6b8     ldr  R13, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
6c4     add R13, R13, #16	# ptr
6c8     loadV V16, [R13]	# vector (sve)
6cc     spill [sp, #0] -> R14	# spill size = 64
6d0     ldr  R13, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
6dc     add R13, R13, #16	# ptr
6e0     loadV V17, [R13]	# vector (sve)
6e4     vaddF V16, V17, V16
6e8     storeV [R10], V16	# vector (sve)
6ec     cmp  R12, R11	 // ptr
6f0     bhs  B87	# unsigned  P=0.000100 C=-1.000000

6f4     B56: #	out( B57 ) <- in( B55 )  Freq: 12.7868
6f4     str  R12, [R28, #456]	# ptr
6f8     mov R10, #1	# long
6fc     str  R10, [R0]	# int
700     mov  R10, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
708     strw  R10, [R0, #8]	# compressed klass ptr
70c     prfm [R12, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
710     strw  zr, [R0, #12]	# int

714     B57: #	out( B17 ) <- in( B88 B56 )  Freq: 12.7881
714     spill [sp, #64] -> R11	# spill size = 64
718     movq    [R0, #16], R11	# ptr
724     
724     # checkcastPP of R0
724     spill R0 -> [sp, #0]	# spill size = 64
728     b  B17

72c     B58: #	out( B109 B59 ) <- in( B23 )  Freq: 12.7879
72c     mov  R13, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
734     cmp  R11, R13	 // compressed ptr
738     bne  B109	# unsigned  P=0.000001 C=-1.000000

73c     B59: #	out( B111 B60 ) <- in( B58 )  Freq: 12.7879
73c     spill [sp, #0] -> R11	# spill size = 64
740     # checkcastPP of R11
740     spill R11 -> [sp, #0]	# spill size = 64
744     mov  R11, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
74c     cmp  R10, R11	 // compressed ptr
750     bne  B111	# unsigned  P=0.000000 C=10176.000000

754     B60: #	out( B93 B61 ) <- in( B59 )  Freq: 12.7879
754     spill [sp, #56] -> R29	# spill size = 64
758     # checkcastPP of R29
758     ldr  R12, [R28, #456]	# ptr
75c     ldr  R10, [R28, #472]	# ptr
760     add R11, R12, #272	# ptr
764     cmp  R11, R10	 // ptr
768     bhs  B93	# unsigned  P=0.000100 C=-1.000000

76c     B61: #	out( B62 ) <- in( B60 )  Freq: 12.7866
76c     str  R11, [R28, #456]	# ptr
770     mov R10, #1	# long
774     str  R10, [R12]	# int
778     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
77c     mov  R13, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
784     strw  R13, [R12, #8]	# compressed klass ptr
788     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
78c     mov R10, #64	# int
790     strw  R10, [R12, #12]	# int
794     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
798     add R10, R12, #16	# ptr
79c     mov R11, #32	# long
7a0     ClearArray R11, R10

7c8     B62: #	out( B95 B63 ) <- in( B94 B61 )  Freq: 12.7879
7c8     
7c8     MEMBAR-store-store
7cc     # checkcastPP of R12
7cc     spill R12 -> [sp, #56]	# spill size = 64
7d0     add R10, R12, #16	# ptr
7d4     ldr  R0, [R28, #456]	# ptr
7d8     ldr  R11, [R28, #472]	# ptr
7dc     add R12, R0, #24	# ptr
7e0     ldr  R13, [R29, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
7ec     add R13, R13, #16	# ptr
7f0     loadV V16, [R13]	# vector (sve)
7f4     spill [sp, #0] -> R14	# spill size = 64
7f8     ldr  R13, [R14, #16] ! Field: jdk/internal/vm/vector/VectorSupport$VectorPayload.payload (constant)
804     add R13, R13, #16	# ptr
808     loadV V17, [R13]	# vector (sve)
80c     vaddF V16, V17, V16
810     storeV [R10], V16	# vector (sve)
814     cmp  R12, R11	 // ptr
818     bhs  B95	# unsigned  P=0.000100 C=-1.000000

81c     B63: #	out( B64 ) <- in( B62 )  Freq: 12.7866
81c     str  R12, [R28, #456]	# ptr
820     mov R10, #1	# long
824     str  R10, [R0]	# int
828     mov  R10, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
830     strw  R10, [R0, #8]	# compressed klass ptr
834     prfm [R12, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
838     strw  zr, [R0, #12]	# int

83c     B64: #	out( B30 ) <- in( B96 B63 )  Freq: 12.7879
83c     spill [sp, #56] -> R11	# spill size = 64
840     movq    [R0, #16], R11	# ptr
84c     
84c     # checkcastPP of R0
84c     spill R0 -> [sp, #0]	# spill size = 64
850     b  B30

854     B65: #	out( B108 B66 ) <- in( B17 )  Freq: 12.7879
854     mov  R11, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
85c     cmp  R10, R11	 // compressed ptr
860     bne  B108	# unsigned  P=0.000001 C=-1.000000

864     B66: #	out( B89 B67 ) <- in( B65 )  Freq: 12.7879
864     spill [sp, #0] -> R29	# spill size = 64
868     # checkcastPP of R29
868     ldr  R12, [R28, #456]	# ptr
86c     ldr  R10, [R28, #472]	# ptr
870     add R11, R12, #272	# ptr
874     cmp  R11, R10	 // ptr
878     bhs  B89	# unsigned  P=0.000100 C=-1.000000

87c     B67: #	out( B68 ) <- in( B66 )  Freq: 12.7866
87c     str  R11, [R28, #456]	# ptr
880     mov R10, #1	# long
884     str  R10, [R12]	# int
888     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
88c     mov  R13, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
894     strw  R13, [R12, #8]	# compressed klass ptr
898     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
89c     mov R10, #64	# int
8a0     strw  R10, [R12, #12]	# int
8a4     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
8a8     add R10, R12, #16	# ptr
8ac     mov R11, #32	# long
8b0     ClearArray R11, R10

8d8     B68: #	out( B91 B69 ) <- in( B90 B67 )  Freq: 12.7879
8d8     replicateF V16, V18
8dc     
8dc     # checkcastPP of R12
8dc     spill R12 -> [sp, #64]	# spill size = 64
8e0     add R10, R12, #16	# ptr
8e4     storeV [R10], V16	# vector (sve)
8e8     ldr  R0, [R28, #456]	# ptr
8ec     ldr  R10, [R28, #472]	# ptr
8f0     add R11, R0, #24	# ptr
8f4     cmp  R11, R10	 // ptr
8f8     bhs  B91	# unsigned  P=0.000100 C=-1.000000

8fc     B69: #	out( B70 ) <- in( B68 )  Freq: 12.7866
8fc     str  R11, [R28, #456]	# ptr
900     mov R10, #1	# long
904     str  R10, [R0]	# int
908     mov  R10, narrowklass: precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# compressed klass ptr
910     strw  R10, [R0, #8]	# compressed klass ptr
914     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
918     strw  zr, [R0, #12]	# int

91c     B70: #	out( B23 ) <- in( B92 B69 )  Freq: 12.7879
91c     spill [sp, #64] -> R11	# spill size = 64
920     movq    [R0, #16], R11	# ptr
92c     
92c     # checkcastPP of R0
92c     spill R0 -> [sp, #56]	# spill size = 64
930     b  B23

934     B71: #	out( N1689 ) <- in( B31 )  Freq: 0.995055
934     # pop frame 112
	ldp  lr, rfp, [sp,#96]
	add  sp, sp, #112
	# test polling word
	ldr  rscratch1, [rthread],#1176
	cmp  sp, rscratch1
	bhi #slow_path
948     ret	// return register

964     B72: #	out( B138 B73 ) <- in( B18 )  Freq: 0.0243953
964     spill V18 -> [sp, #8]	# spill size = 32
968     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
974     mov R2, #4	# int
978     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits @ bci:19 (line 3688) L[0]=_ L[1]=_ L[2]=_ STK[0]=#Ptr0x0000fff8f40ac968 STK[1]=#Ptr0x0000fff8f8311ea0 STK[2]=#4 STK[3]=r31_sp + #56 STK[4]=_ STK[5]=#0 STK[6]=#Ptr0x0000fff8f827e260 STK[7]=#Ptr0x0000fff8f830c398
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcast @ bci:5 (line 3697) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::broadcastTemplate @ bci:7 (line 607) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::broadcast @ bci:2 (line 125) L[0]=_ L[1]=_
        # jdk.incubator.vector.Float128Vector::broadcast @ bci:2 (line 41) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:4 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40c5f28
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2428/0x97c}

98c     B73: #	out( B20 ) <- in( B72 )  Freq: 0.0243948
        # Block is sole successor of call
98c     spill [sp, #8] -> V18	# spill size = 32
990     spill R0 -> R14	# spill size = 64
994     b  B20

998     B74: #	out( B137 B75 ) <- in( B20 )  Freq: 0.0243953
998     spill R14 -> [sp, #64]	# spill size = 64
99c     mov  R1, precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# ptr
	
9a8     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits @ bci:19 (line 3688) L[0]=_ L[1]=_ L[2]=_ STK[0]=#Ptr0x0000fff8f40ac968 STK[1]=#Ptr0x0000fff8f8311ea0 STK[2]=#4 STK[3]=r31_sp + #56 STK[4]=_ STK[5]=#0 STK[6]=#Ptr0x0000fff8f827e260 STK[7]=#Ptr0x0000fff8f830c398
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcast @ bci:5 (line 3697) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::broadcastTemplate @ bci:7 (line 607) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::broadcast @ bci:2 (line 125) L[0]=_ L[1]=_
        # jdk.incubator.vector.Float128Vector::broadcast @ bci:2 (line 41) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:4 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40c5f28
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop off=2476/0x9ac}

9bc     B75: #	out( B22 ) <- in( B74 )  Freq: 0.0243948
        # Block is sole successor of call
9bc     spill R0 -> R12	# spill size = 64
9c0     spill [sp, #64] -> R14	# spill size = 64
9c4     b  B22

9c8     B76: #	out( B135 B77 ) <- in( B25 )  Freq: 0.0243953
9c8     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
9d4     mov R2, #4	# int
9d8     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f40ac968 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#4 STK[5]=r31_sp + #0 STK[6]=R29 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2524/0x9dc}

9ec     B77: #	out( B27 ) <- in( B76 )  Freq: 0.0243948
        # Block is sole successor of call
9ec     spill R0 -> R12	# spill size = 64
9f0     b  B27

9f4     B78: #	out( B134 B79 ) <- in( B27 )  Freq: 0.0243953
9f4     mov  R1, precise jdk/incubator/vector/Float128Vector: 0x0000fff8f82defa8:Constant:exact *	# ptr
	
a00     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f40ac968 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#4 STK[5]=r31_sp + #0 STK[6]=R29 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=2564/0xa04}

a14     B79: #	out( B29 ) <- in( B78 )  Freq: 0.0243948
        # Block is sole successor of call
a14     spill R0 -> R13	# spill size = 64
a18     b  B29

a1c     B80: #	out( B132 B81 ) <- in( B45 )  Freq: 0.0243953
a1c     spill V18 -> [sp, #8]	# spill size = 32
a20     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
a2c     mov R2, #4	# int
a30     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f40ac968 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#4 STK[5]=r31_sp + #0 STK[6]=r31_sp + #56 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #8
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=2612/0xa34}

a44     B81: #	out( B47 ) <- in( B80 )  Freq: 0.0243948
        # Block is sole successor of call
a44     spill [sp, #8] -> V18	# spill size = 32
a48     spill R0 -> R15	# spill size = 64
a4c     b  B47

a50     B82: #	out( B130 B83 ) <- in( B34 )  Freq: 0.00867564
a50     spill R10 -> R1	# spill size = 64
a54     call,static 0x0000ffff97c911c0 	// ==>  jdk.incubator.vector.AbstractSpecies::makeDummyVector
        # jdk.incubator.vector.AbstractSpecies::dummyVector @ bci:12 (line 311) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector @ bci:1 (line 3768) L[0]=_
        # jdk.incubator.vector.FloatVector::fromArray @ bci:19 (line 2799) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #52 L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #16 L[4]=r31_sp + #0 L[5]=r31_sp + #8 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2648/0xa58}

a68     B83: #	out( B114 B84 ) <- in( B82 )  Freq: 0.00867547
        # Block is sole successor of call
a68     cbeq   R0, B114  P=0.000001 C=-1.000000

a6c     B84: #	out( B35 ) <- in( B83 )  Freq: 0.00867546
a6c     spill R0 -> R29	# spill size = 64
a70     b  B35

a74     B85: #	out( B128 B86 ) <- in( B53 )  Freq: 0.00127902
a74     spill V18 -> [sp, #8]	# spill size = 32
a78     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
a84     mov R2, #64	# int
a88     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f4133b20 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#64 STK[5]=r31_sp + #0 STK[6]=r31_sp + #56 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #8
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=2700/0xa8c}

a9c     B86: #	out( B55 ) <- in( B85 )  Freq: 0.001279
        # Block is sole successor of call
a9c     spill R0 -> R12	# spill size = 64
aa0     spill [sp, #8] -> V18	# spill size = 32
aa4     b  B55

aa8     B87: #	out( B127 B88 ) <- in( B55 )  Freq: 0.00127902
aa8     spill V18 -> [sp, #8]	# spill size = 32
aac     mov  R1, precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# ptr
	
ab8     spill R14 -> R29	# spill size = 64
abc     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f4133b20 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#64 STK[5]=R29 STK[6]=r31_sp + #56 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #8
        # OopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop off=2752/0xac0}

ad0     B88: #	out( B57 ) <- in( B87 )  Freq: 0.001279
        # Block is sole successor of call
ad0     spill [sp, #8] -> V18	# spill size = 32
ad4     b  B57

ad8     B89: #	out( B125 B90 ) <- in( B66 )  Freq: 0.001279
ad8     spill V18 -> [sp, #8]	# spill size = 32
adc     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
ae8     mov R2, #64	# int
aec     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits @ bci:19 (line 3688) L[0]=_ L[1]=_ L[2]=_ STK[0]=#Ptr0x0000fff8f4133b20 STK[1]=#Ptr0x0000fff8f8311ea0 STK[2]=#64 STK[3]=r31_sp + #56 STK[4]=_ STK[5]=#0 STK[6]=#Ptr0x0000fff8f8308bf8 STK[7]=#Ptr0x0000fff8f830c398
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcast @ bci:5 (line 3697) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::broadcastTemplate @ bci:7 (line 607) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::broadcast @ bci:2 (line 125) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatMaxVector::broadcast @ bci:2 (line 41) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:4 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40c5f28
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2800/0xaf0}

b00     B90: #	out( B68 ) <- in( B89 )  Freq: 0.00127897
        # Block is sole successor of call
b00     spill R0 -> R12	# spill size = 64
b04     spill [sp, #8] -> V18	# spill size = 32
b08     b  B68

b0c     B91: #	out( B124 B92 ) <- in( B68 )  Freq: 0.001279
b0c     mov  R1, precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# ptr
	
b18     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits @ bci:19 (line 3688) L[0]=_ L[1]=_ L[2]=_ STK[0]=#Ptr0x0000fff8f4133b20 STK[1]=#Ptr0x0000fff8f8311ea0 STK[2]=#64 STK[3]=r31_sp + #56 STK[4]=_ STK[5]=#0 STK[6]=#Ptr0x0000fff8f8308bf8 STK[7]=#Ptr0x0000fff8f830c398
        # jdk.incubator.vector.FloatVector$FloatSpecies::broadcast @ bci:5 (line 3697) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::broadcastTemplate @ bci:7 (line 607) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::broadcast @ bci:2 (line 125) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatMaxVector::broadcast @ bci:2 (line 41) L[0]=_ L[1]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:4 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40c5f28
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop off=2844/0xb1c}

b2c     B92: #	out( B70 ) <- in( B91 )  Freq: 0.00127897
        # Block is sole successor of call
b2c     b  B70

b30     B93: #	out( B122 B94 ) <- in( B60 )  Freq: 0.001279
b30     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
b3c     mov R2, #64	# int
b40     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f4133b20 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#64 STK[5]=r31_sp + #0 STK[6]=R29 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2884/0xb44}

b54     B94: #	out( B62 ) <- in( B93 )  Freq: 0.00127897
        # Block is sole successor of call
b54     spill R0 -> R12	# spill size = 64
b58     b  B62

b5c     B95: #	out( B121 B96 ) <- in( B62 )  Freq: 0.001279
b5c     mov  R1, precise jdk/incubator/vector/FloatMaxVector: 0x0000fff8f82deef8:Constant:exact *	# ptr
	
b68     call,static 0x0000ffff97d5d140 	// ==>  wrapper for: _new_instance_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f4133b20 STK[2]=#null STK[3]=#Ptr0x0000fff8f8311ea0 STK[4]=#64 STK[5]=r31_sp + #0 STK[6]=R29 STK[7]=#null STK[8]=#Ptr0x0000fff8f40ab448
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=2924/0xb6c}

b7c     B96: #	out( B64 ) <- in( B95 )  Freq: 0.00127897
        # Block is sole successor of call
b7c     b  B64

b80     B97: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
b80     mov  R10, null	# null pointer
b84     b  B4

b88     B98: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
b88     mov  R13, null	# null pointer
b8c     b  B7

b90     B99: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
b90     mov  R21, null	# null pointer
b94     b  B10

b98     B100: #	out( N1689 ) <- in( B33 )  Freq: 0.000260116
b98     mov R1, #-28	# int
b9c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=r31_sp + #8 STK[1]=R29 STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 61) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::fromArray @ bci:9 (line 2797) L[0]=r31_sp + #40 L[1]=r31_sp + #24 L[2]=_ L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #16 L[4]=r31_sp + #0 L[5]=r31_sp + #8 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=2976/0xba0}
bac     ShouldNotReachHere

bb8     B101: #	out( N1689 ) <- in( B37 )  Freq: 0.000260111
bb8     mov R1, #-28	# int
bbc     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:41 (line 51) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=r31_sp + #0 L[5]=r31_sp + #52 L[6]=r31_sp + #56 L[7]=_ L[8]=_ STK[0]=r31_sp + #32 STK[1]=R29
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3008/0xbc0}
bcc     ShouldNotReachHere

bd8     B102: #	out( N1689 ) <- in( B38 )  Freq: 0.00026011
bd8     mov R1, #-10	# int
bdc     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:42 (line 51) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#null
        # OopMap {off=3040/0xbe0}
bec     ShouldNotReachHere

bf8     B103: #	out( N1689 ) <- in( B32 )  Freq: 0.000256708
bf8     mov R1, #-52	# int
bfc     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='intrinsic_or_type_checked_inlining' action='make_not_entrant' debug_id='0')
        # java.util.Objects::checkIndex @ bci:3 (line 365) L[0]=_ L[1]=_ STK[0]=r31_sp + #8 STK[1]=R29 STK[2]=#null
        # jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize @ bci:43 (line 61) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::fromArray @ bci:9 (line 2797) L[0]=r31_sp + #40 L[1]=r31_sp + #24 L[2]=_ L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #16 L[4]=r31_sp + #0 L[5]=r31_sp + #8 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop off=3072/0xc00}
c0c     ShouldNotReachHere

c18     B104: #	out( N1689 ) <- in( B35 )  Freq: 0.000256707
c18     mov R1, #-34	# int
c1c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector @ bci:4 (line 3768) L[0]=_ STK[0]=R29
        # jdk.incubator.vector.FloatVector::fromArray @ bci:19 (line 2799) L[0]=_ L[1]=_ L[2]=_ L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop off=3104/0xc20}
c2c     ShouldNotReachHere

c38     B105: #	out( N1689 ) <- in( B24 )  Freq: 0.000121956
c38     mov R1, #-187	# int
c3c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractVector::sameSpecies @ bci:8 (line 145) L[0]=r31_sp + #56 L[1]=r31_sp + #0 L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40ac968
        # jdk.incubator.vector.AbstractVector::check @ bci:2 (line 136) L[0]=r31_sp + #56 L[1]=r31_sp + #0
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=r31_sp + #0 L[1]=#Ptr0x0000fff8f40c5f28 L[2]=_ L[3]=r31_sp + #56 L[4]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3136/0xc40}
c4c     ShouldNotReachHere

c58     B106: #	out( N1689 ) <- in( B44 )  Freq: 0.000121956
c58     spill V18 -> [sp, #48]	# spill size = 32
c5c     decode_klass_not_null R10,R11
c60     ldr  R10, [R10, #120]	# ptr
c64     mov R1, #-187	# int
c68     ldr  R29, [R10]
c74     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractVector::sameSpecies @ bci:8 (line 145) L[0]=r31_sp + #56 L[1]=r31_sp + #0 L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f40ac968
        # jdk.incubator.vector.AbstractVector::check @ bci:2 (line 136) L[0]=r31_sp + #56 L[1]=r31_sp + #0
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=r31_sp + #0 L[1]=#Ptr0x0000fff8f40c5f28 L[2]=_ L[3]=r31_sp + #56 L[4]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #48
        # OopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3192/0xc78}
c84     ShouldNotReachHere

c90     B107: #	out( N1689 ) <- in( B50 )  Freq: 1.27882e-05
c90     spill V18 -> [sp, #8]	# spill size = 32
c94     mov R1, #-58	# int
c98     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_ STK[0]=r31_sp + #0 STK[1]=#Ptr0x0000fff8f40c5f28 STK[2]=r31_sp + #56
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #8
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3228/0xc9c}
ca8     ShouldNotReachHere

cb4     B108: #	out( N1689 ) <- in( B65 )  Freq: 1.27879e-05
cb4     spill V18 -> [sp, #8]	# spill size = 32
cb8     mov R1, #-58	# int
cbc     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector::lanewise @ bci:4 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=r31_sp + #0 STK[1]=#Ptr0x0000fff8f40c5f28 STK[2]=r31_sp + #0 STK[3]=r31_sp + #8
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop off=3264/0xcc0}
ccc     ShouldNotReachHere

cd8     B109: #	out( N1689 ) <- in( B58 )  Freq: 1.27879e-05
cd8     mov R1, #-58	# int
cdc     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='bimorphic_or_optimized_type_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_ STK[0]=r31_sp + #0 STK[1]=#Ptr0x0000fff8f40c5f28 STK[2]=r31_sp + #56
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3296/0xce0}
cec     ShouldNotReachHere

cf8     B110: #	out( N1689 ) <- in( B52 )  Freq: 6.39406e-06
cf8     spill V18 -> [sp, #48]	# spill size = 32
cfc     decode_klass_not_null R10,R11
d00     ldr  R10, [R10, #120]	# ptr
d04     mov R1, #-187	# int
d08     ldr  R29, [R10]
d14     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractVector::sameSpecies @ bci:8 (line 145) L[0]=r31_sp + #56 L[1]=r31_sp + #0 L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f4133b20
        # jdk.incubator.vector.AbstractVector::check @ bci:2 (line 136) L[0]=r31_sp + #56 L[1]=r31_sp + #0
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=r31_sp + #0 L[1]=#Ptr0x0000fff8f40c5f28 L[2]=_ L[3]=r31_sp + #56 L[4]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=r31_sp + #48
        # OopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3352/0xd18}
d24     ShouldNotReachHere

d30     B111: #	out( N1689 ) <- in( B59 )  Freq: 6.39393e-06
d30     mov R1, #-187	# int
d34     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='unstable_if' action='reinterpret' debug_id='0')
        # jdk.incubator.vector.AbstractVector::sameSpecies @ bci:8 (line 145) L[0]=r31_sp + #56 L[1]=r31_sp + #0 L[2]=_ STK[0]=R29 STK[1]=#Ptr0x0000fff8f4133b20
        # jdk.incubator.vector.AbstractVector::check @ bci:2 (line 136) L[0]=r31_sp + #56 L[1]=r31_sp + #0
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=r31_sp + #0 L[1]=#Ptr0x0000fff8f40c5f28 L[2]=_ L[3]=r31_sp + #56 L[4]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::lanewise @ bci:7 (line 872) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1249) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:66 (line 53) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=_ L[5]=r31_sp + #52 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3384/0xd38}
d44     ShouldNotReachHere

d50     B112: #	out( N1689 ) <- in( B13 B11 B12 )  Freq: 3.02654e-06
d50     spill R13 -> [sp, #24]	# spill size = 64
d54     spill R10 -> [sp, #16]	# spill size = 64
d54     spill R19 -> [sp, #8]	# spill size = 64
d58     mov R1, #-66	# int
d5c     spill R21 -> R29	# spill size = 64
d60     spill R20 -> [sp, #0]	# spill size = 32
d64     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='profile_predicate' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:13 (line 49) L[0]=_ L[1]=r31_sp + #16 L[2]=r31_sp + #24 L[3]=r31_sp + #8 L[4]=R29 L[5]=r31_sp + #0 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop off=3432/0xd68}
d74     ShouldNotReachHere

d80     B113: #	out( N1689 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
d80     spill R23 -> [sp, #24]	# spill size = 64
d84     spill R22 -> [sp, #16]	# spill size = 64
d84     spill R19 -> [sp, #8]	# spill size = 64
d88     mov R1, #-115	# int
d8c     spill R21 -> R29	# spill size = 64
d90     spill R20 -> [sp, #0]	# spill size = 32
d94     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='constraint' action='reinterpret' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:13 (line 49) L[0]=_ L[1]=r31_sp + #16 L[2]=r31_sp + #24 L[3]=r31_sp + #8 L[4]=R29 L[5]=r31_sp + #0 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop off=3480/0xd98}
da4     ShouldNotReachHere

db0     B114: #	out( N1689 ) <- in( B83 )  Freq: 8.79067e-09
db0     mov R1, #-12	# int
db4     spill [sp, #0] -> R29	# spill size = 64
db8     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector @ bci:4 (line 3768) L[0]=_ STK[0]=#null
        # jdk.incubator.vector.FloatVector::fromArray @ bci:19 (line 2799) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #52 L[3]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:24 (line 50) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #16 L[4]=R29 L[5]=r31_sp + #8 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop off=3516/0xdbc}
dc8     ShouldNotReachHere

dd4     B115: #	out( N1689 ) <- in( B40 )  Freq: 1e-35
dd4     mov R1, #-34	# int
dd8     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:49 (line 52) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=r31_sp + #0 L[5]=r31_sp + #52 L[6]=r31_sp + #56 L[7]=_ L[8]=_ STK[0]=R29
        # OopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3548/0xddc}
de8     ShouldNotReachHere

df4     B116: #	out( N1689 ) <- in( B39 )  Freq: 0.00026011
df4     mov R1, #-12	# int
df8     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:49 (line 52) L[0]=_ L[1]=r31_sp + #24 L[2]=r31_sp + #32 L[3]=r31_sp + #40 L[4]=r31_sp + #0 L[5]=r31_sp + #52 L[6]=r31_sp + #56 L[7]=_ L[8]=_ STK[0]=#null
        # OopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop off=3580/0xdfc}
e08     ShouldNotReachHere

e14     B117: #	out( N1689 ) <- in( B41 )  Freq: 0.00026011
e14     mov R1, #-10	# int
e18     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#null STK[1]=r31_sp + #56
        # OopMap {[56]=Oop off=3612/0xe1c}
e28     ShouldNotReachHere

e34     B118: #	out( N1689 ) <- in( B43 )  Freq: 0.000247152
e34     mov R1, #-162	# int
e38     spill [sp, #0] -> R29	# spill size = 64
e3c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='speculate_null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#null STK[1]=R29
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop off=3648/0xe40}
e4c     ShouldNotReachHere

e58     B119: #	out( N1689 ) <- in( B51 )  Freq: 1.2958e-05
e58     mov R1, #-162	# int
e5c     spill [sp, #0] -> R29	# spill size = 64
e60     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='speculate_null_check' action='maybe_recompile' debug_id='0')
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:7 (line 763) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#null STK[1]=R29
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop off=3684/0xe64}
e70     ShouldNotReachHere

e7c     B120: #	out( N1689 ) <- in( B10 )  Freq: 1.01328e-06
e7c     spill R13 -> [sp, #24]	# spill size = 64
e80     spill R10 -> [sp, #16]	# spill size = 64
e80     spill R19 -> [sp, #8]	# spill size = 64
e84     mov R1, #-138	# int
e88     spill R21 -> R29	# spill size = 64
e8c     spill R20 -> [sp, #0]	# spill size = 32
e90     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:13 (line 49) L[0]=_ L[1]=r31_sp + #16 L[2]=r31_sp + #24 L[3]=r31_sp + #8 L[4]=R29 L[5]=r31_sp + #0 L[6]=_ L[7]=_ L[8]=_
        # OopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop off=3732/0xe94}
ea0     ShouldNotReachHere

eac     B121: #	out( B123 ) <- in( B95 )  Freq: 1.279e-08
eac      -- 	// exception oop; no code emitted
eac     b  B123

eb0     B122: #	out( B123 ) <- in( B93 )  Freq: 1.279e-08
eb0      -- 	// exception oop; no code emitted

eb0     B123: #	out( B142 ) <- in( B122 B121 )  Freq: 2.55799e-08
eb0     spill R0 -> R1	# spill size = 64
eb4     b  B142

eb8     B124: #	out( B126 ) <- in( B91 )  Freq: 1.279e-08
eb8      -- 	// exception oop; no code emitted
eb8     b  B126

ebc     B125: #	out( B126 ) <- in( B89 )  Freq: 1.279e-08
ebc      -- 	// exception oop; no code emitted

ebc     B126: #	out( B142 ) <- in( B125 B124 )  Freq: 2.558e-08
ebc     spill R0 -> R1	# spill size = 64
ec0     b  B142

ec4     B127: #	out( B129 ) <- in( B87 )  Freq: 1.27902e-08
ec4      -- 	// exception oop; no code emitted
ec4     b  B129

ec8     B128: #	out( B129 ) <- in( B85 )  Freq: 1.27902e-08
ec8      -- 	// exception oop; no code emitted

ec8     B129: #	out( B142 ) <- in( B128 B127 )  Freq: 2.55805e-08
ec8     spill R0 -> R1	# spill size = 64
ecc     b  B142

ed0     B130: #	out( B141 ) <- in( B82 )  Freq: 8.67564e-08
ed0      -- 	// exception oop; no code emitted
ed0     b  B141

ed4     B131: #	out( B133 ) <- in( B48 )  Freq: 2.43953e-07
ed4      -- 	// exception oop; no code emitted
ed4     b  B133

ed8     B132: #	out( B133 ) <- in( B80 )  Freq: 2.43953e-07
ed8      -- 	// exception oop; no code emitted

ed8     B133: #	out( B142 ) <- in( B132 B131 )  Freq: 4.87906e-07
ed8     spill R0 -> R1	# spill size = 64
edc     b  B142

ee0     B134: #	out( B136 ) <- in( B78 )  Freq: 2.43953e-07
ee0      -- 	// exception oop; no code emitted
ee0     b  B136

ee4     B135: #	out( B136 ) <- in( B76 )  Freq: 2.43953e-07
ee4      -- 	// exception oop; no code emitted

ee4     B136: #	out( B142 ) <- in( B135 B134 )  Freq: 4.87906e-07
ee4     spill R0 -> R1	# spill size = 64
ee8     b  B142

eec     B137: #	out( B139 ) <- in( B74 )  Freq: 2.43953e-07
eec      -- 	// exception oop; no code emitted
eec     b  B139

ef0     B138: #	out( B139 ) <- in( B72 )  Freq: 2.43953e-07
ef0      -- 	// exception oop; no code emitted

ef0     B139: #	out( B142 ) <- in( B138 B137 )  Freq: 4.87906e-07
ef0     spill R0 -> R1	# spill size = 64
ef4     b  B142

ef8     B140: #	out( B141 ) <- in( B36 )  Freq: 0.00256707
ef8      -- 	// exception oop; no code emitted

ef8     B141: #	out( B142 ) <- in( B130 B140 )  Freq: 0.00256716
ef8     spill R0 -> R1	# spill size = 64

efc     B142: #	out( N1689 ) <- in( B141 B129 B133 B126 B139 B123 B136 )  Freq: 0.0025687
efc     # pop frame 112
	ldp  lr, rfp, [sp,#96]
	add  sp, sp, #112
	
f04     b rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 5788  559 %     4       TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ 13 (86 bytes)
 total in heap  [0x0000ffff984f0090,0x0000ffff984f2c38] = 11176
 relocation     [0x0000ffff984f0200,0x0000ffff984f0498] = 664
 main code      [0x0000ffff984f04c0,0x0000ffff984f1728] = 4712
 stub code      [0x0000ffff984f1728,0x0000ffff984f17c8] = 160
 oops           [0x0000ffff984f17c8,0x0000ffff984f1820] = 88
 metadata       [0x0000ffff984f1820,0x0000ffff984f1a10] = 496
 scopes data    [0x0000ffff984f1a10,0x0000ffff984f2068] = 1624
 scopes pcs     [0x0000ffff984f2068,0x0000ffff984f2a28] = 2496
 dependencies   [0x0000ffff984f2a28,0x0000ffff984f2aa8] = 128
 handler table  [0x0000ffff984f2aa8,0x0000ffff984f2bf8] = 336
 nul chk table  [0x0000ffff984f2bf8,0x0000ffff984f2c38] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
 ;; N1689: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f04c0:   brk	#0x0
  0x0000ffff984f04c4:   nop
  0x0000ffff984f04c8:   nop
  0x0000ffff984f04cc:   nop
 ;; B1: #	out( B97 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f04d0:   nop
  0x0000ffff984f04d4:   ptrue	p7.b
  0x0000ffff984f04d8:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff984f04dc:   str	xzr, [x9]
  0x0000ffff984f04e0:   sub	sp, sp, #0x70
  0x0000ffff984f04e4:   stp	x29, x30, [sp, #96]
  0x0000ffff984f04e8:   ldrb	w8, [x28, #1208]
  0x0000ffff984f04ec:   cbz	x8, 0x0000ffff984f0504
 ;; 0xFFFFAECE431C
  0x0000ffff984f04f0:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f04f4:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f04f8:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f04fc:   mov	x0, x28
  0x0000ffff984f0500:   blr	x8
  0x0000ffff984f0504:   ldr	w8, 0x0000ffff984f1720
 ;; 0xFFFFB0903FF8
  0x0000ffff984f0508:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff984f050c:   movk	x9, #0xb090, lsl #16
  0x0000ffff984f0510:   movk	x9, #0xffff, lsl #32
  0x0000ffff984f0514:   orr	x9, x9, x8, lsr #32
  0x0000ffff984f0518:   ldr	w9, [x9]
  0x0000ffff984f051c:   orr	x8, x8, x9, lsl #32
  0x0000ffff984f0520:   ldr	x9, [x28, #88]
  0x0000ffff984f0524:   cmp	x8, x9
  0x0000ffff984f0528:   b.ne	0x0000ffff984f170c  // b.any
  0x0000ffff984f052c:   ldr	x19, [x1, #40]
  0x0000ffff984f0530:   ldr	x22, [x1, #56]
  0x0000ffff984f0534:   ldr	x21, [x1, #32]
  0x0000ffff984f0538:   ldr	x23, [x1, #48]
  0x0000ffff984f053c:   ldr	w20, [x1, #24]              ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
  0x0000ffff984f0540:   mov	x0, x1
  0x0000ffff984f0544:   adr	x9, 0x0000ffff984f055c
 ;; 0xFFFFAF2DD490
  0x0000ffff984f0548:   mov	x8, #0xd490                	// #54416
                                                            ;   {runtime_call SharedRuntime::OSR_migration_end(long*)}
  0x0000ffff984f054c:   movk	x8, #0xaf2d, lsl #16
  0x0000ffff984f0550:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f0554:   stp	xzr, x9, [sp, #-16]!
  0x0000ffff984f0558:   blr	x8
  0x0000ffff984f055c:   nop                                 ;   {other}
  0x0000ffff984f0560:   movk	xzr, #0x0
  0x0000ffff984f0564:   movk	xzr, #0x0
  0x0000ffff984f0568:   add	sp, sp, #0x10
  0x0000ffff984f056c:   ptrue	p7.b                        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0570:   cbz	x22, 0x0000ffff984f1040
 ;; B2: #	out( B113 B3 ) <- in( B1 )  Freq: 0.999
  0x0000ffff984f0574:   ldr	w10, [x22, #8]
  0x0000ffff984f0578:   movz	x12, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f057c:   movk	x12, #0x20d8
  0x0000ffff984f0580:   cmp	w10, w12
  0x0000ffff984f0584:   b.ne	0x0000ffff984f1240  // b.any
 ;; B3: #	out( B4 ) <- in( B2 )  Freq: 0.998999
  0x0000ffff984f0588:   mov	x10, x22
 ;; B4: #	out( B98 B5 ) <- in( B3 B97 )  Freq: 0.999999
  0x0000ffff984f058c:   cbz	x23, 0x0000ffff984f1048
 ;; B5: #	out( B113 B6 ) <- in( B4 )  Freq: 0.998999
  0x0000ffff984f0590:   ldr	w12, [x23, #8]
  0x0000ffff984f0594:   mov	x11, #0x1000000             	// #16777216
                                                            ;   {metadata('Outer'[])}
  0x0000ffff984f0598:   movk	x11, #0x5d40
  0x0000ffff984f059c:   cmp	w12, w11
  0x0000ffff984f05a0:   b.ne	0x0000ffff984f1240  // b.any
 ;; B6: #	out( B7 ) <- in( B5 )  Freq: 0.998998
  0x0000ffff984f05a4:   mov	x13, x23
 ;; B7: #	out( B99 B8 ) <- in( B6 B98 )  Freq: 0.999998
  0x0000ffff984f05a8:   cbz	x21, 0x0000ffff984f1050
 ;; B8: #	out( B113 B9 ) <- in( B7 )  Freq: 0.998998
  0x0000ffff984f05ac:   ldr	w11, [x21, #8]
  0x0000ffff984f05b0:   eor	x11, x11, #0xfc00000000
  0x0000ffff984f05b4:   ldr	x11, [x11, #96]
 ;; 0xFC01042278
  0x0000ffff984f05b8:   mov	x12, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff984f05bc:   movk	x12, #0x104, lsl #16
  0x0000ffff984f05c0:   movk	x12, #0xfc, lsl #32
  0x0000ffff984f05c4:   cmp	x11, x12
  0x0000ffff984f05c8:   b.ne	0x0000ffff984f1240  // b.any;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; B9: #	out( B10 ) <- in( B8 )  Freq: 0.998997
 ;; B10: #	out( B120 B11 ) <- in( B9 B99 )  Freq: 0.999997
  0x0000ffff984f05cc:   ldr	w14, [x10, #12]             ; implicit exception: dispatches to 0x0000ffff984f133c
 ;; B11: #	out( B112 B12 ) <- in( B10 )  Freq: 0.999996
  0x0000ffff984f05d0:   ldr	w12, [x19, #8]              ; implicit exception: dispatches to 0x0000ffff984f1210
 ;; B12: #	out( B112 B13 ) <- in( B11 )  Freq: 0.999995
  0x0000ffff984f05d4:   mov	x11, #0x1040000             	// #17039360
                                                            ;   {metadata('jdk/incubator/vector/FloatVector$FloatSpecies')}
  0x0000ffff984f05d8:   movk	x11, #0xe4f8
  0x0000ffff984f05dc:   cmp	w12, w11
  0x0000ffff984f05e0:   b.ne	0x0000ffff984f1210  // b.any
 ;; B13: #	out( B112 B14 ) <- in( B12 )  Freq: 0.999994
  0x0000ffff984f05e4:   mov	x11, x19                    ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f05e8:   ldr	w15, [x13, #12]             ; implicit exception: dispatches to 0x0000ffff984f1210
 ;; B14: #	out( B31 ) <- in( B13 )  Freq: 0.999993
  0x0000ffff984f05ec:   str	w15, [sp, #48]
  0x0000ffff984f05f0:   str	x11, [sp, #40]
  0x0000ffff984f05f4:   str	w14, [sp, #12]
  0x0000ffff984f05f8:   str	x13, [sp, #32]
  0x0000ffff984f05fc:   str	x10, [sp, #24]
  0x0000ffff984f0600:   str	w20, [sp, #8]
  0x0000ffff984f0604:   str	x21, [sp]
  0x0000ffff984f0608:   str	x19, [sp, #16]              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff984f060c:   b	0x0000ffff984f084c
 ;; B15: #	out( B16 ) <- in( B47 ) top-of-loop Freq: 243.888
  0x0000ffff984f0610:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0614:   orr	x10, xzr, #0x1
  0x0000ffff984f0618:   str	x10, [x13]
  0x0000ffff984f061c:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0620:   movk	x10, #0xf98
  0x0000ffff984f0624:   str	w10, [x13, #8]
  0x0000ffff984f0628:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f062c:   str	wzr, [x13, #12]
 ;; B16: #	out( B17 ) <- in( B49 B15 ) top-of-loop Freq: 243.912
  0x0000ffff984f0630:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f0634:   orr	x10, x10, x15, lsl #16
  0x0000ffff984f0638:   str	x10, [x13, #16]
  0x0000ffff984f063c:   str	x13, [sp]
 ;; B17: #	out( B65 B18 ) <- in( B16 B57 )  Freq: 256.701
  0x0000ffff984f0640:   fmov	w11, s18
  0x0000ffff984f0644:   ldr	x10, [sp]                   ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0648:   ldr	w10, [x10, #8]              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f064c:   sxtw	x11, w11                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::toBits@4 (line 489)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@2 (line 3697)
                                                            ; - jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0650:   str	x11, [sp, #56]
  0x0000ffff984f0654:   mov	x12, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0658:   movk	x12, #0xf98
  0x0000ffff984f065c:   cmp	w10, w12                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0660:   b.ne	0x0000ffff984f0d14  // b.any
 ;; B18: #	out( B72 B19 ) <- in( B17 )  Freq: 243.913
  0x0000ffff984f0664:   ldr	x29, [sp]
  0x0000ffff984f0668:   ldr	x14, [x28, #456]
  0x0000ffff984f066c:   ldr	x10, [x28, #472]
  0x0000ffff984f0670:   add	x11, x14, #0x20
  0x0000ffff984f0674:   cmp	x11, x10
  0x0000ffff984f0678:   b.cs	0x0000ffff984f0e24  // b.hs, b.nlast
 ;; B19: #	out( B20 ) <- in( B18 )  Freq: 243.888
  0x0000ffff984f067c:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0680:   orr	x10, xzr, #0x1
  0x0000ffff984f0684:   str	x10, [x14]
  0x0000ffff984f0688:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f068c:   movz	x10, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0690:   movk	x10, #0x20d8
  0x0000ffff984f0694:   str	w10, [x14, #8]
  0x0000ffff984f0698:   prfm	pstl1keep, [x11, #256]
 ;; 0x4
  0x0000ffff984f069c:   orr	w12, wzr, #0x4
  0x0000ffff984f06a0:   str	w12, [x14, #12]
  0x0000ffff984f06a4:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f06a8:   add	x10, x14, #0x10
 ;; zero_words (count = 2) {
  0x0000ffff984f06ac:   stp	xzr, xzr, [x10]
 ;; } zero_words
 ;; B20: #	out( B74 B21 ) <- in( B73 B19 )  Freq: 243.913
  0x0000ffff984f06b0:   dup	v16.4s, v18.s[0]
  0x0000ffff984f06b4:   str	q16, [x14, #16]
  0x0000ffff984f06b8:   ldr	x12, [x28, #456]
  0x0000ffff984f06bc:   ldr	x10, [x28, #472]
  0x0000ffff984f06c0:   add	x11, x12, #0x18
  0x0000ffff984f06c4:   cmp	x11, x10
  0x0000ffff984f06c8:   b.cs	0x0000ffff984f0e58  // b.hs, b.nlast
 ;; B21: #	out( B22 ) <- in( B20 )  Freq: 243.888
  0x0000ffff984f06cc:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f06d0:   orr	x10, xzr, #0x1
  0x0000ffff984f06d4:   str	x10, [x12]
  0x0000ffff984f06d8:   mov	x13, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f06dc:   movk	x13, #0xf98
  0x0000ffff984f06e0:   str	w13, [x12, #8]
  0x0000ffff984f06e4:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f06e8:   str	wzr, [x12, #12]
 ;; B22: #	out( B23 ) <- in( B75 B21 )  Freq: 243.913
  0x0000ffff984f06ec:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f06f0:   orr	x10, x10, x14, lsl #16
  0x0000ffff984f06f4:   str	x10, [x12, #16]
  0x0000ffff984f06f8:   str	x12, [sp, #56]              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; B23: #	out( B58 B24 ) <- in( B22 B70 )  Freq: 256.701
  0x0000ffff984f06fc:   ldr	x10, [sp]                   ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0700:   ldr	w11, [x10, #8]              ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0704:   ldr	x10, [sp, #56]              ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0708:   ldr	w10, [x10, #8]
  0x0000ffff984f070c:   eor	x12, x10, #0xfc00000000     ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0710:   ldr	x12, [x12, #120]
  0x0000ffff984f0714:   ldr	x29, [x12]
  0x0000ffff984f0718:   tbnz	w29, #12, 0x0000ffff984f13d0;   {other}
  0x0000ffff984f071c:   lsr	x29, x29, #16
  0x0000ffff984f0720:   mov	x13, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0724:   movk	x13, #0xf98
  0x0000ffff984f0728:   cmp	w11, w13                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f072c:   b.ne	0x0000ffff984f0bec  // b.any
 ;; B24: #	out( B105 B25 ) <- in( B23 )  Freq: 243.913
  0x0000ffff984f0730:   ldr	x11, [sp]                   ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0734:   str	x11, [sp]
  0x0000ffff984f0738:   mov	x11, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f073c:   movk	x11, #0xf98
  0x0000ffff984f0740:   cmp	w10, w11                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0744:   b.ne	0x0000ffff984f10f8  // b.any
 ;; B25: #	out( B76 B26 ) <- in( B24 )  Freq: 243.913
  0x0000ffff984f0748:   ldr	x29, [sp, #56]              ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f074c:   ldr	x12, [x28, #456]
  0x0000ffff984f0750:   ldr	x10, [x28, #472]
  0x0000ffff984f0754:   add	x11, x12, #0x20
  0x0000ffff984f0758:   cmp	x11, x10
  0x0000ffff984f075c:   b.cs	0x0000ffff984f0e88  // b.hs, b.nlast
 ;; B26: #	out( B27 ) <- in( B25 )  Freq: 243.888
  0x0000ffff984f0760:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0764:   orr	x10, xzr, #0x1
  0x0000ffff984f0768:   str	x10, [x12]
  0x0000ffff984f076c:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0770:   movz	x13, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0774:   movk	x13, #0x20d8
  0x0000ffff984f0778:   str	w13, [x12, #8]
  0x0000ffff984f077c:   prfm	pstl1keep, [x11, #256]
 ;; 0x4
  0x0000ffff984f0780:   orr	w10, wzr, #0x4
  0x0000ffff984f0784:   str	w10, [x12, #12]
  0x0000ffff984f0788:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f078c:   add	x10, x12, #0x10
 ;; zero_words (count = 2) {
  0x0000ffff984f0790:   stp	xzr, xzr, [x10]
 ;; } zero_words
 ;; B27: #	out( B78 B28 ) <- in( B77 B26 )  Freq: 243.913
  0x0000ffff984f0794:   dmb	ishst
  0x0000ffff984f0798:   str	x12, [sp, #56]
  0x0000ffff984f079c:   ldr	x13, [x28, #456]
  0x0000ffff984f07a0:   ldr	x10, [x28, #472]
  0x0000ffff984f07a4:   add	x11, x13, #0x18
  0x0000ffff984f07a8:   ldr	x14, [sp]
  0x0000ffff984f07ac:   ldr	x12, [x14, #16]
  0x0000ffff984f07b0:   tbnz	w12, #12, 0x0000ffff984f1404;   {other}
  0x0000ffff984f07b4:   lsr	x12, x12, #16
  0x0000ffff984f07b8:   ldr	q16, [x12, #16]
  0x0000ffff984f07bc:   ldr	x12, [x29, #16]
  0x0000ffff984f07c0:   tbnz	w12, #12, 0x0000ffff984f1438;   {other}
  0x0000ffff984f07c4:   lsr	x12, x12, #16
  0x0000ffff984f07c8:   ldr	q17, [x12, #16]
  0x0000ffff984f07cc:   fadd	v16.4s, v16.4s, v17.4s
  0x0000ffff984f07d0:   ldr	x12, [sp, #56]
  0x0000ffff984f07d4:   str	q16, [x12, #16]
  0x0000ffff984f07d8:   cmp	x11, x10
  0x0000ffff984f07dc:   b.cs	0x0000ffff984f0eb4  // b.hs, b.nlast
 ;; B28: #	out( B29 ) <- in( B27 )  Freq: 243.888
  0x0000ffff984f07e0:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f07e4:   orr	x10, xzr, #0x1
  0x0000ffff984f07e8:   str	x10, [x13]
  0x0000ffff984f07ec:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f07f0:   movk	x10, #0xf98
  0x0000ffff984f07f4:   str	w10, [x13, #8]
  0x0000ffff984f07f8:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f07fc:   str	wzr, [x13, #12]
 ;; B29: #	out( B30 ) <- in( B79 B28 )  Freq: 243.913
  0x0000ffff984f0800:   ldr	x11, [sp, #56]
  0x0000ffff984f0804:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f0808:   orr	x10, x10, x11, lsl #16
  0x0000ffff984f080c:   str	x10, [x13, #16]
  0x0000ffff984f0810:   str	x13, [sp]                   ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; B30: #	out( B31 ) <- in( B29 B64 )  Freq: 256.7
  0x0000ffff984f0814:   ldr	x10, [sp, #40]
  0x0000ffff984f0818:   ldr	w11, [x10, #12]
  0x0000ffff984f081c:   ldr	x10, [x28, #1184]
  0x0000ffff984f0820:   ldr	w13, [sp, #52]              ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0824:   add	w12, w11, w13               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
  0x0000ffff984f0828:   str	w12, [sp, #8]               ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff984f082c:   ldr	wzr, [x10]                  ;   {poll}
  0x0000ffff984f0830:   ldrb	w8, [x28, #1208]
  0x0000ffff984f0834:   cbz	x8, 0x0000ffff984f084c
 ;; 0xFFFFAECE431C
  0x0000ffff984f0838:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f083c:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f0840:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f0844:   mov	x0, x28
  0x0000ffff984f0848:   blr	x8                          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; B31: #	out( B71 B32 ) <- in( B14 B30 ) Loop( B31-B30 inner ) Freq: 257.703
 ;; merged ldr pair
  0x0000ffff984f084c:   ldp	w10, w12, [sp, #8]
  0x0000ffff984f0850:   cmp	w10, w12
  0x0000ffff984f0854:   b.ge	0x0000ffff984f0df4  // b.tcont
 ;; B32: #	out( B103 B33 ) <- in( B31 )  Freq: 256.708
  0x0000ffff984f0858:   ldr	x10, [sp, #40]              ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f085c:   ldr	w11, [x10, #12]             ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f0860:   sub	w10, w12, w11               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0864:   add	w29, w10, #0x1              ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f0868:   tbnz	w29, #31, 0x0000ffff984f10b8
 ;; B33: #	out( B100 B34 ) <- in( B32 )  Freq: 256.708
  0x0000ffff984f086c:   ldr	w11, [sp, #8]
  0x0000ffff984f0870:   cmp	w11, w29
  0x0000ffff984f0874:   b.cs	0x0000ffff984f1058  // b.hs, b.nlast
 ;; B34: #	out( B82 B35 ) <- in( B33 )  Freq: 256.707
  0x0000ffff984f0878:   ldr	w10, [sp, #8]               ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f087c:   str	w10, [sp, #52]
  0x0000ffff984f0880:   ldr	x10, [sp, #40]
  0x0000ffff984f0884:   ldr	x29, [x10, #104]
  0x0000ffff984f0888:   tbnz	w29, #12, 0x0000ffff984f1474;   {other}
  0x0000ffff984f088c:   lsr	x29, x29, #16               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0890:   cbz	x29, 0x0000ffff984f0f10     ;*invokespecial dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B35: #	out( B104 B36 ) <- in( B34 B84 )  Freq: 256.707
  0x0000ffff984f0894:   ldr	w11, [x29, #8]
  0x0000ffff984f0898:   eor	x10, x11, #0xfc00000000
  0x0000ffff984f089c:   ldr	x10, [x10, #96]
 ;; 0xFC01042278
  0x0000ffff984f08a0:   mov	x11, #0x2278                	// #8824
                                                            ;   {metadata('jdk/incubator/vector/FloatVector')}
  0x0000ffff984f08a4:   movk	x11, #0x104, lsl #16
  0x0000ffff984f08a8:   movk	x11, #0xfc, lsl #32
  0x0000ffff984f08ac:   cmp	x10, x11
  0x0000ffff984f08b0:   b.ne	0x0000ffff984f10d8  // b.any
 ;; B36: #	out( B140 B37 ) <- in( B35 )  Freq: 256.707
  0x0000ffff984f08b4:   mov	x1, x29                     ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f08b8:   ldr	x2, [sp, #24]
  0x0000ffff984f08bc:   ldr	w3, [sp, #52]
 ;; 0xFFFFFFFFFFFF
  0x0000ffff984f08c0:   mov	x9, #0x8820                	// #34848
  0x0000ffff984f08c4:   movk	x9, #0xf424, lsl #16
  0x0000ffff984f08c8:   movk	x9, #0xfff8, lsl #32
  0x0000ffff984f08cc:   bl	0x0000ffff984f1728          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {virtual_call}
  0x0000ffff984f08d0:   nop                                 ;   {other}
  0x0000ffff984f08d4:   movk	xzr, #0x840
  0x0000ffff984f08d8:   movk	xzr, #0x100
  0x0000ffff984f08dc:   ptrue	p7.b
 ;; B37: #	out( B101 B38 ) <- in( B36 )  Freq: 256.702
  0x0000ffff984f08e0:   str	x0, [sp, #56]               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xFFF8F409C3A0
  0x0000ffff984f08e4:   mov	x10, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f08e8:   movk	x10, #0xa4, lsl #16
  0x0000ffff984f08ec:   movk	x10, #0x800, lsl #32
  0x0000ffff984f08f0:   ldr	w11, [x10, #16]             ;*getfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@1 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f08f4:   ldr	w10, [x10, #20]             ;*getfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@5 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f08f8:   add	w13, w11, w10               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@8 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f08fc:   eor	w12, w13, w13, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xD36D884B
  0x0000ffff984f0900:   mov	w13, #0x884b                	// #34891
  0x0000ffff984f0904:   movk	w13, #0xd36d, lsl #16
  0x0000ffff984f0908:   mul	w13, w12, w13               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f090c:   eor	w12, w13, w13, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xD36D884B
  0x0000ffff984f0910:   mov	w14, #0x884b                	// #34891
  0x0000ffff984f0914:   movk	w14, #0xd36d, lsl #16
  0x0000ffff984f0918:   mul	w13, w12, w14               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f091c:   eor	w12, w13, w13, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0920:   and	w29, w12, #0x3ff            ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
 ;; 0xFFF8F409C3A0
  0x0000ffff984f0924:   mov	x12, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f0928:   movk	x12, #0xa4, lsl #16
  0x0000ffff984f092c:   movk	x12, #0x800, lsl #32
  0x0000ffff984f0930:   ldr	w13, [x12, #12]
  0x0000ffff984f0934:   ldr	x12, [sp, #32]
  0x0000ffff984f0938:   add	x12, x12, w29, sxtw #3
 ;; 0xFFF8F409C3A0
  0x0000ffff984f093c:   mov	x14, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f0940:   movk	x14, #0xa4, lsl #16
  0x0000ffff984f0944:   movk	x14, #0x800, lsl #32
  0x0000ffff984f0948:   ldr	w14, [x14, #24]             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f094c:   eor	w15, w14, w10               ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@41 (line 243)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f0950:   eor	w10, w15, w10, ror #6
 ;; 0xADB4A92D
  0x0000ffff984f0954:   mov	w14, #0xa92d                	// #43309
  0x0000ffff984f0958:   movk	w14, #0xadb4, lsl #16
  0x0000ffff984f095c:   madd	w13, w11, w14, w13
  0x0000ffff984f0960:   eor	w10, w10, w15, lsl #9
  0x0000ffff984f0964:   ror	w14, w15, #19               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xFFF8F409C3A0
  0x0000ffff984f0968:   mov	x11, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f096c:   movk	x11, #0xa4, lsl #16
  0x0000ffff984f0970:   movk	x11, #0x800, lsl #32
  0x0000ffff984f0974:   str	w13, [x11, #16]             ;*putfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@26 (line 238)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f0978:   str	w14, [x11, #24]             ;*putfield x1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@73 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f097c:   str	w10, [x11, #20]             ;*putfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@68 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f0980:   ldr	w11, [sp, #48]
  0x0000ffff984f0984:   cmp	w29, w11
  0x0000ffff984f0988:   b.cs	0x0000ffff984f1078  // b.hs, b.nlast
 ;; B38: #	out( B102 B39 ) <- in( B37 )  Freq: 256.702
  0x0000ffff984f098c:   ldr	x10, [x12, #16]
  0x0000ffff984f0990:   tbnz	w10, #12, 0x0000ffff984f14a0;   {other}
  0x0000ffff984f0994:   lsr	x10, x10, #16
  0x0000ffff984f0998:   cbz	x10, 0x0000ffff984f1098
 ;; B39: #	out( B116 B40 ) <- in( B38 )  Freq: 256.701
  0x0000ffff984f099c:   ldr	x29, [x10, #16]
  0x0000ffff984f09a0:   tbnz	w29, #12, 0x0000ffff984f14cc;   {other}
  0x0000ffff984f09a4:   lsr	x29, x29, #16
  0x0000ffff984f09a8:   ldr	w11, [x29, #8]              ; implicit exception: dispatches to 0x0000ffff984f12b4
 ;; B40: #	out( B115 B41 ) <- in( B39 )  Freq: 256.701
  0x0000ffff984f09ac:   mov	x10, #0x1000000             	// #16777216
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff984f09b0:   movk	x10, #0x1450
  0x0000ffff984f09b4:   cmp	w11, w10                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f09b8:   b.ne	0x0000ffff984f1294  // b.any;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; B41: #	out( B117 B42 ) <- in( B40 )  Freq: 256.701
  0x0000ffff984f09bc:   ldr	s18, [x29, #12]             ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
  0x0000ffff984f09c0:   ldr	x10, [sp]
  0x0000ffff984f09c4:   ldr	w11, [x10, #8]              ; implicit exception: dispatches to 0x0000ffff984f12d4
 ;; B42: #	out( B50 B43 ) <- in( B41 )  Freq: 256.701
  0x0000ffff984f09c8:   mov	x12, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f09cc:   movk	x12, #0xf98
  0x0000ffff984f09d0:   cmp	w11, w12                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f09d4:   b.ne	0x0000ffff984f0ac0  // b.any;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B43: #	out( B118 B44 ) <- in( B42 )  Freq: 243.913
  0x0000ffff984f09d8:   str	x10, [sp]
  0x0000ffff984f09dc:   ldr	w11, [x0, #8]               ; implicit exception: dispatches to 0x0000ffff984f12f4
 ;; B44: #	out( B106 B45 ) <- in( B43 )  Freq: 243.913
  0x0000ffff984f09e0:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f09e4:   movk	x10, #0xf98
  0x0000ffff984f09e8:   cmp	w11, w10                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f09ec:   b.ne	0x0000ffff984f1118  // b.any
 ;; B45: #	out( B80 B46 ) <- in( B44 )  Freq: 243.912
  0x0000ffff984f09f0:   mov	x10, x0                     ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f09f4:   str	x10, [sp, #56]
  0x0000ffff984f09f8:   ldr	x15, [x28, #456]
  0x0000ffff984f09fc:   ldr	x10, [x28, #472]
  0x0000ffff984f0a00:   add	x11, x15, #0x20
  0x0000ffff984f0a04:   cmp	x11, x10
  0x0000ffff984f0a08:   b.cs	0x0000ffff984f0edc  // b.hs, b.nlast
 ;; B46: #	out( B47 ) <- in( B45 )  Freq: 243.888
  0x0000ffff984f0a0c:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0a10:   orr	x10, xzr, #0x1
  0x0000ffff984f0a14:   str	x10, [x15]
  0x0000ffff984f0a18:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0a1c:   movz	x12, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0a20:   movk	x12, #0x20d8
  0x0000ffff984f0a24:   str	w12, [x15, #8]
  0x0000ffff984f0a28:   prfm	pstl1keep, [x11, #256]
 ;; 0x4
  0x0000ffff984f0a2c:   orr	w10, wzr, #0x4
  0x0000ffff984f0a30:   str	w10, [x15, #12]
  0x0000ffff984f0a34:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f0a38:   add	x10, x15, #0x10
 ;; zero_words (count = 2) {
  0x0000ffff984f0a3c:   stp	xzr, xzr, [x10]
 ;; } zero_words
 ;; B47: #	out( B15 B48 ) <- in( B81 B46 )  Freq: 243.912
  0x0000ffff984f0a40:   ldr	x13, [x28, #456]
  0x0000ffff984f0a44:   ldr	x10, [x28, #472]
  0x0000ffff984f0a48:   add	x11, x13, #0x18
  0x0000ffff984f0a4c:   ldr	x14, [sp, #56]
  0x0000ffff984f0a50:   ldr	x12, [x14, #16]
  0x0000ffff984f0a54:   tbnz	w12, #12, 0x0000ffff984f14f8;   {other}
  0x0000ffff984f0a58:   lsr	x12, x12, #16
  0x0000ffff984f0a5c:   ldr	q16, [x12, #16]
  0x0000ffff984f0a60:   ldr	x14, [sp]
  0x0000ffff984f0a64:   ldr	x12, [x14, #16]
  0x0000ffff984f0a68:   tbnz	w12, #12, 0x0000ffff984f153c;   {other}
  0x0000ffff984f0a6c:   lsr	x12, x12, #16
  0x0000ffff984f0a70:   ldr	q17, [x12, #16]
  0x0000ffff984f0a74:   fadd	v16.4s, v17.4s, v16.4s
  0x0000ffff984f0a78:   str	q16, [x15, #16]
  0x0000ffff984f0a7c:   cmp	x11, x10
  0x0000ffff984f0a80:   b.cc	0x0000ffff984f0610  // b.lo, b.ul, b.last
 ;; B48: #	out( B131 B49 ) <- in( B47 )  Freq: 0.0243953
  0x0000ffff984f0a84:   str	x15, [sp, #64]
  0x0000ffff984f0a88:   str	s18, [sp, #8]
 ;; 0xFC01050F98
  0x0000ffff984f0a8c:   mov	x1, #0xf98                 	// #3992
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0a90:   movk	x1, #0x105, lsl #16
  0x0000ffff984f0a94:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f0a98:   mov	x29, x14
  0x0000ffff984f0a9c:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f0aa0:   nop                                 ;   {other}
  0x0000ffff984f0aa4:   movk	xzr, #0xa10
  0x0000ffff984f0aa8:   movk	xzr, #0x200
  0x0000ffff984f0aac:   ptrue	p7.b
 ;; B49: #	out( B16 ) <- in( B48 )  Freq: 0.0243948
  0x0000ffff984f0ab0:   mov	x13, x0
  0x0000ffff984f0ab4:   ldr	s18, [sp, #8]
  0x0000ffff984f0ab8:   ldr	x15, [sp, #64]
  0x0000ffff984f0abc:   b	0x0000ffff984f0630
 ;; B50: #	out( B107 B51 ) <- in( B42 )  Freq: 12.7882
  0x0000ffff984f0ac0:   mov	x12, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0ac4:   movk	x12, #0x3380
  0x0000ffff984f0ac8:   cmp	w11, w12                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0acc:   b.ne	0x0000ffff984f1150  // b.any;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B51: #	out( B119 B52 ) <- in( B50 )  Freq: 12.7881
  0x0000ffff984f0ad0:   str	x10, [sp]
  0x0000ffff984f0ad4:   ldr	w11, [x0, #8]               ; implicit exception: dispatches to 0x0000ffff984f1318
 ;; B52: #	out( B110 B53 ) <- in( B51 )  Freq: 12.7881
  0x0000ffff984f0ad8:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0adc:   movk	x10, #0x3380
  0x0000ffff984f0ae0:   cmp	w11, w10                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0ae4:   b.ne	0x0000ffff984f11b8  // b.any
 ;; B53: #	out( B85 B54 ) <- in( B52 )  Freq: 12.7881
  0x0000ffff984f0ae8:   mov	x10, x0                     ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f0aec:   str	x10, [sp, #56]
  0x0000ffff984f0af0:   ldr	x12, [x28, #456]
  0x0000ffff984f0af4:   ldr	x10, [x28, #472]
  0x0000ffff984f0af8:   add	x11, x12, #0x110            ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f0afc:   cmp	x11, x10
  0x0000ffff984f0b00:   b.cs	0x0000ffff984f0f34  // b.hs, b.nlast
 ;; B54: #	out( B55 ) <- in( B53 )  Freq: 12.7868
  0x0000ffff984f0b04:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0b08:   orr	x10, xzr, #0x1
  0x0000ffff984f0b0c:   str	x10, [x12]
  0x0000ffff984f0b10:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0b14:   movz	x13, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0b18:   movk	x13, #0x20d8
  0x0000ffff984f0b1c:   str	w13, [x12, #8]
  0x0000ffff984f0b20:   prfm	pstl1keep, [x11, #256]
 ;; 0x40
  0x0000ffff984f0b24:   orr	w10, wzr, #0x40
  0x0000ffff984f0b28:   str	w10, [x12, #12]
  0x0000ffff984f0b2c:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f0b30:   add	x10, x12, #0x10
 ;; 0x20
  0x0000ffff984f0b34:   orr	x11, xzr, #0x20
 ;; zero_words {
  0x0000ffff984f0b38:   subs	x8, x11, #0x8
  0x0000ffff984f0b3c:   b.cc	0x0000ffff984f0b44  // b.lo, b.ul, b.last
  0x0000ffff984f0b40:   bl	0x0000ffff984f1778          ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f0b44:   tbz	w11, #2, 0x0000ffff984f0b50
  0x0000ffff984f0b48:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0b4c:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0b50:   tbz	w11, #1, 0x0000ffff984f0b58
  0x0000ffff984f0b54:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0b58:   tbz	w11, #0, 0x0000ffff984f0b60
  0x0000ffff984f0b5c:   str	xzr, [x10]
 ;; } zero_words
 ;; B55: #	out( B87 B56 ) <- in( B86 B54 )  Freq: 12.7881
  0x0000ffff984f0b60:   str	x12, [sp, #64]
  0x0000ffff984f0b64:   add	x10, x12, #0x10
  0x0000ffff984f0b68:   ldr	x0, [x28, #456]
  0x0000ffff984f0b6c:   ldr	x11, [x28, #472]
  0x0000ffff984f0b70:   add	x12, x0, #0x18
  0x0000ffff984f0b74:   ldr	x14, [sp, #56]
  0x0000ffff984f0b78:   ldr	x13, [x14, #16]
  0x0000ffff984f0b7c:   tbnz	w13, #12, 0x0000ffff984f1588;   {other}
  0x0000ffff984f0b80:   lsr	x13, x13, #16
  0x0000ffff984f0b84:   add	x13, x13, #0x10
  0x0000ffff984f0b88:   ld1w	{z16.s}, p7/z, [x13]
  0x0000ffff984f0b8c:   ldr	x14, [sp]
  0x0000ffff984f0b90:   ldr	x13, [x14, #16]
  0x0000ffff984f0b94:   tbnz	w13, #12, 0x0000ffff984f15cc;   {other}
  0x0000ffff984f0b98:   lsr	x13, x13, #16
  0x0000ffff984f0b9c:   add	x13, x13, #0x10
  0x0000ffff984f0ba0:   ld1w	{z17.s}, p7/z, [x13]
  0x0000ffff984f0ba4:   fadd	z16.s, z17.s, z16.s
  0x0000ffff984f0ba8:   st1w	{z16.s}, p7, [x10]
  0x0000ffff984f0bac:   cmp	x12, x11
  0x0000ffff984f0bb0:   b.cs	0x0000ffff984f0f68  // b.hs, b.nlast
 ;; B56: #	out( B57 ) <- in( B55 )  Freq: 12.7868
  0x0000ffff984f0bb4:   str	x12, [x28, #456]
 ;; 0x1
  0x0000ffff984f0bb8:   orr	x10, xzr, #0x1
  0x0000ffff984f0bbc:   str	x10, [x0]
  0x0000ffff984f0bc0:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0bc4:   movk	x10, #0x3380
  0x0000ffff984f0bc8:   str	w10, [x0, #8]
  0x0000ffff984f0bcc:   prfm	pstl1keep, [x12, #192]
  0x0000ffff984f0bd0:   str	wzr, [x0, #12]
 ;; B57: #	out( B17 ) <- in( B88 B56 )  Freq: 12.7881
  0x0000ffff984f0bd4:   ldr	x11, [sp, #64]
  0x0000ffff984f0bd8:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f0bdc:   orr	x10, x10, x11, lsl #16
  0x0000ffff984f0be0:   str	x10, [x0, #16]
  0x0000ffff984f0be4:   str	x0, [sp]
  0x0000ffff984f0be8:   b	0x0000ffff984f0640
 ;; B58: #	out( B109 B59 ) <- in( B23 )  Freq: 12.7879
  0x0000ffff984f0bec:   mov	x13, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0bf0:   movk	x13, #0x3380
  0x0000ffff984f0bf4:   cmp	w11, w13                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0bf8:   b.ne	0x0000ffff984f1198  // b.any
 ;; B59: #	out( B111 B60 ) <- in( B58 )  Freq: 12.7879
  0x0000ffff984f0bfc:   ldr	x11, [sp]                   ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0c00:   str	x11, [sp]
  0x0000ffff984f0c04:   mov	x11, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0c08:   movk	x11, #0x3380
  0x0000ffff984f0c0c:   cmp	w10, w11                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0c10:   b.ne	0x0000ffff984f11f0  // b.any
 ;; B60: #	out( B93 B61 ) <- in( B59 )  Freq: 12.7879
  0x0000ffff984f0c14:   ldr	x29, [sp, #56]              ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0c18:   ldr	x12, [x28, #456]
  0x0000ffff984f0c1c:   ldr	x10, [x28, #472]
  0x0000ffff984f0c20:   add	x11, x12, #0x110
  0x0000ffff984f0c24:   cmp	x11, x10
  0x0000ffff984f0c28:   b.cs	0x0000ffff984f0ff0  // b.hs, b.nlast
 ;; B61: #	out( B62 ) <- in( B60 )  Freq: 12.7866
  0x0000ffff984f0c2c:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0c30:   orr	x10, xzr, #0x1
  0x0000ffff984f0c34:   str	x10, [x12]
  0x0000ffff984f0c38:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0c3c:   movz	x13, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0c40:   movk	x13, #0x20d8
  0x0000ffff984f0c44:   str	w13, [x12, #8]
  0x0000ffff984f0c48:   prfm	pstl1keep, [x11, #256]
 ;; 0x40
  0x0000ffff984f0c4c:   orr	w10, wzr, #0x40
  0x0000ffff984f0c50:   str	w10, [x12, #12]
  0x0000ffff984f0c54:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f0c58:   add	x10, x12, #0x10
 ;; 0x20
  0x0000ffff984f0c5c:   orr	x11, xzr, #0x20
 ;; zero_words {
  0x0000ffff984f0c60:   subs	x8, x11, #0x8
  0x0000ffff984f0c64:   b.cc	0x0000ffff984f0c6c  // b.lo, b.ul, b.last
  0x0000ffff984f0c68:   bl	0x0000ffff984f1778          ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f0c6c:   tbz	w11, #2, 0x0000ffff984f0c78
  0x0000ffff984f0c70:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0c74:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0c78:   tbz	w11, #1, 0x0000ffff984f0c80
  0x0000ffff984f0c7c:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0c80:   tbz	w11, #0, 0x0000ffff984f0c88
  0x0000ffff984f0c84:   str	xzr, [x10]
 ;; } zero_words
 ;; B62: #	out( B95 B63 ) <- in( B94 B61 )  Freq: 12.7879
  0x0000ffff984f0c88:   dmb	ishst
  0x0000ffff984f0c8c:   str	x12, [sp, #56]
  0x0000ffff984f0c90:   add	x10, x12, #0x10
  0x0000ffff984f0c94:   ldr	x0, [x28, #456]
  0x0000ffff984f0c98:   ldr	x11, [x28, #472]
  0x0000ffff984f0c9c:   add	x12, x0, #0x18
  0x0000ffff984f0ca0:   ldr	x13, [x29, #16]
  0x0000ffff984f0ca4:   tbnz	w13, #12, 0x0000ffff984f1620;   {other}
  0x0000ffff984f0ca8:   lsr	x13, x13, #16
  0x0000ffff984f0cac:   add	x13, x13, #0x10
  0x0000ffff984f0cb0:   ld1w	{z16.s}, p7/z, [x13]
  0x0000ffff984f0cb4:   ldr	x14, [sp]
  0x0000ffff984f0cb8:   ldr	x13, [x14, #16]
  0x0000ffff984f0cbc:   tbnz	w13, #12, 0x0000ffff984f1654;   {other}
  0x0000ffff984f0cc0:   lsr	x13, x13, #16
  0x0000ffff984f0cc4:   add	x13, x13, #0x10
  0x0000ffff984f0cc8:   ld1w	{z17.s}, p7/z, [x13]
  0x0000ffff984f0ccc:   fadd	z16.s, z17.s, z16.s
  0x0000ffff984f0cd0:   st1w	{z16.s}, p7, [x10]
  0x0000ffff984f0cd4:   cmp	x12, x11
  0x0000ffff984f0cd8:   b.cs	0x0000ffff984f101c  // b.hs, b.nlast
 ;; B63: #	out( B64 ) <- in( B62 )  Freq: 12.7866
  0x0000ffff984f0cdc:   str	x12, [x28, #456]
 ;; 0x1
  0x0000ffff984f0ce0:   orr	x10, xzr, #0x1
  0x0000ffff984f0ce4:   str	x10, [x0]
  0x0000ffff984f0ce8:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0cec:   movk	x10, #0x3380
  0x0000ffff984f0cf0:   str	w10, [x0, #8]
  0x0000ffff984f0cf4:   prfm	pstl1keep, [x12, #192]
  0x0000ffff984f0cf8:   str	wzr, [x0, #12]
 ;; B64: #	out( B30 ) <- in( B96 B63 )  Freq: 12.7879
  0x0000ffff984f0cfc:   ldr	x11, [sp, #56]
  0x0000ffff984f0d00:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f0d04:   orr	x10, x10, x11, lsl #16
  0x0000ffff984f0d08:   str	x10, [x0, #16]
  0x0000ffff984f0d0c:   str	x0, [sp]
  0x0000ffff984f0d10:   b	0x0000ffff984f0814
 ;; B65: #	out( B108 B66 ) <- in( B17 )  Freq: 12.7879
  0x0000ffff984f0d14:   mov	x11, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0d18:   movk	x11, #0x3380
  0x0000ffff984f0d1c:   cmp	w10, w11                    ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0d20:   b.ne	0x0000ffff984f1174  // b.any
 ;; B66: #	out( B89 B67 ) <- in( B65 )  Freq: 12.7879
  0x0000ffff984f0d24:   ldr	x29, [sp]                   ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f0d28:   ldr	x12, [x28, #456]
  0x0000ffff984f0d2c:   ldr	x10, [x28, #472]
  0x0000ffff984f0d30:   add	x11, x12, #0x110
  0x0000ffff984f0d34:   cmp	x11, x10
  0x0000ffff984f0d38:   b.cs	0x0000ffff984f0f98  // b.hs, b.nlast
 ;; B67: #	out( B68 ) <- in( B66 )  Freq: 12.7866
  0x0000ffff984f0d3c:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0d40:   orr	x10, xzr, #0x1
  0x0000ffff984f0d44:   str	x10, [x12]
  0x0000ffff984f0d48:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0d4c:   movz	x13, #0x0, lsl #16          ;   {metadata({type array float})}
  0x0000ffff984f0d50:   movk	x13, #0x20d8
  0x0000ffff984f0d54:   str	w13, [x12, #8]
  0x0000ffff984f0d58:   prfm	pstl1keep, [x11, #256]
 ;; 0x40
  0x0000ffff984f0d5c:   orr	w10, wzr, #0x40
  0x0000ffff984f0d60:   str	w10, [x12, #12]
  0x0000ffff984f0d64:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f0d68:   add	x10, x12, #0x10
 ;; 0x20
  0x0000ffff984f0d6c:   orr	x11, xzr, #0x20
 ;; zero_words {
  0x0000ffff984f0d70:   subs	x8, x11, #0x8
  0x0000ffff984f0d74:   b.cc	0x0000ffff984f0d7c  // b.lo, b.ul, b.last
  0x0000ffff984f0d78:   bl	0x0000ffff984f1778          ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f0d7c:   tbz	w11, #2, 0x0000ffff984f0d88
  0x0000ffff984f0d80:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0d84:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0d88:   tbz	w11, #1, 0x0000ffff984f0d90
  0x0000ffff984f0d8c:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f0d90:   tbz	w11, #0, 0x0000ffff984f0d98
  0x0000ffff984f0d94:   str	xzr, [x10]
 ;; } zero_words
 ;; B68: #	out( B91 B69 ) <- in( B90 B67 )  Freq: 12.7879
  0x0000ffff984f0d98:   mov	z16.s, p7/m, s18
  0x0000ffff984f0d9c:   str	x12, [sp, #64]
  0x0000ffff984f0da0:   add	x10, x12, #0x10
  0x0000ffff984f0da4:   st1w	{z16.s}, p7, [x10]
  0x0000ffff984f0da8:   ldr	x0, [x28, #456]
  0x0000ffff984f0dac:   ldr	x10, [x28, #472]
  0x0000ffff984f0db0:   add	x11, x0, #0x18
  0x0000ffff984f0db4:   cmp	x11, x10
  0x0000ffff984f0db8:   b.cs	0x0000ffff984f0fcc  // b.hs, b.nlast
 ;; B69: #	out( B70 ) <- in( B68 )  Freq: 12.7866
  0x0000ffff984f0dbc:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f0dc0:   orr	x10, xzr, #0x1
  0x0000ffff984f0dc4:   str	x10, [x0]
  0x0000ffff984f0dc8:   mov	x10, #0x1050000             	// #17104896
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0dcc:   movk	x10, #0x3380
  0x0000ffff984f0dd0:   str	w10, [x0, #8]
  0x0000ffff984f0dd4:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f0dd8:   str	wzr, [x0, #12]
 ;; B70: #	out( B23 ) <- in( B92 B69 )  Freq: 12.7879
  0x0000ffff984f0ddc:   ldr	x11, [sp, #64]
  0x0000ffff984f0de0:   mov	w10, #0xe510                	// #58640
                                                            ;   {other}
  0x0000ffff984f0de4:   orr	x10, x10, x11, lsl #16
  0x0000ffff984f0de8:   str	x10, [x0, #16]
  0x0000ffff984f0dec:   str	x0, [sp, #56]
  0x0000ffff984f0df0:   b	0x0000ffff984f06fc          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; B71: #	out( N1689 ) <- in( B31 )  Freq: 0.995055
  0x0000ffff984f0df4:   ldp	x29, x30, [sp, #96]
  0x0000ffff984f0df8:   add	sp, sp, #0x70
  0x0000ffff984f0dfc:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff984f0e00:   cmp	sp, x8
  0x0000ffff984f0e04:   b.hi	0x0000ffff984f16f8  // b.pmore
  0x0000ffff984f0e08:   cntp	x8, p7, p7.b
  0x0000ffff984f0e0c:   decb	x8
  0x0000ffff984f0e10:   cbz	x8, 0x0000ffff984f0e20
 ;; Error: the preserved predicate register (p7) elements are not all true
  0x0000ffff984f0e14:   dcps1	#0xdeae
  0x0000ffff984f0e18:   .inst	0xafde9b00 ; undefined
  0x0000ffff984f0e1c:   udf	#65535
  0x0000ffff984f0e20:   ret
 ;; B72: #	out( B138 B73 ) <- in( B18 )  Freq: 0.0243953
  0x0000ffff984f0e24:   str	s18, [sp, #8]
 ;; 0xFC000020D8
  0x0000ffff984f0e28:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0e2c:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0e30:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x4
  0x0000ffff984f0e34:   orr	w2, wzr, #0x4
  0x0000ffff984f0e38:   bl	0x0000ffff984f1788          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
                                                            ; - jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
                                                            ; - jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
                                                            ; - jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f0e3c:   nop                                 ;   {other}
  0x0000ffff984f0e40:   movk	xzr, #0xdac
  0x0000ffff984f0e44:   movk	xzr, #0x300
  0x0000ffff984f0e48:   ptrue	p7.b
 ;; B73: #	out( B20 ) <- in( B72 )  Freq: 0.0243948
  0x0000ffff984f0e4c:   ldr	s18, [sp, #8]
  0x0000ffff984f0e50:   mov	x14, x0
  0x0000ffff984f0e54:   b	0x0000ffff984f06b0
 ;; B74: #	out( B137 B75 ) <- in( B20 )  Freq: 0.0243953
  0x0000ffff984f0e58:   str	x14, [sp, #64]
 ;; 0xFC01050F98
  0x0000ffff984f0e5c:   mov	x1, #0xf98                 	// #3992
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0e60:   movk	x1, #0x105, lsl #16
  0x0000ffff984f0e64:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f0e68:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
                                                            ; - jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
                                                            ; - jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
                                                            ; - jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f0e6c:   nop                                 ;   {other}
  0x0000ffff984f0e70:   movk	xzr, #0xddc
  0x0000ffff984f0e74:   movk	xzr, #0x400
  0x0000ffff984f0e78:   ptrue	p7.b
 ;; B75: #	out( B22 ) <- in( B74 )  Freq: 0.0243948
  0x0000ffff984f0e7c:   mov	x12, x0
  0x0000ffff984f0e80:   ldr	x14, [sp, #64]
  0x0000ffff984f0e84:   b	0x0000ffff984f06ec
 ;; B76: #	out( B135 B77 ) <- in( B25 )  Freq: 0.0243953
 ;; 0xFC000020D8
  0x0000ffff984f0e88:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0e8c:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0e90:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x4
  0x0000ffff984f0e94:   orr	w2, wzr, #0x4
  0x0000ffff984f0e98:   bl	0x0000ffff984f1788          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f0e9c:   nop                                 ;   {other}
  0x0000ffff984f0ea0:   movk	xzr, #0xe0c
  0x0000ffff984f0ea4:   movk	xzr, #0x500
  0x0000ffff984f0ea8:   ptrue	p7.b
 ;; B77: #	out( B27 ) <- in( B76 )  Freq: 0.0243948
  0x0000ffff984f0eac:   mov	x12, x0
  0x0000ffff984f0eb0:   b	0x0000ffff984f0794
 ;; B78: #	out( B134 B79 ) <- in( B27 )  Freq: 0.0243953
 ;; 0xFC01050F98
  0x0000ffff984f0eb4:   mov	x1, #0xf98                 	// #3992
                                                            ;   {metadata('jdk/incubator/vector/Float128Vector')}
  0x0000ffff984f0eb8:   movk	x1, #0x105, lsl #16
  0x0000ffff984f0ebc:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f0ec0:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f0ec4:   nop                                 ;   {other}
  0x0000ffff984f0ec8:   movk	xzr, #0xe34
  0x0000ffff984f0ecc:   movk	xzr, #0x600
  0x0000ffff984f0ed0:   ptrue	p7.b
 ;; B79: #	out( B29 ) <- in( B78 )  Freq: 0.0243948
  0x0000ffff984f0ed4:   mov	x13, x0
  0x0000ffff984f0ed8:   b	0x0000ffff984f0800
 ;; B80: #	out( B132 B81 ) <- in( B45 )  Freq: 0.0243953
  0x0000ffff984f0edc:   str	s18, [sp, #8]               ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; 0xFC000020D8
  0x0000ffff984f0ee0:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0ee4:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0ee8:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x4
  0x0000ffff984f0eec:   orr	w2, wzr, #0x4
  0x0000ffff984f0ef0:   bl	0x0000ffff984f1788          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f0ef4:   nop                                 ;   {other}
  0x0000ffff984f0ef8:   movk	xzr, #0xe64
  0x0000ffff984f0efc:   movk	xzr, #0x700
  0x0000ffff984f0f00:   ptrue	p7.b
 ;; B81: #	out( B47 ) <- in( B80 )  Freq: 0.0243948
  0x0000ffff984f0f04:   ldr	s18, [sp, #8]
  0x0000ffff984f0f08:   mov	x15, x0
  0x0000ffff984f0f0c:   b	0x0000ffff984f0a40          ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B82: #	out( B130 B83 ) <- in( B34 )  Freq: 0.00867564
  0x0000ffff984f0f10:   mov	x1, x10
  0x0000ffff984f0f14:   bl	0x0000ffff984f1738          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokevirtual makeDummyVector {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {optimized virtual_call}
  0x0000ffff984f0f18:   nop                                 ;   {other}
  0x0000ffff984f0f1c:   movk	xzr, #0xe88
  0x0000ffff984f0f20:   movk	xzr, #0x800
  0x0000ffff984f0f24:   ptrue	p7.b
 ;; B83: #	out( B114 B84 ) <- in( B82 )  Freq: 0.00867547
  0x0000ffff984f0f28:   cbz	x0, 0x0000ffff984f1270
 ;; B84: #	out( B35 ) <- in( B83 )  Freq: 0.00867546
  0x0000ffff984f0f2c:   mov	x29, x0
  0x0000ffff984f0f30:   b	0x0000ffff984f0894
 ;; B85: #	out( B128 B86 ) <- in( B53 )  Freq: 0.00127902
  0x0000ffff984f0f34:   str	s18, [sp, #8]
 ;; 0xFC000020D8
  0x0000ffff984f0f38:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0f3c:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0f40:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x40
  0x0000ffff984f0f44:   orr	w2, wzr, #0x40
  0x0000ffff984f0f48:   bl	0x0000ffff984f1788          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f0f4c:   nop                                 ;   {other}
  0x0000ffff984f0f50:   movk	xzr, #0xebc
  0x0000ffff984f0f54:   movk	xzr, #0x900
  0x0000ffff984f0f58:   ptrue	p7.b
 ;; B86: #	out( B55 ) <- in( B85 )  Freq: 0.001279
  0x0000ffff984f0f5c:   mov	x12, x0
  0x0000ffff984f0f60:   ldr	s18, [sp, #8]
  0x0000ffff984f0f64:   b	0x0000ffff984f0b60
 ;; B87: #	out( B127 B88 ) <- in( B55 )  Freq: 0.00127902
  0x0000ffff984f0f68:   str	s18, [sp, #8]
 ;; 0xFC01053380
  0x0000ffff984f0f6c:   mov	x1, #0x3380                	// #13184
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0f70:   movk	x1, #0x105, lsl #16
  0x0000ffff984f0f74:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f0f78:   mov	x29, x14
  0x0000ffff984f0f7c:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f0f80:   nop                                 ;   {other}
  0x0000ffff984f0f84:   movk	xzr, #0xef0
  0x0000ffff984f0f88:   movk	xzr, #0xa00
  0x0000ffff984f0f8c:   ptrue	p7.b
 ;; B88: #	out( B57 ) <- in( B87 )  Freq: 0.001279
  0x0000ffff984f0f90:   ldr	s18, [sp, #8]
  0x0000ffff984f0f94:   b	0x0000ffff984f0bd4
 ;; B89: #	out( B125 B90 ) <- in( B66 )  Freq: 0.001279
  0x0000ffff984f0f98:   str	s18, [sp, #8]
 ;; 0xFC000020D8
  0x0000ffff984f0f9c:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0fa0:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0fa4:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x40
  0x0000ffff984f0fa8:   orr	w2, wzr, #0x40
  0x0000ffff984f0fac:   bl	0x0000ffff984f1788          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
                                                            ; - jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f0fb0:   nop                                 ;   {other}
  0x0000ffff984f0fb4:   movk	xzr, #0xf20
  0x0000ffff984f0fb8:   movk	xzr, #0xb00
  0x0000ffff984f0fbc:   ptrue	p7.b
 ;; B90: #	out( B68 ) <- in( B89 )  Freq: 0.00127897
  0x0000ffff984f0fc0:   mov	x12, x0
  0x0000ffff984f0fc4:   ldr	s18, [sp, #8]
  0x0000ffff984f0fc8:   b	0x0000ffff984f0d98
 ;; B91: #	out( B124 B92 ) <- in( B68 )  Freq: 0.001279
 ;; 0xFC01053380
  0x0000ffff984f0fcc:   mov	x1, #0x3380                	// #13184
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f0fd0:   movk	x1, #0x105, lsl #16
  0x0000ffff984f0fd4:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f0fd8:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop }
                                                            ;*invokestatic fromBitsCoerced {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
                                                            ; - jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
                                                            ; - jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f0fdc:   nop                                 ;   {other}
  0x0000ffff984f0fe0:   movk	xzr, #0xf4c
  0x0000ffff984f0fe4:   movk	xzr, #0xc00
  0x0000ffff984f0fe8:   ptrue	p7.b
 ;; B92: #	out( B70 ) <- in( B91 )  Freq: 0.00127897
  0x0000ffff984f0fec:   b	0x0000ffff984f0ddc
 ;; B93: #	out( B122 B94 ) <- in( B60 )  Freq: 0.001279
 ;; 0xFC000020D8
  0x0000ffff984f0ff0:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f0ff4:   movk	x1, #0x0, lsl #16
  0x0000ffff984f0ff8:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0x40
  0x0000ffff984f0ffc:   orr	w2, wzr, #0x40
  0x0000ffff984f1000:   bl	0x0000ffff984f1788          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f1004:   nop                                 ;   {other}
  0x0000ffff984f1008:   movk	xzr, #0xf74
  0x0000ffff984f100c:   movk	xzr, #0xd00
  0x0000ffff984f1010:   ptrue	p7.b
 ;; B94: #	out( B62 ) <- in( B93 )  Freq: 0.00127897
  0x0000ffff984f1014:   mov	x12, x0
  0x0000ffff984f1018:   b	0x0000ffff984f0c88
 ;; B95: #	out( B121 B96 ) <- in( B62 )  Freq: 0.001279
 ;; 0xFC01053380
  0x0000ffff984f101c:   mov	x1, #0x3380                	// #13184
                                                            ;   {metadata('jdk/incubator/vector/FloatMaxVector')}
  0x0000ffff984f1020:   movk	x1, #0x105, lsl #16
  0x0000ffff984f1024:   movk	x1, #0xfc, lsl #32
  0x0000ffff984f1028:   bl	0x0000ffff984f1768          ; ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call _new_instance_Java}
  0x0000ffff984f102c:   nop                                 ;   {other}
  0x0000ffff984f1030:   movk	xzr, #0xf9c
  0x0000ffff984f1034:   movk	xzr, #0xe00
  0x0000ffff984f1038:   ptrue	p7.b
 ;; B96: #	out( B64 ) <- in( B95 )  Freq: 0.00127897
  0x0000ffff984f103c:   b	0x0000ffff984f0cfc
 ;; B97: #	out( B4 ) <- in( B1 )  Freq: 0.000999987
  0x0000ffff984f1040:   mov	x10, xzr
  0x0000ffff984f1044:   b	0x0000ffff984f058c
 ;; B98: #	out( B7 ) <- in( B4 )  Freq: 0.000999986
  0x0000ffff984f1048:   mov	x13, xzr
  0x0000ffff984f104c:   b	0x0000ffff984f05a8
 ;; B99: #	out( B10 ) <- in( B7 )  Freq: 0.000999985
  0x0000ffff984f1050:   mov	x21, xzr
  0x0000ffff984f1054:   b	0x0000ffff984f05cc          ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B100: #	out( N1689 ) <- in( B33 )  Freq: 0.000260116
 ;; 0xFFFFFFE4
  0x0000ffff984f1058:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f105c:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1060:   nop                                 ;   {other}
  0x0000ffff984f1064:   movk	xzr, #0xfd0
  0x0000ffff984f1068:   movk	xzr, #0xf00                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f106c:   dcps1	#0xdeae
  0x0000ffff984f1070:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1074:   udf	#65535                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
 ;; B101: #	out( N1689 ) <- in( B37 )  Freq: 0.000260111
 ;; 0xFFFFFFE4
  0x0000ffff984f1078:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f107c:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1080:   nop                                 ;   {other}
  0x0000ffff984f1084:   movk	xzr, #0xff0
  0x0000ffff984f1088:   movk	xzr, #0x1000                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f108c:   dcps1	#0xdeae
  0x0000ffff984f1090:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1094:   udf	#65535                      ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
 ;; B102: #	out( N1689 ) <- in( B38 )  Freq: 0.00026011
 ;; 0xFFFFFFF6
  0x0000ffff984f1098:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f109c:   bl	0x0000ffff984f1798          ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f10a0:   nop                                 ;   {other}
  0x0000ffff984f10a4:   movk	xzr, #0x1010
  0x0000ffff984f10a8:   movk	xzr, #0x1100                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f10ac:   dcps1	#0xdeae
  0x0000ffff984f10b0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f10b4:   udf	#65535                      ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B103: #	out( N1689 ) <- in( B32 )  Freq: 0.000256708
 ;; 0xFFFFFFCC
  0x0000ffff984f10b8:   mov	w1, #0xffffffcc            	// #-52
  0x0000ffff984f10bc:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::checkIndex@3 (line 365)
                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f10c0:   nop                                 ;   {other}
  0x0000ffff984f10c4:   movk	xzr, #0x1030
  0x0000ffff984f10c8:   movk	xzr, #0x1200                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f10cc:   dcps1	#0xdeae
  0x0000ffff984f10d0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f10d4:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B104: #	out( N1689 ) <- in( B35 )  Freq: 0.000256707
 ;; 0xFFFFFFDE
  0x0000ffff984f10d8:   mov	w1, #0xffffffde            	// #-34
  0x0000ffff984f10dc:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f10e0:   nop                                 ;   {other}
  0x0000ffff984f10e4:   movk	xzr, #0x1050
  0x0000ffff984f10e8:   movk	xzr, #0x1300                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f10ec:   dcps1	#0xdeae
  0x0000ffff984f10f0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f10f4:   udf	#65535
 ;; B105: #	out( N1689 ) <- in( B24 )  Freq: 0.000121956
 ;; 0xFFFFFF45
  0x0000ffff984f10f8:   mov	w1, #0xffffff45            	// #-187
  0x0000ffff984f10fc:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1100:   nop                                 ;   {other}
  0x0000ffff984f1104:   movk	xzr, #0x1070
  0x0000ffff984f1108:   movk	xzr, #0x1400
 ;; uncommon trap returned which should never happen
  0x0000ffff984f110c:   dcps1	#0xdeae
  0x0000ffff984f1110:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1114:   udf	#65535
 ;; B106: #	out( N1689 ) <- in( B44 )  Freq: 0.000121956
  0x0000ffff984f1118:   str	s18, [sp, #48]              ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f111c:   eor	x10, x11, #0xfc00000000     ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f1120:   ldr	x10, [x10, #120]            ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; 0xFFFFFF45
  0x0000ffff984f1124:   mov	w1, #0xffffff45            	// #-187
                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f1128:   ldr	x29, [x10]
  0x0000ffff984f112c:   tbnz	w29, #12, 0x0000ffff984f16a0;   {other}
  0x0000ffff984f1130:   lsr	x29, x29, #16
  0x0000ffff984f1134:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1138:   nop                                 ;   {other}
  0x0000ffff984f113c:   movk	xzr, #0x10a8
  0x0000ffff984f1140:   movk	xzr, #0x1500                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1144:   dcps1	#0xdeae
  0x0000ffff984f1148:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f114c:   udf	#65535
 ;; B107: #	out( N1689 ) <- in( B50 )  Freq: 1.27882e-05
  0x0000ffff984f1150:   str	s18, [sp, #8]               ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; 0xFFFFFFC6
  0x0000ffff984f1154:   mov	w1, #0xffffffc6            	// #-58
  0x0000ffff984f1158:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f115c:   nop                                 ;   {other}
  0x0000ffff984f1160:   movk	xzr, #0x10cc
  0x0000ffff984f1164:   movk	xzr, #0x1600                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1168:   dcps1	#0xdeae
  0x0000ffff984f116c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1170:   udf	#65535
 ;; B108: #	out( N1689 ) <- in( B65 )  Freq: 1.27879e-05
  0x0000ffff984f1174:   str	s18, [sp, #8]
 ;; 0xFFFFFFC6
  0x0000ffff984f1178:   mov	w1, #0xffffffc6            	// #-58
  0x0000ffff984f117c:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop }
                                                            ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1180:   nop                                 ;   {other}
  0x0000ffff984f1184:   movk	xzr, #0x10f0
  0x0000ffff984f1188:   movk	xzr, #0x1700                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f118c:   dcps1	#0xdeae
  0x0000ffff984f1190:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1194:   udf	#65535
 ;; B109: #	out( N1689 ) <- in( B58 )  Freq: 1.27879e-05
 ;; 0xFFFFFFC6
  0x0000ffff984f1198:   mov	w1, #0xffffffc6            	// #-58
  0x0000ffff984f119c:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*invokevirtual lanewise {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f11a0:   nop                                 ;   {other}
  0x0000ffff984f11a4:   movk	xzr, #0x1110
  0x0000ffff984f11a8:   movk	xzr, #0x1800
 ;; uncommon trap returned which should never happen
  0x0000ffff984f11ac:   dcps1	#0xdeae
  0x0000ffff984f11b0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f11b4:   udf	#65535
 ;; B110: #	out( N1689 ) <- in( B52 )  Freq: 6.39406e-06
  0x0000ffff984f11b8:   str	s18, [sp, #48]              ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f11bc:   eor	x10, x11, #0xfc00000000     ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f11c0:   ldr	x10, [x10, #120]            ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; 0xFFFFFF45
  0x0000ffff984f11c4:   mov	w1, #0xffffff45            	// #-187
                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f11c8:   ldr	x29, [x10]
  0x0000ffff984f11cc:   tbnz	w29, #12, 0x0000ffff984f16cc;   {other}
  0x0000ffff984f11d0:   lsr	x29, x29, #16
  0x0000ffff984f11d4:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f11d8:   nop                                 ;   {other}
  0x0000ffff984f11dc:   movk	xzr, #0x1148
  0x0000ffff984f11e0:   movk	xzr, #0x1900                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f11e4:   dcps1	#0xdeae
  0x0000ffff984f11e8:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f11ec:   udf	#65535
 ;; B111: #	out( N1689 ) <- in( B59 )  Freq: 6.39393e-06
 ;; 0xFFFFFF45
  0x0000ffff984f11f0:   mov	w1, #0xffffff45            	// #-187
  0x0000ffff984f11f4:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*if_acmpne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
                                                            ; - jdk.incubator.vector.AbstractVector::check@2 (line 136)
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f11f8:   nop                                 ;   {other}
  0x0000ffff984f11fc:   movk	xzr, #0x1168
  0x0000ffff984f1200:   movk	xzr, #0x1a00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1204:   dcps1	#0xdeae
  0x0000ffff984f1208:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f120c:   udf	#65535
 ;; B112: #	out( N1689 ) <- in( B13 B11 B12 )  Freq: 3.02654e-06
 ;; merged str pair
  0x0000ffff984f1210:   stp	x10, x13, [sp, #16]
  0x0000ffff984f1214:   str	x19, [sp, #8]               ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; 0xFFFFFFBE
  0x0000ffff984f1218:   mov	w1, #0xffffffbe            	// #-66
  0x0000ffff984f121c:   mov	x29, x21
  0x0000ffff984f1220:   str	w20, [sp]
  0x0000ffff984f1224:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1228:   nop                                 ;   {other}
  0x0000ffff984f122c:   movk	xzr, #0x1198
  0x0000ffff984f1230:   movk	xzr, #0x1b00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1234:   dcps1	#0xdeae
  0x0000ffff984f1238:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f123c:   udf	#65535
 ;; B113: #	out( N1689 ) <- in( B2 B5 B8 )  Freq: 2.997e-06
 ;; merged str pair
  0x0000ffff984f1240:   stp	x22, x23, [sp, #16]
  0x0000ffff984f1244:   str	x19, [sp, #8]               ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; 0xFFFFFF8D
  0x0000ffff984f1248:   mov	w1, #0xffffff8d            	// #-115
  0x0000ffff984f124c:   mov	x29, x21
  0x0000ffff984f1250:   str	w20, [sp]
  0x0000ffff984f1254:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1258:   nop                                 ;   {other}
  0x0000ffff984f125c:   movk	xzr, #0x11c8
  0x0000ffff984f1260:   movk	xzr, #0x1c00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1264:   dcps1	#0xdeae
  0x0000ffff984f1268:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f126c:   udf	#65535
 ;; B114: #	out( N1689 ) <- in( B83 )  Freq: 8.79067e-09
 ;; 0xFFFFFFF4
  0x0000ffff984f1270:   mov	w1, #0xfffffff4            	// #-12
  0x0000ffff984f1274:   ldr	x29, [sp]
  0x0000ffff984f1278:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f127c:   nop                                 ;   {other}
  0x0000ffff984f1280:   movk	xzr, #0x11ec
  0x0000ffff984f1284:   movk	xzr, #0x1d00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1288:   dcps1	#0xdeae
  0x0000ffff984f128c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1290:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; B115: #	out( N1689 ) <- in( B40 )  Freq: 1e-35
 ;; 0xFFFFFFDE
  0x0000ffff984f1294:   mov	w1, #0xffffffde            	// #-34
  0x0000ffff984f1298:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f129c:   nop                                 ;   {other}
  0x0000ffff984f12a0:   movk	xzr, #0x120c
  0x0000ffff984f12a4:   movk	xzr, #0x1e00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f12a8:   dcps1	#0xdeae
  0x0000ffff984f12ac:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f12b0:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; B116: #	out( N1689 ) <- in( B39 )  Freq: 0.00026011
 ;; 0xFFFFFFF4
  0x0000ffff984f12b4:   mov	w1, #0xfffffff4            	// #-12
  0x0000ffff984f12b8:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f12bc:   nop                                 ;   {other}
  0x0000ffff984f12c0:   movk	xzr, #0x122c
  0x0000ffff984f12c4:   movk	xzr, #0x1f00                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f12c8:   dcps1	#0xdeae
  0x0000ffff984f12cc:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f12d0:   udf	#65535                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B117: #	out( N1689 ) <- in( B41 )  Freq: 0.00026011
 ;; 0xFFFFFFF6
  0x0000ffff984f12d4:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f12d8:   bl	0x0000ffff984f1798          ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f12dc:   nop                                 ;   {other}
  0x0000ffff984f12e0:   movk	xzr, #0x124c
  0x0000ffff984f12e4:   movk	xzr, #0x2000                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f12e8:   dcps1	#0xdeae
  0x0000ffff984f12ec:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f12f0:   udf	#65535                      ;*invokevirtual check {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B118: #	out( N1689 ) <- in( B43 )  Freq: 0.000247152
 ;; 0xFFFFFF5E
  0x0000ffff984f12f4:   mov	w1, #0xffffff5e            	// #-162
  0x0000ffff984f12f8:   ldr	x29, [sp]
  0x0000ffff984f12fc:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop }
                                                            ;*invokevirtual check {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1300:   nop                                 ;   {other}
  0x0000ffff984f1304:   movk	xzr, #0x1270
  0x0000ffff984f1308:   movk	xzr, #0x2100                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f130c:   dcps1	#0xdeae
  0x0000ffff984f1310:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1314:   udf	#65535                      ;*invokevirtual check {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B119: #	out( N1689 ) <- in( B51 )  Freq: 1.2958e-05
 ;; 0xFFFFFF5E
  0x0000ffff984f1318:   mov	w1, #0xffffff5e            	// #-162
  0x0000ffff984f131c:   ldr	x29, [sp]
  0x0000ffff984f1320:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop }
                                                            ;*invokevirtual check {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1324:   nop                                 ;   {other}
  0x0000ffff984f1328:   movk	xzr, #0x1294
  0x0000ffff984f132c:   movk	xzr, #0x2200                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1330:   dcps1	#0xdeae
  0x0000ffff984f1334:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1338:   udf	#65535
 ;; B120: #	out( N1689 ) <- in( B10 )  Freq: 1.01328e-06
 ;; merged str pair
  0x0000ffff984f133c:   stp	x10, x13, [sp, #16]
  0x0000ffff984f1340:   str	x19, [sp, #8]               ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
 ;; 0xFFFFFF76
  0x0000ffff984f1344:   mov	w1, #0xffffff76            	// #-138
  0x0000ffff984f1348:   mov	x29, x21
  0x0000ffff984f134c:   str	w20, [sp]
  0x0000ffff984f1350:   bl	0x0000ffff984f1798          ; ImmutableOopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f1354:   nop                                 ;   {other}
  0x0000ffff984f1358:   movk	xzr, #0x12c4
  0x0000ffff984f135c:   movk	xzr, #0x2300                ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f1360:   dcps1	#0xdeae
  0x0000ffff984f1364:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f1368:   udf	#65535
 ;; B121: #	out( B123 ) <- in( B95 )  Freq: 1.279e-08
  0x0000ffff984f136c:   b	0x0000ffff984f1370
 ;; B122: #	out( B123 ) <- in( B93 )  Freq: 1.279e-08
 ;; B123: #	out( B142 ) <- in( B122 B121 )  Freq: 2.55799e-08
  0x0000ffff984f1370:   mov	x1, x0
  0x0000ffff984f1374:   b	0x0000ffff984f13bc
 ;; B124: #	out( B126 ) <- in( B91 )  Freq: 1.279e-08
  0x0000ffff984f1378:   b	0x0000ffff984f137c
 ;; B125: #	out( B126 ) <- in( B89 )  Freq: 1.279e-08
 ;; B126: #	out( B142 ) <- in( B125 B124 )  Freq: 2.558e-08
  0x0000ffff984f137c:   mov	x1, x0
  0x0000ffff984f1380:   b	0x0000ffff984f13bc
 ;; B127: #	out( B129 ) <- in( B87 )  Freq: 1.27902e-08
  0x0000ffff984f1384:   b	0x0000ffff984f1388
 ;; B128: #	out( B129 ) <- in( B85 )  Freq: 1.27902e-08
 ;; B129: #	out( B142 ) <- in( B128 B127 )  Freq: 2.55805e-08
  0x0000ffff984f1388:   mov	x1, x0
  0x0000ffff984f138c:   b	0x0000ffff984f13bc          ;*invokevirtual makeDummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
                                                            ; - jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B130: #	out( B141 ) <- in( B82 )  Freq: 8.67564e-08
  0x0000ffff984f1390:   b	0x0000ffff984f13b8
 ;; B131: #	out( B133 ) <- in( B48 )  Freq: 2.43953e-07
  0x0000ffff984f1394:   b	0x0000ffff984f1398
 ;; B132: #	out( B133 ) <- in( B80 )  Freq: 2.43953e-07
 ;; B133: #	out( B142 ) <- in( B132 B131 )  Freq: 4.87906e-07
  0x0000ffff984f1398:   mov	x1, x0
  0x0000ffff984f139c:   b	0x0000ffff984f13bc
 ;; B134: #	out( B136 ) <- in( B78 )  Freq: 2.43953e-07
  0x0000ffff984f13a0:   b	0x0000ffff984f13a4
 ;; B135: #	out( B136 ) <- in( B76 )  Freq: 2.43953e-07
 ;; B136: #	out( B142 ) <- in( B135 B134 )  Freq: 4.87906e-07
  0x0000ffff984f13a4:   mov	x1, x0
  0x0000ffff984f13a8:   b	0x0000ffff984f13bc
 ;; B137: #	out( B139 ) <- in( B74 )  Freq: 2.43953e-07
  0x0000ffff984f13ac:   b	0x0000ffff984f13b0
 ;; B138: #	out( B139 ) <- in( B72 )  Freq: 2.43953e-07
 ;; B139: #	out( B142 ) <- in( B138 B137 )  Freq: 4.87906e-07
  0x0000ffff984f13b0:   mov	x1, x0
  0x0000ffff984f13b4:   b	0x0000ffff984f13bc          ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
 ;; B140: #	out( B141 ) <- in( B36 )  Freq: 0.00256707
 ;; B141: #	out( B142 ) <- in( B130 B140 )  Freq: 0.00256716
  0x0000ffff984f13b8:   mov	x1, x0                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; B142: #	out( N1689 ) <- in( B141 B129 B133 B126 B139 B123 B136 )  Freq: 0.0025687
  0x0000ffff984f13bc:   ldp	x29, x30, [sp, #96]
  0x0000ffff984f13c0:   add	sp, sp, #0x70
  0x0000ffff984f13c4:   adrp	x8, 0x0000ffff97d65000      ;   {runtime_call _rethrow_Java}
  0x0000ffff984f13c8:   add	x8, x8, #0x140
  0x0000ffff984f13cc:   br	x8                          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; ZLoadBarrierStubC2
  0x0000ffff984f13d0:   stp	x10, x11, [sp, #-32]!
  0x0000ffff984f13d4:   stp	x12, xzr, [sp, #16]
  0x0000ffff984f13d8:   sub	x1, x12, #0x0
  0x0000ffff984f13dc:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f13e0:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f13e4:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f13e8:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f13ec:   blr	x8
  0x0000ffff984f13f0:   mov	x29, x0
  0x0000ffff984f13f4:   ptrue	p7.b
  0x0000ffff984f13f8:   ldp	x12, xzr, [sp, #16]
  0x0000ffff984f13fc:   ldp	x10, x11, [sp], #32
  0x0000ffff984f1400:   b	0x0000ffff984f0720
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1404:   stp	x10, x11, [sp, #-32]!
  0x0000ffff984f1408:   stp	x13, x14, [sp, #16]
  0x0000ffff984f140c:   add	x1, x14, #0x10
  0x0000ffff984f1410:   mov	x0, x12
 ;; 0xFFFFAF670784
  0x0000ffff984f1414:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1418:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f141c:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f1420:   blr	x8
  0x0000ffff984f1424:   mov	x12, x0
  0x0000ffff984f1428:   ptrue	p7.b
  0x0000ffff984f142c:   ldp	x13, x14, [sp, #16]
  0x0000ffff984f1430:   ldp	x10, x11, [sp], #32
  0x0000ffff984f1434:   b	0x0000ffff984f07b8
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1438:   stp	x10, x11, [sp, #-32]!
  0x0000ffff984f143c:   stp	x13, xzr, [sp, #16]
  0x0000ffff984f1440:   str	q16, [sp, #-16]!
  0x0000ffff984f1444:   add	x1, x29, #0x10
  0x0000ffff984f1448:   mov	x0, x12
 ;; 0xFFFFAF670784
  0x0000ffff984f144c:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1450:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1454:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f1458:   blr	x8
  0x0000ffff984f145c:   mov	x12, x0
  0x0000ffff984f1460:   ldr	q16, [sp], #16
  0x0000ffff984f1464:   ptrue	p7.b
  0x0000ffff984f1468:   ldp	x13, xzr, [sp, #16]
  0x0000ffff984f146c:   ldp	x10, x11, [sp], #32
  0x0000ffff984f1470:   b	0x0000ffff984f07c8
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1474:   stp	x10, xzr, [sp, #-16]!
  0x0000ffff984f1478:   add	x1, x10, #0x68
  0x0000ffff984f147c:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f1480:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1484:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1488:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f148c:   blr	x8
  0x0000ffff984f1490:   mov	x29, x0
  0x0000ffff984f1494:   ptrue	p7.b
  0x0000ffff984f1498:   ldp	x10, xzr, [sp], #16
  0x0000ffff984f149c:   b	0x0000ffff984f0890
 ;; ZLoadBarrierStubC2
  0x0000ffff984f14a0:   stp	x0, x12, [sp, #-16]!
  0x0000ffff984f14a4:   add	x1, x12, #0x10
  0x0000ffff984f14a8:   mov	x0, x10
 ;; 0xFFFFAF670784
  0x0000ffff984f14ac:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f14b0:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f14b4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f14b8:   blr	x8
  0x0000ffff984f14bc:   mov	x10, x0
  0x0000ffff984f14c0:   ptrue	p7.b
  0x0000ffff984f14c4:   ldp	x0, x12, [sp], #16
  0x0000ffff984f14c8:   b	0x0000ffff984f0998
 ;; ZLoadBarrierStubC2
  0x0000ffff984f14cc:   stp	x0, x10, [sp, #-16]!
  0x0000ffff984f14d0:   add	x1, x10, #0x10
  0x0000ffff984f14d4:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f14d8:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f14dc:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f14e0:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f14e4:   blr	x8
  0x0000ffff984f14e8:   mov	x29, x0
  0x0000ffff984f14ec:   ptrue	p7.b
  0x0000ffff984f14f0:   ldp	x0, x10, [sp], #16
  0x0000ffff984f14f4:   b	0x0000ffff984f09a8
 ;; ZLoadBarrierStubC2
  0x0000ffff984f14f8:   stp	x10, x11, [sp, #-48]!
  0x0000ffff984f14fc:   stp	x13, x14, [sp, #16]
  0x0000ffff984f1500:   stp	x15, xzr, [sp, #32]
  0x0000ffff984f1504:   str	d18, [sp, #-16]!
  0x0000ffff984f1508:   add	x1, x14, #0x10
  0x0000ffff984f150c:   mov	x0, x12
 ;; 0xFFFFAF670784
  0x0000ffff984f1510:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1514:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1518:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f151c:   blr	x8
  0x0000ffff984f1520:   mov	x12, x0
  0x0000ffff984f1524:   ldr	d18, [sp], #16
  0x0000ffff984f1528:   ptrue	p7.b
  0x0000ffff984f152c:   ldp	x13, x14, [sp, #16]
  0x0000ffff984f1530:   ldp	x15, xzr, [sp, #32]
  0x0000ffff984f1534:   ldp	x10, x11, [sp], #48
  0x0000ffff984f1538:   b	0x0000ffff984f0a5c
 ;; ZLoadBarrierStubC2
  0x0000ffff984f153c:   stp	x10, x11, [sp, #-48]!
  0x0000ffff984f1540:   stp	x13, x14, [sp, #16]
  0x0000ffff984f1544:   stp	x15, xzr, [sp, #32]
  0x0000ffff984f1548:   str	d18, [sp, #-16]!
  0x0000ffff984f154c:   str	q16, [sp, #-16]!
  0x0000ffff984f1550:   add	x1, x14, #0x10
  0x0000ffff984f1554:   mov	x0, x12
 ;; 0xFFFFAF670784
  0x0000ffff984f1558:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f155c:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1560:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f1564:   blr	x8
  0x0000ffff984f1568:   mov	x12, x0
  0x0000ffff984f156c:   ldr	q16, [sp], #16
  0x0000ffff984f1570:   ldr	d18, [sp], #16
  0x0000ffff984f1574:   ptrue	p7.b
  0x0000ffff984f1578:   ldp	x13, x14, [sp, #16]
  0x0000ffff984f157c:   ldp	x15, xzr, [sp, #32]
  0x0000ffff984f1580:   ldp	x10, x11, [sp], #48
  0x0000ffff984f1584:   b	0x0000ffff984f0a70
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1588:   stp	x0, x10, [sp, #-48]!
  0x0000ffff984f158c:   stp	x11, x12, [sp, #16]
  0x0000ffff984f1590:   stp	x14, xzr, [sp, #32]
  0x0000ffff984f1594:   str	d18, [sp, #-16]!
  0x0000ffff984f1598:   add	x1, x14, #0x10
  0x0000ffff984f159c:   mov	x0, x13
 ;; 0xFFFFAF670784
  0x0000ffff984f15a0:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f15a4:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f15a8:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f15ac:   blr	x8
  0x0000ffff984f15b0:   mov	x13, x0
  0x0000ffff984f15b4:   ldr	d18, [sp], #16
  0x0000ffff984f15b8:   ptrue	p7.b
  0x0000ffff984f15bc:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f15c0:   ldp	x14, xzr, [sp, #32]
  0x0000ffff984f15c4:   ldp	x0, x10, [sp], #48
  0x0000ffff984f15c8:   b	0x0000ffff984f0b84
 ;; ZLoadBarrierStubC2
  0x0000ffff984f15cc:   stp	x0, x10, [sp, #-48]!
  0x0000ffff984f15d0:   stp	x11, x12, [sp, #16]
  0x0000ffff984f15d4:   stp	x14, xzr, [sp, #32]
  0x0000ffff984f15d8:   str	d18, [sp, #-16]!
  0x0000ffff984f15dc:   sub	sp, sp, #0x100
  0x0000ffff984f15e0:   str	z16, [sp]
  0x0000ffff984f15e4:   add	x1, x14, #0x10
  0x0000ffff984f15e8:   mov	x0, x13
 ;; 0xFFFFAF670784
  0x0000ffff984f15ec:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f15f0:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f15f4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f15f8:   blr	x8
  0x0000ffff984f15fc:   mov	x13, x0
  0x0000ffff984f1600:   ldr	z16, [sp]
  0x0000ffff984f1604:   add	sp, sp, #0x100
  0x0000ffff984f1608:   ldr	d18, [sp], #16
  0x0000ffff984f160c:   ptrue	p7.b
  0x0000ffff984f1610:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f1614:   ldp	x14, xzr, [sp, #32]
  0x0000ffff984f1618:   ldp	x0, x10, [sp], #48
  0x0000ffff984f161c:   b	0x0000ffff984f0b9c
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1620:   stp	x0, x10, [sp, #-32]!
  0x0000ffff984f1624:   stp	x11, x12, [sp, #16]
  0x0000ffff984f1628:   add	x1, x29, #0x10
  0x0000ffff984f162c:   mov	x0, x13
 ;; 0xFFFFAF670784
  0x0000ffff984f1630:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1634:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1638:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f163c:   blr	x8
  0x0000ffff984f1640:   mov	x13, x0
  0x0000ffff984f1644:   ptrue	p7.b
  0x0000ffff984f1648:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f164c:   ldp	x0, x10, [sp], #32
  0x0000ffff984f1650:   b	0x0000ffff984f0cac
 ;; ZLoadBarrierStubC2
  0x0000ffff984f1654:   stp	x0, x10, [sp, #-48]!
  0x0000ffff984f1658:   stp	x11, x12, [sp, #16]
  0x0000ffff984f165c:   stp	x14, xzr, [sp, #32]
  0x0000ffff984f1660:   sub	sp, sp, #0x100
  0x0000ffff984f1664:   str	z16, [sp]
  0x0000ffff984f1668:   add	x1, x14, #0x10
  0x0000ffff984f166c:   mov	x0, x13
 ;; 0xFFFFAF670784
  0x0000ffff984f1670:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f1674:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f1678:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f167c:   blr	x8
  0x0000ffff984f1680:   mov	x13, x0
  0x0000ffff984f1684:   ldr	z16, [sp]
  0x0000ffff984f1688:   add	sp, sp, #0x100
  0x0000ffff984f168c:   ptrue	p7.b
  0x0000ffff984f1690:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f1694:   ldp	x14, xzr, [sp, #32]
  0x0000ffff984f1698:   ldp	x0, x10, [sp], #48
  0x0000ffff984f169c:   b	0x0000ffff984f0cc4
 ;; ZLoadBarrierStubC2
  0x0000ffff984f16a0:   stp	x1, x10, [sp, #-16]!
  0x0000ffff984f16a4:   sub	x1, x10, #0x0
  0x0000ffff984f16a8:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f16ac:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f16b0:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f16b4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f16b8:   blr	x8
  0x0000ffff984f16bc:   mov	x29, x0
  0x0000ffff984f16c0:   ptrue	p7.b
  0x0000ffff984f16c4:   ldp	x1, x10, [sp], #16
  0x0000ffff984f16c8:   b	0x0000ffff984f1134
 ;; ZLoadBarrierStubC2
  0x0000ffff984f16cc:   stp	x1, x10, [sp, #-16]!
  0x0000ffff984f16d0:   sub	x1, x10, #0x0
  0x0000ffff984f16d4:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f16d8:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f16dc:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f16e0:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f16e4:   blr	x8
  0x0000ffff984f16e8:   mov	x29, x0
  0x0000ffff984f16ec:   ptrue	p7.b
  0x0000ffff984f16f0:   ldp	x1, x10, [sp], #16
  0x0000ffff984f16f4:   b	0x0000ffff984f11d4
  0x0000ffff984f16f8:   adr	x8, 0x0000ffff984f0dfc      ;   {internal_word}
  0x0000ffff984f16fc:   str	x8, [x28, #1200]
  0x0000ffff984f1700:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff984f1704:   add	x8, x8, #0xac0
  0x0000ffff984f1708:   br	x8
 ;; 0xFFFF97C263C0
  0x0000ffff984f170c:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f1710:   movk	x8, #0x97c2, lsl #16
  0x0000ffff984f1714:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f1718:   blr	x8
  0x0000ffff984f171c:   b	0x0000ffff984f052c
  0x0000ffff984f1720:   udf	#58640                      ;   {other}
  0x0000ffff984f1724:   udf	#0
[Stub Code]
  0x0000ffff984f1728:   ldr	x8, 0x0000ffff984f1730      ;   {no_reloc}
  0x0000ffff984f172c:   br	x8
  0x0000ffff984f1730:   bl	0x0000ffff97736a30
  0x0000ffff984f1734:   udf	#65535
  0x0000ffff984f1738:   ldr	x8, 0x0000ffff984f1740      ;   {trampoline_stub}
  0x0000ffff984f173c:   br	x8
  0x0000ffff984f1740:   bl	0x0000ffff97735e40
  0x0000ffff984f1744:   udf	#65535
  0x0000ffff984f1748:   isb                                 ;   {static_stub}
  0x0000ffff984f174c:   mov	x12, #0x0                   	// #0
                                                            ;   {metadata(nullptr)}
  0x0000ffff984f1750:   movk	x12, #0x0, lsl #16
  0x0000ffff984f1754:   movk	x12, #0x0, lsl #32
  0x0000ffff984f1758:   mov	x8, #0x0                   	// #0
  0x0000ffff984f175c:   movk	x8, #0x0, lsl #16
  0x0000ffff984f1760:   movk	x8, #0x0, lsl #32
  0x0000ffff984f1764:   br	x8
  0x0000ffff984f1768:   ldr	x8, 0x0000ffff984f1770      ;   {trampoline_stub}
  0x0000ffff984f176c:   br	x8
  0x0000ffff984f1770:   bl	0x0000ffff97a65c70
  0x0000ffff984f1774:   udf	#65535
  0x0000ffff984f1778:   ldr	x8, 0x0000ffff984f1780      ;   {trampoline_stub}
  0x0000ffff984f177c:   br	x8
  0x0000ffff984f1780:   bl	0x0000ffff9755e280
  0x0000ffff984f1784:   udf	#65535
  0x0000ffff984f1788:   ldr	x8, 0x0000ffff984f1790      ;   {trampoline_stub}
  0x0000ffff984f178c:   br	x8
  0x0000ffff984f1790:   bl	0x0000ffff97a66890
  0x0000ffff984f1794:   udf	#65535
  0x0000ffff984f1798:   ldr	x8, 0x0000ffff984f17a0      ;   {trampoline_stub}
  0x0000ffff984f179c:   br	x8
  0x0000ffff984f17a0:   bl	0x0000ffff977528a0
  0x0000ffff984f17a4:   udf	#65535
[Exception Handler]
  0x0000ffff984f17a8:   adrp	x8, 0x0000ffff97d57000      ;   {runtime_call ExceptionBlob}
  0x0000ffff984f17ac:   add	x8, x8, #0x6c0
  0x0000ffff984f17b0:   br	x8
[Deopt Handler Code]
  0x0000ffff984f17b4:   adr	x30, 0x0000ffff984f17b4
  0x0000ffff984f17b8:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff984f17bc:   add	x8, x8, #0xdc0
  0x0000ffff984f17c0:   br	x8
  0x0000ffff984f17c4:   udf	#0
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff984f17c8:   0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
  0x0000ffff984f17d0:   0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f17d8:   0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
  0x0000ffff984f17e0:   0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
  0x0000ffff984f17e8:   0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
  0x0000ffff984f17f0:   0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
  0x0000ffff984f17f8:   0x0000080000b7b0f0 a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
  0x0000ffff984f1800:   0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f1808:   0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
  0x0000ffff984f1810:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
  0x0000ffff984f1818:   0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff984f1820:   0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff984f1828:   0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1830:   0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1838:   0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f1840:   0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f1848:   0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1850:   0x000000fc000020d8 {type array float}
  0x0000ffff984f1858:   0x000000fc01005d40 'Outer'[]
  0x0000ffff984f1860:   0x000000fc01042278 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1868:   0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f1870:   0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1878:   0x000000fc01050f98 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f1880:   0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f1888:   0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f1890:   0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1898:   0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f18a0:   0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f18a8:   0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f18b0:   0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f18b8:   0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f18c0:   0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f18c8:   0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f18d0:   0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff984f18d8:   0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff984f18e0:   0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f18e8:   0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff984f18f0:   0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f18f8:   0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
  0x0000ffff984f1900:   0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f1908:   0x000000fc01001450 'InnerFloat'
  0x0000ffff984f1910:   0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1918:   0x000000fc01053380 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f1920:   0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f1928:   0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f1930:   0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f1938:   0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f1940:   0x0000000000000000 
  0x0000ffff984f1948:   0x0000fff9280faa70 {method} {0x0000fff9280faa70} 'makeDummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f1950:   0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f1958:   0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
  0x0000ffff984f1960:   0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1968:   0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f1970:   0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff984f1978:   0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x0000ffff984f1980:   0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f1988:   0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f1990:   0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f1998:   0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f19a0:   0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f19a8:   0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f19b0:   0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff984f19b8:   0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f19c0:   0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f19c8:   0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f19d0:   0x000000fc01005b28 'Outer'
  0x0000ffff984f19d8:   0x000000fc01001870 'jdk/random/L32X64MixRandom'
  0x0000ffff984f19e0:   0x000000fc00174f50 'java/util/random/RandomGenerator'
  0x0000ffff984f19e8:   0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f19f0:   0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f19f8:   0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
  0x0000ffff984f1a00:   0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f1a08:   0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff984f04bf offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff984f0540 offset=80 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f0570 offset=b0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f05cc offset=10c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f05e8 offset=128 bits=0):
   jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f060c offset=14c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
PcDesc(pc=0x0000ffff984f0648 offset=188 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f064c offset=18c bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0650 offset=190 bits=0):
   jdk.incubator.vector.FloatVector::toBits@4 (line 489)
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@2 (line 3697)
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0660 offset=1a0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f06fc offset=23c bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0700 offset=240 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0704 offset=244 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0708 offset=248 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0710 offset=250 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f072c offset=26c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0734 offset=274 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0744 offset=284 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f074c offset=28c bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0814 offset=354 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0824 offset=364 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0828 offset=368 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
PcDesc(pc=0x0000ffff984f082c offset=36c bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: reg r12 [24],int
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f084c offset=38c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f085c offset=39c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0860 offset=3a0 bits=0):
   jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
   jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f0864 offset=3a4 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0868 offset=3a8 bits=0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f087c offset=3bc bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f0890 offset=3d0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0894 offset=3d4 bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f08b8 offset=3f8 bits=0):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f08d0 offset=410 bits=4):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f08e4 offset=424 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f08f4 offset=434 bits=0):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f08f8 offset=438 bits=0):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f08fc offset=43c bits=0):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f0900 offset=440 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f090c offset=44c bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f0910 offset=450 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f091c offset=45c bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f0920 offset=460 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0924 offset=464 bits=0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f094c offset=48c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0950 offset=490 bits=0):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f0968 offset=4a8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0978 offset=4b8 bits=0):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f097c offset=4bc bits=0):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f0980 offset=4c0 bits=0):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f09b8 offset=4f8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f09bc offset=4fc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff984f09c0 offset=500 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
PcDesc(pc=0x0000ffff984f09d4 offset=514 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f09d8 offset=518 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f09ec offset=52c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f09f4 offset=534 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f0aa0 offset=5e0 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: reg rfp [58],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
PcDesc(pc=0x0000ffff984f0acc offset=60c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0ad0 offset=610 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f0ae4 offset=624 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0aec offset=62c bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f0afc offset=63c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f0bf8 offset=738 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0c00 offset=740 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0c10 offset=750 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0c18 offset=758 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0d20 offset=860 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0d28 offset=868 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0df4 offset=934 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f0e34 offset=974 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0e3c offset=97c bits=5):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0e6c offset=9ac bits=5):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0e94 offset=9d4 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0e9c offset=9dc bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0ec4 offset=a04 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0ee0 offset=a20 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f0eec offset=a2c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0ef4 offset=a34 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
PcDesc(pc=0x0000ffff984f0f10 offset=a50 bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f0f18 offset=a58 bits=4):
   jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[52]
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0f44 offset=a84 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0f4c offset=a8c bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
PcDesc(pc=0x0000ffff984f0f80 offset=ac0 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: reg rfp [58],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
PcDesc(pc=0x0000ffff984f0fa8 offset=ae8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f0fb0 offset=af0 bits=5):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0fdc offset=b1c bits=5):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f0ffc offset=b3c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1004 offset=b44 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f102c offset=b6c bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1058 offset=b98 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f1060 offset=ba0 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: reg rfp [58],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: stack[40],oop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f106c offset=bac bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1078 offset=bb8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
PcDesc(pc=0x0000ffff984f1080 offset=bc0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[32],oop
    - @1: reg rfp [58],int
PcDesc(pc=0x0000ffff984f108c offset=bcc bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1098 offset=bd8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
PcDesc(pc=0x0000ffff984f10a0 offset=be0 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f10ac offset=bec bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f10b8 offset=bf8 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f10c0 offset=c00 bits=0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: reg rfp [58],int
    - @2: nullptr
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: stack[40],oop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f10cc offset=c0c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f10d8 offset=c18 bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f10e0 offset=c20 bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
   Locals
    - l0: empty
   Expression stack
    - @0: reg rfp [58],oop
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f10ec offset=c2c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1100 offset=c40 bits=1):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f111c offset=c5c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1120 offset=c60 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f1124 offset=c64 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f1128 offset=c68 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1138 offset=c78 bits=1):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[48]
PcDesc(pc=0x0000ffff984f1144 offset=c84 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1154 offset=c94 bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f115c offset=c9c bits=0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[56],oop
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
PcDesc(pc=0x0000ffff984f1168 offset=ca8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1180 offset=cc0 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[0],oop
    - @3: stack[8]
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f118c offset=ccc bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f11a0 offset=ce0 bits=0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[56],oop
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f11bc offset=cfc bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f11c0 offset=d00 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f11c4 offset=d04 bits=0):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f11c8 offset=d08 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f11d8 offset=d18 bits=1):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[48]
PcDesc(pc=0x0000ffff984f11e4 offset=d24 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f11f8 offset=d38 bits=1):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1204 offset=d44 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1218 offset=d58 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f1228 offset=d68 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1234 offset=d74 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1248 offset=d88 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f1258 offset=d98 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1264 offset=da4 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f127c offset=dbc bits=0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
   Locals
    - l0: empty
   Expression stack
    - @0: nullptr
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[52]
    - l3: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: reg rfp [58],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1288 offset=dc8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1294 offset=dd4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff984f129c offset=ddc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: reg rfp [58],oop
PcDesc(pc=0x0000ffff984f12a8 offset=de8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f12b4 offset=df4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff984f12bc offset=dfc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f12c8 offset=e08 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f12d4 offset=e14 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f12dc offset=e1c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
    - @1: stack[56],oop
PcDesc(pc=0x0000ffff984f12e8 offset=e28 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f12f4 offset=e34 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f1300 offset=e40 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],oop
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f130c offset=e4c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1318 offset=e58 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f1324 offset=e64 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],oop
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1330 offset=e70 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1344 offset=e84 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
PcDesc(pc=0x0000ffff984f1354 offset=e94 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
PcDesc(pc=0x0000ffff984f1360 offset=ea0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f1390 offset=ed0 bits=0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f13b8 offset=ef8 bits=0):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f13bc offset=efc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f13d0 offset=f10 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f17c9 offset=1309 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 36 OopMaps

ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 876 1040 
ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop } pc offsets: 1504 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2428 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop } pc offsets: 2476 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2524 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 2564 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 2612 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2648 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 2700 
ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop } pc offsets: 2752 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2800 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [64]=Oop } pc offsets: 2844 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2884 
ImmutableOopMap {rfp=Oop [0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 2924 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 2976 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3008 
ImmutableOopMap {} pc offsets: 3040 
ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 3072 
ImmutableOopMap {rfp=Oop } pc offsets: 3104 
ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3136 3192 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3228 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop } pc offsets: 3264 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3296 
ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3352 3384 
ImmutableOopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop } pc offsets: 3432 3480 
ImmutableOopMap {rfp=Oop [16]=Oop [24]=Oop [32]=Oop } pc offsets: 3516 
ImmutableOopMap {rfp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3548 
ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop [40]=Oop [56]=Oop } pc offsets: 3580 
ImmutableOopMap {[56]=Oop } pc offsets: 3612 
ImmutableOopMap {rfp=Oop } pc offsets: 3648 3684 
ImmutableOopMap {rfp=Oop [8]=Oop [16]=Oop [24]=Oop } pc offsets: 3732 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff984f0540 offset=80):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0570 offset=b0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f05cc offset=10c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f05e8 offset=128):
   jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
ScopeDesc(pc=0x0000ffff984f05e8 offset=128):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f060c offset=14c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0648 offset=188):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f064c offset=18c):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff984f064c offset=18c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f064c offset=18c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatVector::toBits@4 (line 489)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@2 (line 3697)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0650 offset=190):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0660 offset=1a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f06fc offset=23c):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff984f06fc offset=23c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f06fc offset=23c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0700 offset=240):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0704 offset=244):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0704 offset=244):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0704 offset=244):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0708 offset=248):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0710 offset=250):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f072c offset=26c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0734 offset=274):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0734 offset=274):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0734 offset=274):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0744 offset=284):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f074c offset=28c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0814 offset=354):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0814 offset=354):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0814 offset=354):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0824 offset=364):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0828 offset=368):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
ScopeDesc(pc=0x0000ffff984f082c offset=36c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: reg r12 [24],int
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f084c offset=38c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f085c offset=39c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0860 offset=3a0):
   jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
ScopeDesc(pc=0x0000ffff984f0860 offset=3a0):
   jdk.incubator.vector.FloatVector::fromArray@2 (line 2797)
ScopeDesc(pc=0x0000ffff984f0860 offset=3a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0864 offset=3a4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0868 offset=3a8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@42 (line 61)
ScopeDesc(pc=0x0000ffff984f0868 offset=3a8):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff984f0868 offset=3a8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f087c offset=3bc):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x0000ffff984f087c offset=3bc):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
ScopeDesc(pc=0x0000ffff984f087c offset=3bc):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff984f087c offset=3bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0890 offset=3d0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0894 offset=3d4):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
ScopeDesc(pc=0x0000ffff984f0894 offset=3d4):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff984f0894 offset=3d4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f08b8 offset=3f8):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff984f08b8 offset=3f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f08d0 offset=410):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff984f08d0 offset=410):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f08e4 offset=424):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f08f4 offset=434):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
ScopeDesc(pc=0x0000ffff984f08f4 offset=434):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f08f4 offset=434):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f08f4 offset=434):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f08f8 offset=438):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
ScopeDesc(pc=0x0000ffff984f08f8 offset=438):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f08f8 offset=438):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f08f8 offset=438):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f08fc offset=43c):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
ScopeDesc(pc=0x0000ffff984f08fc offset=43c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f08fc offset=43c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f08fc offset=43c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0900 offset=440):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f090c offset=44c):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
ScopeDesc(pc=0x0000ffff984f090c offset=44c):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f090c offset=44c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f090c offset=44c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f090c offset=44c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0910 offset=450):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f091c offset=45c):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
ScopeDesc(pc=0x0000ffff984f091c offset=45c):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f091c offset=45c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f091c offset=45c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f091c offset=45c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0920 offset=460):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0924 offset=464):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
ScopeDesc(pc=0x0000ffff984f0924 offset=464):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f0924 offset=464):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f094c offset=48c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0950 offset=490):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
ScopeDesc(pc=0x0000ffff984f0950 offset=490):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f0950 offset=490):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f0950 offset=490):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0968 offset=4a8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0978 offset=4b8):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
ScopeDesc(pc=0x0000ffff984f0978 offset=4b8):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f0978 offset=4b8):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f0978 offset=4b8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f097c offset=4bc):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
ScopeDesc(pc=0x0000ffff984f097c offset=4bc):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f097c offset=4bc):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f097c offset=4bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f0980 offset=4c0):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
ScopeDesc(pc=0x0000ffff984f0980 offset=4c0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f0980 offset=4c0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f0980 offset=4c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f09b8 offset=4f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f09bc offset=4fc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff984f09c0 offset=500):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f09d4 offset=514):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f09d8 offset=518):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f09d8 offset=518):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f09ec offset=52c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f09f4 offset=534):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f0aa0 offset=5e0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: reg rfp [58],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0aa0 offset=5e0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0aa0 offset=5e0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0aa0 offset=5e0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0aa0 offset=5e0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0acc offset=60c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0ad0 offset=610):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f0ad0 offset=610):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0ae4 offset=624):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f0aec offset=62c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f0afc offset=63c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
ScopeDesc(pc=0x0000ffff984f0afc offset=63c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0afc offset=63c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0afc offset=63c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f0afc offset=63c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0bf8 offset=738):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0c00 offset=740):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0c00 offset=740):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0c00 offset=740):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0c10 offset=750):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0c18 offset=758):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0d20 offset=860):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0d28 offset=868):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
ScopeDesc(pc=0x0000ffff984f0d28 offset=868):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0d28 offset=868):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0df4 offset=934):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0e34 offset=974):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e3c offset=97c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 4
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.Float128Vector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e6c offset=9ac):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0e94 offset=9d4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0e9c offset=9dc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0ec4 offset=a04):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0ee0 offset=a20):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
ScopeDesc(pc=0x0000ffff984f0ee0 offset=a20):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0ee0 offset=a20):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0ee0 offset=a20):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f0ee0 offset=a20):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0eec offset=a2c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0ef4 offset=a34):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: stack[0],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0ef4 offset=a34):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0ef4 offset=a34):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0ef4 offset=a34):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0ef4 offset=a34):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
ScopeDesc(pc=0x0000ffff984f0f10 offset=a50):
   jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 309)
ScopeDesc(pc=0x0000ffff984f0f10 offset=a50):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
ScopeDesc(pc=0x0000ffff984f0f10 offset=a50):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff984f0f10 offset=a50):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f0f18 offset=a58):
   jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0f18 offset=a58):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
   Locals
    - l0: empty
ScopeDesc(pc=0x0000ffff984f0f18 offset=a58):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[52]
    - l3: empty
ScopeDesc(pc=0x0000ffff984f0f18 offset=a58):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0f44 offset=a84):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0f4c offset=a8c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0f4c offset=a8c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0f4c offset=a8c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0f4c offset=a8c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0f4c offset=a8c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
ScopeDesc(pc=0x0000ffff984f0f80 offset=ac0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: reg rfp [58],oop
    - @6: stack[56],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f0f80 offset=ac0):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0f80 offset=ac0):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0f80 offset=ac0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0f80 offset=ac0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0fa8 offset=ae8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fb0 offset=af0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcastBits@19 (line 3688)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @1: a 'java/lang/Class'{0x0000080000000570} = float
    - @2: 64
    - @3: 0
    - @4: stack[56],long
    - @5: 0
    - @6: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - @7: a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatVector$FloatSpecies::broadcast@5 (line 3697)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatVector::broadcastTemplate@7 (line 607)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 125)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatMaxVector::broadcast@2 (line 41)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f0fdc offset=b1c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f0ffc offset=b3c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1004 offset=b44):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: stack[0],oop
    - @6: reg rfp [58],oop
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f102c offset=b6c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1058 offset=b98):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x0000ffff984f1058 offset=b98):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
ScopeDesc(pc=0x0000ffff984f1058 offset=b98):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff984f1058 offset=b98):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f1060 offset=ba0):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: reg rfp [58],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff984f1060 offset=ba0):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1060 offset=ba0):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: stack[40],oop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff984f1060 offset=ba0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f106c offset=bac):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1078 offset=bb8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
ScopeDesc(pc=0x0000ffff984f1080 offset=bc0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[32],oop
    - @1: reg rfp [58],int
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f108c offset=bcc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1098 offset=bd8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
ScopeDesc(pc=0x0000ffff984f10a0 offset=be0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f10ac offset=bec):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f10b8 offset=bf8):
   java.util.Objects::checkIndex@3 (line 365)
ScopeDesc(pc=0x0000ffff984f10b8 offset=bf8):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
ScopeDesc(pc=0x0000ffff984f10b8 offset=bf8):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
ScopeDesc(pc=0x0000ffff984f10b8 offset=bf8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f10c0 offset=c00):
   java.util.Objects::checkIndex@3 (line 365)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[8]
    - @1: reg rfp [58],int
    - @2: nullptr
ScopeDesc(pc=0x0000ffff984f10c0 offset=c00):
   jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f10c0 offset=c00):
   jdk.incubator.vector.FloatVector::fromArray@9 (line 2797)
   Locals
    - l0: stack[40],oop
    - l1: stack[24],oop
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff984f10c0 offset=c00):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: stack[0],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f10cc offset=c0c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f10d8 offset=c18):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
ScopeDesc(pc=0x0000ffff984f10d8 offset=c18):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff984f10d8 offset=c18):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f10e0 offset=c20):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
   Locals
    - l0: empty
   Expression stack
    - @0: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f10e0 offset=c20):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
ScopeDesc(pc=0x0000ffff984f10e0 offset=c20):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f10ec offset=c2c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1100 offset=c40):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f111c offset=c5c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f1120 offset=c60):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f1124 offset=c64):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1128 offset=c68):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1138 offset=c78):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[48]
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1144 offset=c84):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1154 offset=c94):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f1154 offset=c94):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f115c offset=c9c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[56],oop
ScopeDesc(pc=0x0000ffff984f115c offset=c9c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[8]
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1168 offset=ca8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1180 offset=cc0):
   jdk.incubator.vector.FloatVector::lanewise@4 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[0],oop
    - @3: stack[8]
ScopeDesc(pc=0x0000ffff984f1180 offset=cc0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1180 offset=cc0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f118c offset=ccc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f11a0 offset=ce0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   Expression stack
    - @0: stack[0],oop
    - @1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - @2: stack[56],oop
ScopeDesc(pc=0x0000ffff984f11a0 offset=ce0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f11a0 offset=ce0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f11bc offset=cfc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.AbstractVector::sameSpecies@1 (line 145)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f11c0 offset=d00):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f11c4 offset=d04):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f11c8 offset=d08):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f11d8 offset=d18):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: stack[48]
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f11e4 offset=d24):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.AbstractVector::sameSpecies@8 (line 145)  reexecute=true
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
    - l2: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.AbstractVector::check@2 (line 136)
   Locals
    - l0: stack[56],oop
    - l1: stack[0],oop
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: stack[0],oop
    - l1: a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
    - l2: empty
    - l3: stack[56],oop
    - l4: empty
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f11f8 offset=d38):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: empty
    - l5: stack[52]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1204 offset=d44):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1218 offset=d58):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f1228 offset=d68):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1234 offset=d74):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1248 offset=d88):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f1258 offset=d98):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1264 offset=da4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f127c offset=dbc):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@4 (line 3768)
   Locals
    - l0: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f127c offset=dbc):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[52]
    - l3: empty
ScopeDesc(pc=0x0000ffff984f127c offset=dbc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[16],oop
    - l4: reg rfp [58],oop
    - l5: stack[8]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1288 offset=dc8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1294 offset=dd4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff984f129c offset=ddc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f12a8 offset=de8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f12b4 offset=df4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff984f12bc offset=dfc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[24],oop
    - l2: stack[32],oop
    - l3: stack[40],oop
    - l4: stack[0],oop
    - l5: stack[52]
    - l6: stack[56],oop
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f12c8 offset=e08):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f12d4 offset=e14):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f12dc offset=e1c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
    - @1: stack[56],oop
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f12e8 offset=e28):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f12f4 offset=e34):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f12f4 offset=e34):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f12f4 offset=e34):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f12f4 offset=e34):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f12f4 offset=e34):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f1300 offset=e40):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f1300 offset=e40):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1300 offset=e40):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1300 offset=e40):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1300 offset=e40):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f130c offset=e4c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1318 offset=e58):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
ScopeDesc(pc=0x0000ffff984f1318 offset=e58):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1318 offset=e58):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1318 offset=e58):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f1318 offset=e58):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f1324 offset=e64):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@7 (line 763)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f1324 offset=e64):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1324 offset=e64):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f1324 offset=e64):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f1324 offset=e64):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1330 offset=e70):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1344 offset=e84):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
ScopeDesc(pc=0x0000ffff984f1354 offset=e94):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@13 (line 49)
   Locals
    - l0: empty
    - l1: stack[16],oop
    - l2: stack[24],oop
    - l3: stack[8],oop
    - l4: reg rfp [58],oop
    - l5: stack[0]
    - l6: empty
    - l7: empty
    - l8: empty
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f1360 offset=ea0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f1390 offset=ed0):
   jdk.incubator.vector.AbstractSpecies::dummyVector@12 (line 311)
ScopeDesc(pc=0x0000ffff984f1390 offset=ed0):
   jdk.incubator.vector.FloatVector$FloatSpecies::dummyVector@1 (line 3768)
ScopeDesc(pc=0x0000ffff984f1390 offset=ed0):
   jdk.incubator.vector.FloatVector::fromArray@19 (line 2799)
ScopeDesc(pc=0x0000ffff984f1390 offset=ed0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f13b8 offset=ef8):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff984f13b8 offset=ef8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f13bc offset=efc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f13d0 offset=f10):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff984f0200: 7c04aece431c0000ffff380c
relocInfo@0x0000ffff984f020a [type=7(external_word) addr=0x0000ffff984f04f0 offset=48 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f020c: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff984f0216 [type=7(external_word) addr=0x0000ffff984f0508 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff984f0218: 3010
relocInfo@0x0000ffff984f0218 [type=6(runtime_call) addr=0x0000ffff984f0548 offset=64] | [destination=0x0000ffffaf2dd490]
         @0x0000ffff984f021a: 8005
relocInfo@0x0000ffff984f021a [type=16(post_call_nop) addr=0x0000ffff984f055c offset=20]
         @0x0000ffff984f021c: 78076007
relocInfo@0x0000ffff984f021e [type=12(metadata) addr=0x0000ffff984f0578 offset=28 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0220: 78086007
relocInfo@0x0000ffff984f0222 [type=12(metadata) addr=0x0000ffff984f0594 offset=28 data=8] | [metadata_addr=0x0000ffff984f1858 *=0x000000fc01005d40 offset=0]metadata_value=0x000000fc01005d40: 'Outer'[]
         @0x0000ffff984f0224: 78096009
relocInfo@0x0000ffff984f0226 [type=12(metadata) addr=0x0000ffff984f05b8 offset=36 data=9] | [metadata_addr=0x0000ffff984f1860 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff984f0228: 780a6007
relocInfo@0x0000ffff984f022a [type=12(metadata) addr=0x0000ffff984f05d4 offset=28 data=10] | [metadata_addr=0x0000ffff984f1868 *=0x000000fc0104e4f8 offset=0]metadata_value=0x000000fc0104e4f8: 'jdk/incubator/vector/FloatVector$FloatSpecies'
         @0x0000ffff984f022c: 780c6012
relocInfo@0x0000ffff984f022e [type=12(metadata) addr=0x0000ffff984f061c offset=72 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0230: 9405
relocInfo@0x0000ffff984f0230 [type=18(barrier) addr=0x0000ffff984f0630 offset=20 format=2]
         @0x0000ffff984f0232: 780c6009
relocInfo@0x0000ffff984f0234 [type=12(metadata) addr=0x0000ffff984f0654 offset=36 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0236: 7807600e
relocInfo@0x0000ffff984f0238 [type=12(metadata) addr=0x0000ffff984f068c offset=56 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f023a: 780c6013
relocInfo@0x0000ffff984f023c [type=12(metadata) addr=0x0000ffff984f06d8 offset=76 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f023e: 9405
relocInfo@0x0000ffff984f023e [type=18(barrier) addr=0x0000ffff984f06ec offset=20 format=2]
         @0x0000ffff984f0240: 900b
relocInfo@0x0000ffff984f0240 [type=18(barrier) addr=0x0000ffff984f0718 offset=44]
         @0x0000ffff984f0242: 780c6002
relocInfo@0x0000ffff984f0244 [type=12(metadata) addr=0x0000ffff984f0720 offset=8 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0246: 780c6006
relocInfo@0x0000ffff984f0248 [type=12(metadata) addr=0x0000ffff984f0738 offset=24 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f024a: 7807600e
relocInfo@0x0000ffff984f024c [type=12(metadata) addr=0x0000ffff984f0770 offset=56 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f024e: 9010
relocInfo@0x0000ffff984f024e [type=18(barrier) addr=0x0000ffff984f07b0 offset=64]
         @0x0000ffff984f0250: 9004
relocInfo@0x0000ffff984f0250 [type=18(barrier) addr=0x0000ffff984f07c0 offset=16]
         @0x0000ffff984f0252: 780c600b
relocInfo@0x0000ffff984f0254 [type=12(metadata) addr=0x0000ffff984f07ec offset=44 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0256: 9406
relocInfo@0x0000ffff984f0256 [type=18(barrier) addr=0x0000ffff984f0804 offset=24 format=2]
         @0x0000ffff984f0258: 500a
relocInfo@0x0000ffff984f0258 [type=10(poll) addr=0x0000ffff984f082c offset=40]
         @0x0000ffff984f025a: 7c04aece431c0000ffff3803
relocInfo@0x0000ffff984f0264 [type=7(external_word) addr=0x0000ffff984f0838 offset=12 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f0266: 9014
relocInfo@0x0000ffff984f0266 [type=18(barrier) addr=0x0000ffff984f0888 offset=80]
         @0x0000ffff984f0268: 78096006
relocInfo@0x0000ffff984f026a [type=12(metadata) addr=0x0000ffff984f08a0 offset=24 data=9] | [metadata_addr=0x0000ffff984f1860 *=0x000000fc01042278 offset=0]metadata_value=0x000000fc01042278: 'jdk/incubator/vector/FloatVector'
         @0x0000ffff984f026c: 7803100b
relocInfo@0x0000ffff984f026e [type=2(virtual_call) addr=0x0000ffff984f08cc offset=44 data=3] | [destination=0x0000ffff97c914c0 cached_value=0x0000ffff984f08c0 metadata=0x0000000000000000]
         @0x0000ffff984f0270: 8001
relocInfo@0x0000ffff984f0270 [type=16(post_call_nop) addr=0x0000ffff984f08d0 offset=4]
         @0x0000ffff984f0272: 78010805
relocInfo@0x0000ffff984f0274 [type=1(oop) addr=0x0000ffff984f08e4 offset=20 data=1] | [oop_addr=0x0000ffff984f17c8 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f0276: 78010810
relocInfo@0x0000ffff984f0278 [type=1(oop) addr=0x0000ffff984f0924 offset=64 data=1] | [oop_addr=0x0000ffff984f17c8 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f027a: 78010806
relocInfo@0x0000ffff984f027c [type=1(oop) addr=0x0000ffff984f093c offset=24 data=1] | [oop_addr=0x0000ffff984f17c8 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f027e: 7801080b
relocInfo@0x0000ffff984f0280 [type=1(oop) addr=0x0000ffff984f0968 offset=44 data=1] | [oop_addr=0x0000ffff984f17c8 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f0282: 900a
relocInfo@0x0000ffff984f0282 [type=18(barrier) addr=0x0000ffff984f0990 offset=40]
         @0x0000ffff984f0284: 9004
relocInfo@0x0000ffff984f0284 [type=18(barrier) addr=0x0000ffff984f09a0 offset=16]
         @0x0000ffff984f0286: 781e6003
relocInfo@0x0000ffff984f0288 [type=12(metadata) addr=0x0000ffff984f09ac offset=12 data=30] | [metadata_addr=0x0000ffff984f1908 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff984f028a: 780c6007
relocInfo@0x0000ffff984f028c [type=12(metadata) addr=0x0000ffff984f09c8 offset=28 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f028e: 780c6006
relocInfo@0x0000ffff984f0290 [type=12(metadata) addr=0x0000ffff984f09e0 offset=24 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0292: 7807600f
relocInfo@0x0000ffff984f0294 [type=12(metadata) addr=0x0000ffff984f0a1c offset=60 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0296: 900e
relocInfo@0x0000ffff984f0296 [type=18(barrier) addr=0x0000ffff984f0a54 offset=56]
         @0x0000ffff984f0298: 9005
relocInfo@0x0000ffff984f0298 [type=18(barrier) addr=0x0000ffff984f0a68 offset=20]
         @0x0000ffff984f029a: 780c6009
relocInfo@0x0000ffff984f029c [type=12(metadata) addr=0x0000ffff984f0a8c offset=36 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f029e: 3004
relocInfo@0x0000ffff984f029e [type=6(runtime_call) addr=0x0000ffff984f0a9c offset=16] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f02a0: 8001
relocInfo@0x0000ffff984f02a0 [type=16(post_call_nop) addr=0x0000ffff984f0aa0 offset=4]
         @0x0000ffff984f02a2: 78206008
relocInfo@0x0000ffff984f02a4 [type=12(metadata) addr=0x0000ffff984f0ac0 offset=32 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02a6: 78206006
relocInfo@0x0000ffff984f02a8 [type=12(metadata) addr=0x0000ffff984f0ad8 offset=24 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02aa: 7807600f
relocInfo@0x0000ffff984f02ac [type=12(metadata) addr=0x0000ffff984f0b14 offset=60 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f02ae: 300b
relocInfo@0x0000ffff984f02ae [type=6(runtime_call) addr=0x0000ffff984f0b40 offset=44] | [destination=0x0000ffff97c1b2c0]
         @0x0000ffff984f02b0: 900f
relocInfo@0x0000ffff984f02b0 [type=18(barrier) addr=0x0000ffff984f0b7c offset=60]
         @0x0000ffff984f02b2: 9006
relocInfo@0x0000ffff984f02b2 [type=18(barrier) addr=0x0000ffff984f0b94 offset=24]
         @0x0000ffff984f02b4: 7820600b
relocInfo@0x0000ffff984f02b6 [type=12(metadata) addr=0x0000ffff984f0bc0 offset=44 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02b8: 9406
relocInfo@0x0000ffff984f02b8 [type=18(barrier) addr=0x0000ffff984f0bd8 offset=24 format=2]
         @0x0000ffff984f02ba: 78206005
relocInfo@0x0000ffff984f02bc [type=12(metadata) addr=0x0000ffff984f0bec offset=20 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02be: 78206006
relocInfo@0x0000ffff984f02c0 [type=12(metadata) addr=0x0000ffff984f0c04 offset=24 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02c2: 7807600e
relocInfo@0x0000ffff984f02c4 [type=12(metadata) addr=0x0000ffff984f0c3c offset=56 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f02c6: 300b
relocInfo@0x0000ffff984f02c6 [type=6(runtime_call) addr=0x0000ffff984f0c68 offset=44] | [destination=0x0000ffff97c1b2c0]
         @0x0000ffff984f02c8: 900f
relocInfo@0x0000ffff984f02c8 [type=18(barrier) addr=0x0000ffff984f0ca4 offset=60]
         @0x0000ffff984f02ca: 9006
relocInfo@0x0000ffff984f02ca [type=18(barrier) addr=0x0000ffff984f0cbc offset=24]
         @0x0000ffff984f02cc: 7820600b
relocInfo@0x0000ffff984f02ce [type=12(metadata) addr=0x0000ffff984f0ce8 offset=44 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02d0: 9406
relocInfo@0x0000ffff984f02d0 [type=18(barrier) addr=0x0000ffff984f0d00 offset=24 format=2]
         @0x0000ffff984f02d2: 78206005
relocInfo@0x0000ffff984f02d4 [type=12(metadata) addr=0x0000ffff984f0d14 offset=20 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02d6: 7807600e
relocInfo@0x0000ffff984f02d8 [type=12(metadata) addr=0x0000ffff984f0d4c offset=56 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f02da: 300b
relocInfo@0x0000ffff984f02da [type=6(runtime_call) addr=0x0000ffff984f0d78 offset=44] | [destination=0x0000ffff97c1b2c0]
         @0x0000ffff984f02dc: 78206014
relocInfo@0x0000ffff984f02de [type=12(metadata) addr=0x0000ffff984f0dc8 offset=80 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f02e0: 9406
relocInfo@0x0000ffff984f02e0 [type=18(barrier) addr=0x0000ffff984f0de0 offset=24 format=2]
         @0x0000ffff984f02e2: 5807
relocInfo@0x0000ffff984f02e2 [type=11(poll_return) addr=0x0000ffff984f0dfc offset=28]
         @0x0000ffff984f02e4: 7807600b
relocInfo@0x0000ffff984f02e6 [type=12(metadata) addr=0x0000ffff984f0e28 offset=44 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f02e8: 3004
relocInfo@0x0000ffff984f02e8 [type=6(runtime_call) addr=0x0000ffff984f0e38 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f02ea: 8001
relocInfo@0x0000ffff984f02ea [type=16(post_call_nop) addr=0x0000ffff984f0e3c offset=4]
         @0x0000ffff984f02ec: 780c6008
relocInfo@0x0000ffff984f02ee [type=12(metadata) addr=0x0000ffff984f0e5c offset=32 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f02f0: 3003
relocInfo@0x0000ffff984f02f0 [type=6(runtime_call) addr=0x0000ffff984f0e68 offset=12] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f02f2: 8001
relocInfo@0x0000ffff984f02f2 [type=16(post_call_nop) addr=0x0000ffff984f0e6c offset=4]
         @0x0000ffff984f02f4: 78076007
relocInfo@0x0000ffff984f02f6 [type=12(metadata) addr=0x0000ffff984f0e88 offset=28 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f02f8: 3004
relocInfo@0x0000ffff984f02f8 [type=6(runtime_call) addr=0x0000ffff984f0e98 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f02fa: 8001
relocInfo@0x0000ffff984f02fa [type=16(post_call_nop) addr=0x0000ffff984f0e9c offset=4]
         @0x0000ffff984f02fc: 780c6006
relocInfo@0x0000ffff984f02fe [type=12(metadata) addr=0x0000ffff984f0eb4 offset=24 data=12] | [metadata_addr=0x0000ffff984f1878 *=0x000000fc01050f98 offset=0]metadata_value=0x000000fc01050f98: 'jdk/incubator/vector/Float128Vector'
         @0x0000ffff984f0300: 3003
relocInfo@0x0000ffff984f0300 [type=6(runtime_call) addr=0x0000ffff984f0ec0 offset=12] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f0302: 8001
relocInfo@0x0000ffff984f0302 [type=16(post_call_nop) addr=0x0000ffff984f0ec4 offset=4]
         @0x0000ffff984f0304: 78076007
relocInfo@0x0000ffff984f0306 [type=12(metadata) addr=0x0000ffff984f0ee0 offset=28 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0308: 3004
relocInfo@0x0000ffff984f0308 [type=6(runtime_call) addr=0x0000ffff984f0ef0 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f030a: 8001
relocInfo@0x0000ffff984f030a [type=16(post_call_nop) addr=0x0000ffff984f0ef4 offset=4]
         @0x0000ffff984f030c: 1808
relocInfo@0x0000ffff984f030c [type=3(opt_virtual_call) addr=0x0000ffff984f0f14 offset=32] | [destination=0x0000ffff97c911c0 metadata=0x0000000000000000]
         @0x0000ffff984f030e: 8001
relocInfo@0x0000ffff984f030e [type=16(post_call_nop) addr=0x0000ffff984f0f18 offset=4]
         @0x0000ffff984f0310: 78076008
relocInfo@0x0000ffff984f0312 [type=12(metadata) addr=0x0000ffff984f0f38 offset=32 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0314: 3004
relocInfo@0x0000ffff984f0314 [type=6(runtime_call) addr=0x0000ffff984f0f48 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f0316: 8001
relocInfo@0x0000ffff984f0316 [type=16(post_call_nop) addr=0x0000ffff984f0f4c offset=4]
         @0x0000ffff984f0318: 78206008
relocInfo@0x0000ffff984f031a [type=12(metadata) addr=0x0000ffff984f0f6c offset=32 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f031c: 3004
relocInfo@0x0000ffff984f031c [type=6(runtime_call) addr=0x0000ffff984f0f7c offset=16] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f031e: 8001
relocInfo@0x0000ffff984f031e [type=16(post_call_nop) addr=0x0000ffff984f0f80 offset=4]
         @0x0000ffff984f0320: 78076007
relocInfo@0x0000ffff984f0322 [type=12(metadata) addr=0x0000ffff984f0f9c offset=28 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0324: 3004
relocInfo@0x0000ffff984f0324 [type=6(runtime_call) addr=0x0000ffff984f0fac offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f0326: 8001
relocInfo@0x0000ffff984f0326 [type=16(post_call_nop) addr=0x0000ffff984f0fb0 offset=4]
         @0x0000ffff984f0328: 78206007
relocInfo@0x0000ffff984f032a [type=12(metadata) addr=0x0000ffff984f0fcc offset=28 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f032c: 3003
relocInfo@0x0000ffff984f032c [type=6(runtime_call) addr=0x0000ffff984f0fd8 offset=12] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f032e: 8001
relocInfo@0x0000ffff984f032e [type=16(post_call_nop) addr=0x0000ffff984f0fdc offset=4]
         @0x0000ffff984f0330: 78076005
relocInfo@0x0000ffff984f0332 [type=12(metadata) addr=0x0000ffff984f0ff0 offset=20 data=7] | [metadata_addr=0x0000ffff984f1850 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f0334: 3004
relocInfo@0x0000ffff984f0334 [type=6(runtime_call) addr=0x0000ffff984f1000 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f0336: 8001
relocInfo@0x0000ffff984f0336 [type=16(post_call_nop) addr=0x0000ffff984f1004 offset=4]
         @0x0000ffff984f0338: 78206006
relocInfo@0x0000ffff984f033a [type=12(metadata) addr=0x0000ffff984f101c offset=24 data=32] | [metadata_addr=0x0000ffff984f1918 *=0x000000fc01053380 offset=0]metadata_value=0x000000fc01053380: 'jdk/incubator/vector/FloatMaxVector'
         @0x0000ffff984f033c: 3003
relocInfo@0x0000ffff984f033c [type=6(runtime_call) addr=0x0000ffff984f1028 offset=12] | [destination=0x0000ffff97d5d140]
         @0x0000ffff984f033e: 8001
relocInfo@0x0000ffff984f033e [type=16(post_call_nop) addr=0x0000ffff984f102c offset=4]
         @0x0000ffff984f0340: 300c
relocInfo@0x0000ffff984f0340 [type=6(runtime_call) addr=0x0000ffff984f105c offset=48] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0342: 8001
relocInfo@0x0000ffff984f0342 [type=16(post_call_nop) addr=0x0000ffff984f1060 offset=4]
         @0x0000ffff984f0344: 3007
relocInfo@0x0000ffff984f0344 [type=6(runtime_call) addr=0x0000ffff984f107c offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0346: 8001
relocInfo@0x0000ffff984f0346 [type=16(post_call_nop) addr=0x0000ffff984f1080 offset=4]
         @0x0000ffff984f0348: 3007
relocInfo@0x0000ffff984f0348 [type=6(runtime_call) addr=0x0000ffff984f109c offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f034a: 8001
relocInfo@0x0000ffff984f034a [type=16(post_call_nop) addr=0x0000ffff984f10a0 offset=4]
         @0x0000ffff984f034c: 3007
relocInfo@0x0000ffff984f034c [type=6(runtime_call) addr=0x0000ffff984f10bc offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f034e: 8001
relocInfo@0x0000ffff984f034e [type=16(post_call_nop) addr=0x0000ffff984f10c0 offset=4]
         @0x0000ffff984f0350: 3007
relocInfo@0x0000ffff984f0350 [type=6(runtime_call) addr=0x0000ffff984f10dc offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0352: 8001
relocInfo@0x0000ffff984f0352 [type=16(post_call_nop) addr=0x0000ffff984f10e0 offset=4]
         @0x0000ffff984f0354: 3007
relocInfo@0x0000ffff984f0354 [type=6(runtime_call) addr=0x0000ffff984f10fc offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0356: 8001
relocInfo@0x0000ffff984f0356 [type=16(post_call_nop) addr=0x0000ffff984f1100 offset=4]
         @0x0000ffff984f0358: 900b
relocInfo@0x0000ffff984f0358 [type=18(barrier) addr=0x0000ffff984f112c offset=44]
         @0x0000ffff984f035a: 3002
relocInfo@0x0000ffff984f035a [type=6(runtime_call) addr=0x0000ffff984f1134 offset=8] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f035c: 8001
relocInfo@0x0000ffff984f035c [type=16(post_call_nop) addr=0x0000ffff984f1138 offset=4]
         @0x0000ffff984f035e: 3008
relocInfo@0x0000ffff984f035e [type=6(runtime_call) addr=0x0000ffff984f1158 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0360: 8001
relocInfo@0x0000ffff984f0360 [type=16(post_call_nop) addr=0x0000ffff984f115c offset=4]
         @0x0000ffff984f0362: 3008
relocInfo@0x0000ffff984f0362 [type=6(runtime_call) addr=0x0000ffff984f117c offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0364: 8001
relocInfo@0x0000ffff984f0364 [type=16(post_call_nop) addr=0x0000ffff984f1180 offset=4]
         @0x0000ffff984f0366: 3007
relocInfo@0x0000ffff984f0366 [type=6(runtime_call) addr=0x0000ffff984f119c offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0368: 8001
relocInfo@0x0000ffff984f0368 [type=16(post_call_nop) addr=0x0000ffff984f11a0 offset=4]
         @0x0000ffff984f036a: 900b
relocInfo@0x0000ffff984f036a [type=18(barrier) addr=0x0000ffff984f11cc offset=44]
         @0x0000ffff984f036c: 3002
relocInfo@0x0000ffff984f036c [type=6(runtime_call) addr=0x0000ffff984f11d4 offset=8] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f036e: 8001
relocInfo@0x0000ffff984f036e [type=16(post_call_nop) addr=0x0000ffff984f11d8 offset=4]
         @0x0000ffff984f0370: 3007
relocInfo@0x0000ffff984f0370 [type=6(runtime_call) addr=0x0000ffff984f11f4 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0372: 8001
relocInfo@0x0000ffff984f0372 [type=16(post_call_nop) addr=0x0000ffff984f11f8 offset=4]
         @0x0000ffff984f0374: 300b
relocInfo@0x0000ffff984f0374 [type=6(runtime_call) addr=0x0000ffff984f1224 offset=44] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0376: 8001
relocInfo@0x0000ffff984f0376 [type=16(post_call_nop) addr=0x0000ffff984f1228 offset=4]
         @0x0000ffff984f0378: 300b
relocInfo@0x0000ffff984f0378 [type=6(runtime_call) addr=0x0000ffff984f1254 offset=44] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f037a: 8001
relocInfo@0x0000ffff984f037a [type=16(post_call_nop) addr=0x0000ffff984f1258 offset=4]
         @0x0000ffff984f037c: 3008
relocInfo@0x0000ffff984f037c [type=6(runtime_call) addr=0x0000ffff984f1278 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f037e: 8001
relocInfo@0x0000ffff984f037e [type=16(post_call_nop) addr=0x0000ffff984f127c offset=4]
         @0x0000ffff984f0380: 3007
relocInfo@0x0000ffff984f0380 [type=6(runtime_call) addr=0x0000ffff984f1298 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0382: 8001
relocInfo@0x0000ffff984f0382 [type=16(post_call_nop) addr=0x0000ffff984f129c offset=4]
         @0x0000ffff984f0384: 3007
relocInfo@0x0000ffff984f0384 [type=6(runtime_call) addr=0x0000ffff984f12b8 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0386: 8001
relocInfo@0x0000ffff984f0386 [type=16(post_call_nop) addr=0x0000ffff984f12bc offset=4]
         @0x0000ffff984f0388: 3007
relocInfo@0x0000ffff984f0388 [type=6(runtime_call) addr=0x0000ffff984f12d8 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f038a: 8001
relocInfo@0x0000ffff984f038a [type=16(post_call_nop) addr=0x0000ffff984f12dc offset=4]
         @0x0000ffff984f038c: 3008
relocInfo@0x0000ffff984f038c [type=6(runtime_call) addr=0x0000ffff984f12fc offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f038e: 8001
relocInfo@0x0000ffff984f038e [type=16(post_call_nop) addr=0x0000ffff984f1300 offset=4]
         @0x0000ffff984f0390: 3008
relocInfo@0x0000ffff984f0390 [type=6(runtime_call) addr=0x0000ffff984f1320 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0392: 8001
relocInfo@0x0000ffff984f0392 [type=16(post_call_nop) addr=0x0000ffff984f1324 offset=4]
         @0x0000ffff984f0394: 300b
relocInfo@0x0000ffff984f0394 [type=6(runtime_call) addr=0x0000ffff984f1350 offset=44] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f0396: 8001
relocInfo@0x0000ffff984f0396 [type=16(post_call_nop) addr=0x0000ffff984f1354 offset=4]
         @0x0000ffff984f0398: 301c
relocInfo@0x0000ffff984f0398 [type=6(runtime_call) addr=0x0000ffff984f13c4 offset=112] | [destination=0x0000ffff97d65140]
         @0x0000ffff984f039a: 7a3f40cd
relocInfo@0x0000ffff984f039c [type=8(internal_word) addr=0x0000ffff984f16f8 offset=820 data=575] | [target=0x0000ffff984f0dfc]
         @0x0000ffff984f039e: 3002
relocInfo@0x0000ffff984f039e [type=6(runtime_call) addr=0x0000ffff984f1700 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff984f03a0: 3003
relocInfo@0x0000ffff984f03a0 [type=6(runtime_call) addr=0x0000ffff984f170c offset=12] | [destination=0x0000ffff97c263c0]
         @0x0000ffff984f03a2: 8805
relocInfo@0x0000ffff984f03a2 [type=17(entry_guard) addr=0x0000ffff984f1720 offset=20]
         @0x0000ffff984f03a4: 0002
relocInfo@0x0000ffff984f03a4 [type=0(none) addr=0x0000ffff984f1728 offset=8]
         @0x0000ffff984f03a6: 7c01fefd6800
relocInfo@0x0000ffff984f03aa [type=13(trampoline_stub) addr=0x0000ffff984f1728 offset=0 data=-259] | [trampoline owner=0x0000ffff984f08cc]
         @0x0000ffff984f03ac: 7c01fd6b6804
relocInfo@0x0000ffff984f03b0 [type=13(trampoline_stub) addr=0x0000ffff984f1738 offset=16 data=-661] | [trampoline owner=0x0000ffff984f0f14]
         @0x0000ffff984f03b2: 7c01fd6b2804
relocInfo@0x0000ffff984f03b6 [type=5(static_stub) addr=0x0000ffff984f1748 offset=16 data=-661] | [static_call=0x0000ffff984f0f14]
         @0x0000ffff984f03b8: 78256001
relocInfo@0x0000ffff984f03ba [type=12(metadata) addr=0x0000ffff984f174c offset=4 data=37] | [metadata_addr=0x0000ffff984f1940 *=0x0000000000000000 offset=0]
         @0x0000ffff984f03bc: 7c01fd266807
relocInfo@0x0000ffff984f03c0 [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=28 data=-730] | [trampoline owner=0x0000ffff984f1028]
         @0x0000ffff984f03c2: 7c01fd3a6800
relocInfo@0x0000ffff984f03c6 [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=0 data=-710] | [trampoline owner=0x0000ffff984f0fd8]
         @0x0000ffff984f03c8: 7c01fd516800
relocInfo@0x0000ffff984f03cc [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=0 data=-687] | [trampoline owner=0x0000ffff984f0f7c]
         @0x0000ffff984f03ce: 7c01fd806800
relocInfo@0x0000ffff984f03d2 [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=0 data=-640] | [trampoline owner=0x0000ffff984f0ec0]
         @0x0000ffff984f03d4: 7c01fd966800
relocInfo@0x0000ffff984f03d8 [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=0 data=-618] | [trampoline owner=0x0000ffff984f0e68]
         @0x0000ffff984f03da: 7c01fe896800
relocInfo@0x0000ffff984f03de [type=13(trampoline_stub) addr=0x0000ffff984f1768 offset=0 data=-375] | [trampoline owner=0x0000ffff984f0a9c]
         @0x0000ffff984f03e0: 7c01fdd26804
relocInfo@0x0000ffff984f03e4 [type=13(trampoline_stub) addr=0x0000ffff984f1778 offset=16 data=-558] | [trampoline owner=0x0000ffff984f0d78]
         @0x0000ffff984f03e6: 7c01fe166800
relocInfo@0x0000ffff984f03ea [type=13(trampoline_stub) addr=0x0000ffff984f1778 offset=0 data=-490] | [trampoline owner=0x0000ffff984f0c68]
         @0x0000ffff984f03ec: 7c01fe606800
relocInfo@0x0000ffff984f03f0 [type=13(trampoline_stub) addr=0x0000ffff984f1778 offset=0 data=-416] | [trampoline owner=0x0000ffff984f0b40]
         @0x0000ffff984f03f2: 7c01fd306804
relocInfo@0x0000ffff984f03f6 [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=16 data=-720] | [trampoline owner=0x0000ffff984f1000]
         @0x0000ffff984f03f8: 7c01fd456800
relocInfo@0x0000ffff984f03fc [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=0 data=-699] | [trampoline owner=0x0000ffff984f0fac]
         @0x0000ffff984f03fe: 7c01fd5e6800
relocInfo@0x0000ffff984f0402 [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=0 data=-674] | [trampoline owner=0x0000ffff984f0f48]
         @0x0000ffff984f0404: 7c01fd746800
relocInfo@0x0000ffff984f0408 [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=0 data=-652] | [trampoline owner=0x0000ffff984f0ef0]
         @0x0000ffff984f040a: 7c01fd8a6800
relocInfo@0x0000ffff984f040e [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=0 data=-630] | [trampoline owner=0x0000ffff984f0e98]
         @0x0000ffff984f0410: 7c01fda26800
relocInfo@0x0000ffff984f0414 [type=13(trampoline_stub) addr=0x0000ffff984f1788 offset=0 data=-606] | [trampoline owner=0x0000ffff984f0e38]
         @0x0000ffff984f0416: 7c01fc5c6804
relocInfo@0x0000ffff984f041a [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=16 data=-932] | [trampoline owner=0x0000ffff984f1350]
         @0x0000ffff984f041c: 7c01fc686800
relocInfo@0x0000ffff984f0420 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-920] | [trampoline owner=0x0000ffff984f1320]
         @0x0000ffff984f0422: 7c01fc716800
relocInfo@0x0000ffff984f0426 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-911] | [trampoline owner=0x0000ffff984f12fc]
         @0x0000ffff984f0428: 7c01fc7a6800
relocInfo@0x0000ffff984f042c [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-902] | [trampoline owner=0x0000ffff984f12d8]
         @0x0000ffff984f042e: 7c01fc826800
relocInfo@0x0000ffff984f0432 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-894] | [trampoline owner=0x0000ffff984f12b8]
         @0x0000ffff984f0434: 7c01fc8a6800
relocInfo@0x0000ffff984f0438 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-886] | [trampoline owner=0x0000ffff984f1298]
         @0x0000ffff984f043a: 7c01fc926800
relocInfo@0x0000ffff984f043e [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-878] | [trampoline owner=0x0000ffff984f1278]
         @0x0000ffff984f0440: 7c01fc9b6800
relocInfo@0x0000ffff984f0444 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-869] | [trampoline owner=0x0000ffff984f1254]
         @0x0000ffff984f0446: 7c01fca76800
relocInfo@0x0000ffff984f044a [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-857] | [trampoline owner=0x0000ffff984f1224]
         @0x0000ffff984f044c: 7c01fcb36800
relocInfo@0x0000ffff984f0450 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-845] | [trampoline owner=0x0000ffff984f11f4]
         @0x0000ffff984f0452: 7c01fcbb6800
relocInfo@0x0000ffff984f0456 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-837] | [trampoline owner=0x0000ffff984f11d4]
         @0x0000ffff984f0458: 7c01fcc96800
relocInfo@0x0000ffff984f045c [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-823] | [trampoline owner=0x0000ffff984f119c]
         @0x0000ffff984f045e: 7c01fcd16800
relocInfo@0x0000ffff984f0462 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-815] | [trampoline owner=0x0000ffff984f117c]
         @0x0000ffff984f0464: 7c01fcda6800
relocInfo@0x0000ffff984f0468 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-806] | [trampoline owner=0x0000ffff984f1158]
         @0x0000ffff984f046a: 7c01fce36800
relocInfo@0x0000ffff984f046e [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-797] | [trampoline owner=0x0000ffff984f1134]
         @0x0000ffff984f0470: 7c01fcf16800
relocInfo@0x0000ffff984f0474 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-783] | [trampoline owner=0x0000ffff984f10fc]
         @0x0000ffff984f0476: 7c01fcf96800
relocInfo@0x0000ffff984f047a [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-775] | [trampoline owner=0x0000ffff984f10dc]
         @0x0000ffff984f047c: 7c01fd016800
relocInfo@0x0000ffff984f0480 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-767] | [trampoline owner=0x0000ffff984f10bc]
         @0x0000ffff984f0482: 7c01fd096800
relocInfo@0x0000ffff984f0486 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-759] | [trampoline owner=0x0000ffff984f109c]
         @0x0000ffff984f0488: 7c01fd116800
relocInfo@0x0000ffff984f048c [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-751] | [trampoline owner=0x0000ffff984f107c]
         @0x0000ffff984f048e: 7c01fd196800
relocInfo@0x0000ffff984f0492 [type=13(trampoline_stub) addr=0x0000ffff984f1798 offset=0 data=-743] | [trampoline owner=0x0000ffff984f105c]
         @0x0000ffff984f0494: 3004
relocInfo@0x0000ffff984f0494 [type=6(runtime_call) addr=0x0000ffff984f17a8 offset=16] | [destination=0x0000ffff97d576c0]
         @0x0000ffff984f0496: 3004
relocInfo@0x0000ffff984f0496 [type=6(runtime_call) addr=0x0000ffff984f17b8 offset=16] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff984f0498: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
Dependency of type evol_method
  method  = {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280faa70} 'makeDummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
Dependency of type evol_method
  method  = *{method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
Dependency of type evol_method
  method  = {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
Dependency of type evol_method
  method  = {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type leaf_type
  context = Outer
   [nmethod<=klass]Outer
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
Dependency of type unique_concrete_method_4
  context = jdk.random.L32X64MixRandom
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  class   = java.util.random.RandomGenerator
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
   [nmethod<=klass]jdk.random.L32X64MixRandom
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.FloatVector$FloatSpecies
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.FloatVector$FloatSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 336 bytes)
catch_pco = 1040 (pc=0x0000ffff984f08d0, 1 entries)
  bci -1 at scope depth 0 -> pco 3832 (pc=0x0000ffff984f13b8)
catch_pco = 1504 (pc=0x0000ffff984f0aa0, 1 entries)
  bci -1 at scope depth 0 -> pco 3796 (pc=0x0000ffff984f1394)
catch_pco = 2428 (pc=0x0000ffff984f0e3c, 1 entries)
  bci -1 at scope depth 0 -> pco 3824 (pc=0x0000ffff984f13b0)
catch_pco = 2476 (pc=0x0000ffff984f0e6c, 1 entries)
  bci -1 at scope depth 0 -> pco 3820 (pc=0x0000ffff984f13ac)
catch_pco = 2524 (pc=0x0000ffff984f0e9c, 1 entries)
  bci -1 at scope depth 0 -> pco 3812 (pc=0x0000ffff984f13a4)
catch_pco = 2564 (pc=0x0000ffff984f0ec4, 1 entries)
  bci -1 at scope depth 0 -> pco 3808 (pc=0x0000ffff984f13a0)
catch_pco = 2612 (pc=0x0000ffff984f0ef4, 1 entries)
  bci -1 at scope depth 0 -> pco 3800 (pc=0x0000ffff984f1398)
catch_pco = 2648 (pc=0x0000ffff984f0f18, 1 entries)
  bci -1 at scope depth 0 -> pco 3792 (pc=0x0000ffff984f1390)
catch_pco = 2700 (pc=0x0000ffff984f0f4c, 1 entries)
  bci -1 at scope depth 0 -> pco 3784 (pc=0x0000ffff984f1388)
catch_pco = 2752 (pc=0x0000ffff984f0f80, 1 entries)
  bci -1 at scope depth 0 -> pco 3780 (pc=0x0000ffff984f1384)
catch_pco = 2800 (pc=0x0000ffff984f0fb0, 1 entries)
  bci -1 at scope depth 0 -> pco 3772 (pc=0x0000ffff984f137c)
catch_pco = 2844 (pc=0x0000ffff984f0fdc, 1 entries)
  bci -1 at scope depth 0 -> pco 3768 (pc=0x0000ffff984f1378)
catch_pco = 2884 (pc=0x0000ffff984f1004, 1 entries)
  bci -1 at scope depth 0 -> pco 3760 (pc=0x0000ffff984f1370)
catch_pco = 2924 (pc=0x0000ffff984f102c, 1 entries)
  bci -1 at scope depth 0 -> pco 3756 (pc=0x0000ffff984f136c)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 7 entries, 60 bytes):
{
   < 0x0000ffff984f05cc, 0x0000ffff984f133c > < 0x0000ffff984f05d0, 0x0000ffff984f1210 > < 0x0000ffff984f05e8, 0x0000ffff984f1210 > 
   < 0x0000ffff984f09a8, 0x0000ffff984f12b4 > < 0x0000ffff984f09c4, 0x0000ffff984f12d4 > < 0x0000ffff984f09dc, 0x0000ffff984f12f4 > 
   < 0x0000ffff984f0ad4, 0x0000ffff984f1318 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
# 2: 0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
# 3: 0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
# 4: 0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
# 5: 0x0000080000ad4da0 a 'jdk/incubator/vector/VectorOperators$AssociativeImpl'{0x0000080000ad4da0}
# 6: 0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
# 7: 0x0000080000b7b0f0 a 'jdk/incubator/vector/FloatVector$FloatSpecies$$Lambda+0x000000fc0105e5b0'{0x0000080000b7b0f0}
# 8: 0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
# 9: 0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
#10: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
#11: 0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 2: 0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 3: 0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 4: 0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
# 5: 0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
# 6: 0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 7: 0x000000fc000020d8 {type array float}
# 8: 0x000000fc01005d40 'Outer'[]
# 9: 0x000000fc01042278 'jdk/incubator/vector/FloatVector'
#10: 0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
#11: 0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#12: 0x000000fc01050f98 'jdk/incubator/vector/Float128Vector'
#13: 0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#14: 0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#15: 0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#16: 0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#17: 0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
#18: 0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#19: 0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#20: 0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#21: 0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#22: 0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#23: 0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#24: 0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#25: 0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#26: 0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
#27: 0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
#28: 0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
#29: 0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
#30: 0x000000fc01001450 'InnerFloat'
#31: 0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#32: 0x000000fc01053380 'jdk/incubator/vector/FloatMaxVector'
#33: 0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#34: 0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
#35: 0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#36: 0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#37: 0x0000000000000000 nullptr-oop
#38: 0x0000fff9280faa70 {method} {0x0000fff9280faa70} 'makeDummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#39: 0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#40: 0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
#41: 0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
#42: 0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
#43: 0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#44: 0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#45: 0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#46: 0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#47: 0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#48: 0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#49: 0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#50: 0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
#51: 0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
#52: 0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
#53: 0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
#54: 0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
#55: 0x000000fc01005b28 'Outer'
#56: 0x000000fc01001870 'jdk/random/L32X64MixRandom'
#57: 0x000000fc00174f50 'java/util/random/RandomGenerator'
#58: 0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
#59: 0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#60: 0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
#61: 0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#62: 0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r020 c_rarg1:c_rarg1   : parm 0: TestZGCSpillingAtLoadBarrierStub:NotNull *
#r022 c_rarg2:c_rarg2   : parm 1: float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r024 c_rarg3:c_rarg3   : parm 2: Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *
# -- Old r31_sp -- Framesize: 112 --
#r223 r31_sp+108: in_preserve
#r222 r31_sp+104: return address
#r221 r31_sp+100: in_preserve
#r220 r31_sp+96: saved fp register
#r219 r31_sp+92: pad2, stack alignment
#r218 r31_sp+88: pad2, stack alignment
#r217 r31_sp+84: Fixed slot 1
#r216 r31_sp+80: Fixed slot 0
#r243 r31_sp+76: spill
#r242 r31_sp+72: spill
#r241 r31_sp+68: spill
#r240 r31_sp+64: spill
#r239 r31_sp+60: spill
#r238 r31_sp+56: spill
#r237 r31_sp+52: spill
#r236 r31_sp+48: spill
#r235 r31_sp+44: spill
#r234 r31_sp+40: spill
#r233 r31_sp+36: spill
#r232 r31_sp+32: spill
#r231 r31_sp+28: spill
#r230 r31_sp+24: spill
#r229 r31_sp+20: spill
#r228 r31_sp+16: spill
#r227 r31_sp+12: spill
#r226 r31_sp+ 8: spill
#r225 r31_sp+ 4: spill
#r224 r31_sp+ 0: spill
#
----------------------- MetaData before Compile_id = 560 ------------------------
{method}
 - this oop:          0x0000fff928401c58
 - method holder:     'TestZGCSpillingAtLoadBarrierStub'
 - constants:         0x0000fff928401448 constant pool [132] {0x0000fff928401448} for 'TestZGCSpillingAtLoadBarrierStub' cache=0x0000fff928402a58
 - access:            0x0  
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'test_float_vector_128'
 - signature:         '([F[LOuter;)V'
 - max stack:         4
 - max locals:        9
 - size of params:    3
 - method size:       14
 - highest level:     3
 - vtable index:      9
 - i2i entry:         0x0000ffff97bc73c0
 - adapters:          AHE@0x0000ffffa82a8060: 0xbbb i2c: 0x0000ffff97be4c40 c2i: 0x0000ffff97be4ca8 c2iUV: 0x0000ffff97be4c74 c2iNCI: 0x0000ffff97be4ce4
 - compiled entry     0x0000ffff90941e40
 - code size:         86
 - code start:        0x0000fff928401bf0
 - code end (excl):   0x0000fff928401c46
 - method data:       0x0000fff92841cca8
 - checked ex length: 0
 - linenumber start:  0x0000fff928401c46
 - localvar length:   0
 - compiled code: nmethod6199  552       3       TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 (86 bytes)

------------------------ OptoAssembly for Compile_id = 560 -----------------------
#
#  void ( TestZGCSpillingAtLoadBarrierStub:NotNull *, float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) * )
#
000     N485: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # MachUEPNode
	ldrw rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	ldrw r10, [rscratch2 + CompiledICData::speculated_klass_offset()]	# compressed klass
	cmpw rscratch1, r10
	bne, SharedRuntime::_ic_miss_stub


020     B1: #	out( B28 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang size=112
	sub  sp, sp, #112
	stp  rfp, lr, [sp, #96]
	ldr  rscratch1, [guard]
	dmb ishld
	ldr  rscratch2, [rthread, #thread_disarmed_guard_value_offset]
	cmp  rscratch1, rscratch2
	b.eq skip
	blr #nmethod_entry_barrier_stub
	b skip
	guard: int
	
	skip:
	
07c     spill R2 -> R13	# spill size = 64
080     ldrw  R14, [R2, #12]	# range
084     NullCheck R2

084     B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999999
084     cmpw  R14, #0	# unsigned
088     bls  B18	# unsigned  P=0.003861 C=66818.000000

08c     B3: #	out( B23 B4 ) <- in( B2 )  Freq: 0.996138
08c     mov  R10, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
098     ldrw  R16, [R10, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
09c     ldrw  R15, [R10, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
0a0     sxtw  R10, R14	# i2l
0a4     add R11, R10, #3
0a8     and  R11, R11, #-4	# int
0ac     add R10, R10, #-3
0b0     mov R12, #-4	# long
0b4     add  R11, R12, l2i(R11), sxtw
0b8     addw R17, R14, #-3
0bc     fmovs  V16, #0.000000
0c0     cblt   R17, B23 # int  P=0.000001 C=-1.000000

0c4     B4: #	out( B23 B5 ) <- in( B3 )  Freq: 0.996137
0c4     cmpw  R14, #3
0c8     beq  B23  P=0.000001 C=-1.000000

0cc     B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.996136
0cc     cmp  R11, R10
0d0     bhs  B23	# unsigned  P=0.000001 C=-1.000000

0d4     B6: #	out( B23 B7 ) <- in( B5 )  Freq: 0.996135
0d4     spill R3 -> R12	# spill size = 64
0d8     ldrw  R17, [R3, #12]	# range
0dc     NullCheck R3

0dc     B7: #	out( B24 B8 ) <- in( B6 )  Freq: 0.996134
0dc     cmpw  R14, #2147483644
0e4     bgt  B24  P=0.000001 C=-1.000000

0e8     B8: #	out( B9 ) <- in( B7 )  Freq: 0.996133
0e8     mov  R10, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
0f4     ldrw  R1, [R10, #12]	# int ! Field: jdk/random/L32X64MixRandom.a
0f8     ldrw  R2, [R10, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
0fc      -- 	// R28=Thread::current(), empty
0fc     mov R29, #0	# int
100     replicateF V16, V16

104     B9: #	out( B10 ) <- in( B8 B17 ) Loop( B9-B17 ) Freq: 214.447
104     subw  R10, R14, R29
108     cmpw  R14, R29
10c     cselw R10, zr, R10 lt	# signed, int
110     cmpw  R10, #4000	# unsigned
114     mov R18, #4000	# int
118     cselw R10, R18, R10 hi	# unsigned, int
11c     addw  R18, R10, R29

120     B10: #	out( B21 B11 ) <- in( B9 B16 ) Loop( B10-B16 inner  strip mined) Freq: 55494.8
120     addw  R11, R16, R15
124     eorw  R10, R11, R11, LSR #16
128     mov R11, #-747796405	# int
130     mulw  R11, R10, R11
134     eorw  R10, R11, R11, LSR #16
138     mov R0, #-747796405	# int
140     mulw  R10, R10, R0
144     eorw  R11, R10, R10, LSR #16
148     andsw  R3, R11, #1023	# int
14c     add R10, R12, R3, I2L #3	# ptr
150     add R11, R13, R29, I2L #2	# ptr
154     loadV16 V17, [R11, #16]	# vector (128 bits)
158     eorw  R0, R2, R16	# int
15c     mov R2, #-1380669139	# int
164     madd  R15, R15, R2, R1
168     eorw  R11, R0, R16, ROR #6
16c     eorw  R16, R11, R0, LSL #9
170     ror    R2, R0, #19
174     mov  R11, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
180     strw  R15, [R11, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
184     strw  R2, [R11, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
188     strw  R16, [R11, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
18c     cmpw  R3, R17	# unsigned
190     bhs  B21	# unsigned  P=0.000001 C=-1.000000

194     B11: #	out( B22 B12 ) <- in( B10 )  Freq: 55494.7
194     ldr  R11, [R10, #16]
1a0     cbeq   R11, B22  P=0.000001 C=-1.000000

1a4     B12: #	out( B26 B13 ) <- in( B11 )  Freq: 55494.7
1a4     ldr  R10, [R11, #16] ! Field: Outer.field
1b0     ldrw  R11, [R10, #8]	# compressed class ptr
1b4     NullCheck R10

1b4     B13: #	out( B25 B14 ) <- in( B12 )  Freq: 55494.6
1b4     mov  R0, narrowklass: precise InnerFloat: 0x0000fff8f828e7e8:Constant:exact *	# compressed klass ptr
1bc     cmp  R11, R0	 // compressed ptr
1c0     bne  B25	# unsigned  P=0.000000 C=-1.000000

1c4     B14: #	out( B19 B15 ) <- in( B13 )  Freq: 55494.6
1c4     # checkcastPP of R10
1c4     ldrs  V18, [R10, #12]	# float ! Field: InnerFloat.data
1c8     ldr  R0, [R28, #456]	# ptr
1cc     ldr  R10, [R28, #472]	# ptr
1d0     add R11, R0, #32	# ptr
1d4     cmp  R11, R10	 // ptr
1d8     bhs  B19	# unsigned  P=0.000100 C=-1.000000

1dc     B15: #	out( B16 ) <- in( B14 )  Freq: 55489
1dc     str  R11, [R28, #456]	# ptr
1e0     mov R10, #1	# long
1e4     str  R10, [R0]	# int
1e8     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
1ec     mov  R3, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
1f4     strw  R3, [R0, #8]	# compressed klass ptr
1f8     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
1fc     mov R10, #4	# int
200     strw  R10, [R0, #12]	# int
204     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
208     add R10, R0, #16	# ptr
20c     ClearArray #2, R10

210     B16: #	out( B10 B17 ) <- in( B20 B15 )  Freq: 55494.6
210     vaddF V16, V16, V17
214     replicateF V17, V18
218     
218     # checkcastPP of R0
218     storeV16 [R0, #16], V16	# vector (128 bits)
21c     vaddF V16, V16, V17
220     addw R29, R29, #4
224     cmpw  R29, R18
228     blt B10 	// counted loop end  P=0.996139 C=66558.000000

22c     B17: #	out( B9 B18 ) <- in( B16 )  Freq: 214.278
22c     ldr  R10, [R28, #1184]	# ptr
230     ldrw zr, [R10]	# Safepoint: poll for GC        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:82 (line 49) L[0]=_ L[1]=R13 L[2]=R12 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=R29 L[6]=_ L[7]=_ L[8]=_
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=V16 }
        # OopMap {r12=Oop r13=Oop off=560/0x230}
250     cmpw  R29, R14
254     blt  B9  P=0.996139 C=66558.000000

258     B18: #	out( N485 ) <- in( B17 B2 )  Freq: 0.831244
258     # pop frame 112
	ldp  lr, rfp, [sp,#96]
	add  sp, sp, #112
	# test polling word
	ldr  rscratch1, [rthread],#1176
	cmp  sp, rscratch1
	bhi #slow_path
26c     ret	// return register

288     B19: #	out( B27 B20 ) <- in( B14 )  Freq: 5.55038
288     spill V18 -> [sp, #60]	# spill size = 32
28c     spill V17 -> [sp, #64]	# vector spill size = 128
290     spill R18 -> [sp, #56]	# spill size = 32
294     spill R2 -> [sp, #52]	# spill size = 32
298     spill R1 -> [sp, #48]	# spill size = 32
298     spill R17 -> [sp, #28]	# spill size = 32
29c     spill V16 -> [sp, #32]	# vector spill size = 128
2a0     spill R15 -> [sp, #24]	# spill size = 32
2a4     spill R16 -> [sp, #20]	# spill size = 32
2a8     spill R14 -> [sp, #16]	# spill size = 32
2a8     spill R12 -> [sp, #8]	# spill size = 64
2ac     spill R13 -> [sp, #0]	# spill size = 64
2ac     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
2b8     mov R2, #4	# int
2bc     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f4133aa8 STK[2]=#null STK[3]=#Ptr0x0000fff8f4133b88 STK[4]=#4 STK[5]=#ScObj0 STK[6]=#ScObj1 STK[7]=#null STK[8]=#Ptr0x0000fff8f40b1900
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #64 }
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.Float128Vector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:61 (line 53) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f82944f8 L[4]=_ L[5]=R29 L[6]=_ L[7]=_ L[8]=r31_sp + #60
        # OopMap {[0]=Oop [8]=Oop off=704/0x2c0}

2d0     B20: #	out( B16 ) <- in( B19 )  Freq: 5.55027
        # Block is sole successor of call
2d0     spill [sp, #0] -> R13	# spill size = 64
2d4     spill [sp, #8] -> R12	# spill size = 64
2d4     spill [sp, #16] -> R14	# spill size = 32
2d8     spill [sp, #20] -> R16	# spill size = 32
2d8     spill [sp, #24] -> R15	# spill size = 32
2dc     spill [sp, #32] -> V16	# vector spill size = 128
2e0     spill [sp, #28] -> R17	# spill size = 32
2e4     spill [sp, #48] -> R1	# spill size = 32
2e8     spill [sp, #52] -> R2	# spill size = 32
2e8     spill [sp, #56] -> R18	# spill size = 32
2ec     spill [sp, #64] -> V17	# vector spill size = 128
2f0     spill [sp, #60] -> V18	# spill size = 32
2f4     b  B16

2f8     B21: #	out( N485 ) <- in( B10 )  Freq: 0.0562317
2f8     mov R1, #-28	# int
2fc     spill R13 -> [sp, #0]	# spill size = 64
300     spill R12 -> [sp, #16]	# spill size = 64
304     spill R3 -> [sp, #24]	# spill size = 32
308     spill V16 -> [sp, #32]	# vector spill size = 128
30c     spill V17 -> [sp, #48]	# vector spill size = 128
310     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:41 (line 51) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #16 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=r31_sp + #16 STK[1]=r31_sp + #24
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #48 }
        # OopMap {[0]=Oop [16]=Oop off=788/0x314}
320     ShouldNotReachHere

32c     B22: #	out( N485 ) <- in( B11 )  Freq: 0.0562316
32c     mov R1, #-10	# int
330     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:42 (line 51) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#null
        # OopMap {off=820/0x334}
340     ShouldNotReachHere

34c     B23: #	out( N485 ) <- in( B6 B3 B4 B5 )  Freq: 4.02423e-06
34c     mov R1, #-138	# int
350     spill R2 -> R29	# spill size = 64
354     spill R3 -> [sp, #0]	# spill size = 64
358     spill R14 -> [sp, #8]	# spill size = 32
35c     replicateF V16, V16
360     spill V16 -> [sp, #16]	# vector spill size = 128
364     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:17 (line 49) L[0]=_ L[1]=R29 L[2]=r31_sp + #0 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=#0 L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=r31_sp + #8
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #16 }
        # OopMap {rfp=Oop [0]=Oop off=872/0x368}
374     ShouldNotReachHere

380     B24: #	out( N485 ) <- in( B7 )  Freq: 1.00936e-06
380     mov R1, #-146	# int
384     spill R2 -> R29	# spill size = 64
388     spill R3 -> [sp, #0]	# spill size = 64
38c     spill R14 -> [sp, #8]	# spill size = 32
390     replicateF V16, V16
394     spill V16 -> [sp, #16]	# vector spill size = 128
398     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:17 (line 49) L[0]=_ L[1]=R29 L[2]=r31_sp + #0 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=#0 L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=r31_sp + #8
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #16 }
        # OopMap {rfp=Oop [0]=Oop off=924/0x39c}
3a8     ShouldNotReachHere

3b4     B25: #	out( N485 ) <- in( B13 )  Freq: 1e-35
3b4     mov R1, #-34	# int
3b8     spill R13 -> [sp, #0]	# spill size = 64
3bc     spill R12 -> [sp, #8]	# spill size = 64
3bc     spill R10 -> [sp, #16]	# spill size = 64
3c0     spill V16 -> [sp, #32]	# vector spill size = 128
3c4     spill V17 -> [sp, #48]	# vector spill size = 128
3c8     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:49 (line 52) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=r31_sp + #16
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #48 }
        # OopMap {[0]=Oop [8]=Oop [16]=Oop off=972/0x3cc}
3d8     ShouldNotReachHere

3e4     B26: #	out( N485 ) <- in( B12 )  Freq: 0.0562316
3e4     mov R1, #-12	# int
3e8     spill R13 -> [sp, #0]	# spill size = 64
3ec     spill R12 -> [sp, #8]	# spill size = 64
3ec     spill V16 -> [sp, #16]	# vector spill size = 128
3f0     spill V17 -> [sp, #32]	# vector spill size = 128
3f4     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:49 (line 52) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f82944f8 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=#null
        # ScObj0 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #16 }
        # ScObj1 jdk/incubator/vector/Float128Vector={ [payload :0]=r31_sp + #32 }
        # OopMap {[0]=Oop [8]=Oop off=1016/0x3f8}
404     ShouldNotReachHere

410     B27: #	out( N485 ) <- in( B19 )  Freq: 5.55038e-05
410      -- 	// exception oop; no code emitted
410     spill R0 -> R1	# spill size = 64
414     # pop frame 112
	ldp  lr, rfp, [sp,#96]
	add  sp, sp, #112
	
41c     b rethrow_stub

428     B28: #	out( N485 ) <- in( B1 )  Freq: 1.01328e-06
428     mov R1, #-10	# int
42c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 @ bci:16 (line 49) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=_ STK[1]=#null
        # OopMap {off=1072/0x430}
43c     ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 6201  560       4       TestZGCSpillingAtLoadBarrierStub::test_float_vector_128 (86 bytes)
 total in heap  [0x0000ffff984f2c90,0x0000ffff984f3d20] = 4240
 relocation     [0x0000ffff984f2e00,0x0000ffff984f2ea8] = 168
 main code      [0x0000ffff984f2ec0,0x0000ffff984f33e0] = 1312
 stub code      [0x0000ffff984f33e0,0x0000ffff984f3420] = 64
 oops           [0x0000ffff984f3420,0x0000ffff984f3458] = 56
 metadata       [0x0000ffff984f3458,0x0000ffff984f3648] = 496
 scopes data    [0x0000ffff984f3648,0x0000ffff984f3910] = 712
 scopes pcs     [0x0000ffff984f3910,0x0000ffff984f3c60] = 848
 dependencies   [0x0000ffff984f3c60,0x0000ffff984f3ce8] = 136
 handler table  [0x0000ffff984f3ce8,0x0000ffff984f3d00] = 24
 nul chk table  [0x0000ffff984f3d00,0x0000ffff984f3d20] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;; N485: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f2ec0:   nop
[Entry Point]
  # {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[F'
  # parm1:    c_rarg3:c_rarg3 
                        = '[LOuter;'
  #           [sp+0x70]  (sp of caller)
  0x0000ffff984f2ec4:   ldr	w8, [x1, #8]
  0x0000ffff984f2ec8:   ldr	w10, [x9, #8]
  0x0000ffff984f2ecc:   cmp	w8, w10
  0x0000ffff984f2ed0:   b.eq	0x0000ffff984f2ee0  // b.none
  0x0000ffff984f2ed4:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff984f2ed8:   add	x8, x8, #0xec0
  0x0000ffff984f2edc:   br	x8
[Verified Entry Point]
 ;; B1: #	out( B28 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f2ee0:   nop
  0x0000ffff984f2ee4:   ptrue	p7.b
  0x0000ffff984f2ee8:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff984f2eec:   str	xzr, [x9]
  0x0000ffff984f2ef0:   sub	sp, sp, #0x70
  0x0000ffff984f2ef4:   stp	x29, x30, [sp, #96]
  0x0000ffff984f2ef8:   ldrb	w8, [x28, #1208]
  0x0000ffff984f2efc:   cbz	x8, 0x0000ffff984f2f14
 ;; 0xFFFFAECE431C
  0x0000ffff984f2f00:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f2f04:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f2f08:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f2f0c:   mov	x0, x28
  0x0000ffff984f2f10:   blr	x8
  0x0000ffff984f2f14:   ldr	w8, 0x0000ffff984f33d8
 ;; 0xFFFFB0903FF8
  0x0000ffff984f2f18:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff984f2f1c:   movk	x9, #0xb090, lsl #16
  0x0000ffff984f2f20:   movk	x9, #0xffff, lsl #32
  0x0000ffff984f2f24:   orr	x9, x9, x8, lsr #32
  0x0000ffff984f2f28:   ldr	w9, [x9]
  0x0000ffff984f2f2c:   orr	x8, x8, x9, lsl #32
  0x0000ffff984f2f30:   ldr	x9, [x28, #88]
  0x0000ffff984f2f34:   cmp	x8, x9
  0x0000ffff984f2f38:   b.ne	0x0000ffff984f33c4  // b.any;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
  0x0000ffff984f2f3c:   mov	x13, x2
  0x0000ffff984f2f40:   ldr	w14, [x2, #12]              ; implicit exception: dispatches to 0x0000ffff984f32e8
 ;; B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999999
  0x0000ffff984f2f44:   cmp	w14, #0x0
  0x0000ffff984f2f48:   b.ls	0x0000ffff984f3118  // b.plast;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; B3: #	out( B23 B4 ) <- in( B2 )  Freq: 0.996138
 ;; 0xFFF8F409C3F8
  0x0000ffff984f2f4c:   mov	x10, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f2f50:   movk	x10, #0xa4, lsl #16
  0x0000ffff984f2f54:   movk	x10, #0x800, lsl #32
  0x0000ffff984f2f58:   ldr	w16, [x10, #20]             ;*getfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@5 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f2f5c:   ldr	w15, [x10, #16]             ;*getfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@1 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f2f60:   sxtw	x10, w14
  0x0000ffff984f2f64:   add	x11, x10, #0x3
  0x0000ffff984f2f68:   and	x11, x11, #0xfffffffffffffffc
  0x0000ffff984f2f6c:   sub	x10, x10, #0x3
 ;; 0xFFFFFFFFFFFFFFFC
  0x0000ffff984f2f70:   orr	x12, xzr, #0xfffffffffffffffc
  0x0000ffff984f2f74:   add	x11, x12, w11, sxtw
  0x0000ffff984f2f78:   sub	w17, w14, #0x3
  0x0000ffff984f2f7c:   movi	v16.2s, #0x0
  0x0000ffff984f2f80:   tbnz	w17, #31, 0x0000ffff984f320c
 ;; B4: #	out( B23 B5 ) <- in( B3 )  Freq: 0.996137
  0x0000ffff984f2f84:   cmp	w14, #0x3
  0x0000ffff984f2f88:   b.eq	0x0000ffff984f320c  // b.none
 ;; B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.996136
  0x0000ffff984f2f8c:   cmp	x11, x10
  0x0000ffff984f2f90:   b.cs	0x0000ffff984f320c  // b.hs, b.nlast
 ;; B6: #	out( B23 B7 ) <- in( B5 )  Freq: 0.996135
  0x0000ffff984f2f94:   mov	x12, x3
  0x0000ffff984f2f98:   ldr	w17, [x3, #12]              ; implicit exception: dispatches to 0x0000ffff984f320c
 ;; B7: #	out( B24 B8 ) <- in( B6 )  Freq: 0.996134
 ;; 0x7FFFFFFC
  0x0000ffff984f2f9c:   mov	w8, #0x7ffffffc            	// #2147483644
  0x0000ffff984f2fa0:   cmp	w14, w8
  0x0000ffff984f2fa4:   b.gt	0x0000ffff984f3240
 ;; B8: #	out( B9 ) <- in( B7 )  Freq: 0.996133
 ;; 0xFFF8F409C3F8
  0x0000ffff984f2fa8:   mov	x10, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f2fac:   movk	x10, #0xa4, lsl #16
  0x0000ffff984f2fb0:   movk	x10, #0x800, lsl #32
  0x0000ffff984f2fb4:   ldr	w1, [x10, #12]
  0x0000ffff984f2fb8:   ldr	w2, [x10, #24]
  0x0000ffff984f2fbc:   mov	w29, wzr
  0x0000ffff984f2fc0:   dup	v16.4s, v16.s[0]
 ;; B9: #	out( B10 ) <- in( B8 B17 ) Loop( B9-B17 ) Freq: 214.447
  0x0000ffff984f2fc4:   sub	w10, w14, w29
  0x0000ffff984f2fc8:   cmp	w14, w29
  0x0000ffff984f2fcc:   csel	w10, wzr, w10, lt  // lt = tstop
  0x0000ffff984f2fd0:   cmp	w10, #0xfa0
 ;; 0xFA0
  0x0000ffff984f2fd4:   mov	w18, #0xfa0                 	// #4000
  0x0000ffff984f2fd8:   csel	w10, w18, w10, hi  // hi = pmore
  0x0000ffff984f2fdc:   add	w18, w10, w29               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; B10: #	out( B21 B11 ) <- in( B9 B16 ) Loop( B10-B16 inner  strip mined) Freq: 55494.8
  0x0000ffff984f2fe0:   add	w11, w16, w15               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@8 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f2fe4:   eor	w10, w11, w11, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xD36D884B
  0x0000ffff984f2fe8:   mov	w11, #0x884b                	// #34891
  0x0000ffff984f2fec:   movk	w11, #0xd36d, lsl #16
  0x0000ffff984f2ff0:   mul	w11, w10, w11               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f2ff4:   eor	w10, w11, w11, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; 0xD36D884B
  0x0000ffff984f2ff8:   mov	w0, #0x884b                	// #34891
  0x0000ffff984f2ffc:   movk	w0, #0xd36d, lsl #16
  0x0000ffff984f3000:   mul	w10, w10, w0                ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f3004:   eor	w11, w10, w10, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f3008:   and	w3, w11, #0x3ff             ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f300c:   add	x10, x12, w3, sxtw #3
  0x0000ffff984f3010:   add	x11, x13, w29, sxtw #2      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f3014:   ldr	q17, [x11, #16]             ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
  0x0000ffff984f3018:   eor	w0, w2, w16                 ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@41 (line 243)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
 ;; 0xADB4A92D
  0x0000ffff984f301c:   mov	w2, #0xa92d                	// #43309
  0x0000ffff984f3020:   movk	w2, #0xadb4, lsl #16
  0x0000ffff984f3024:   madd	w15, w15, w2, w1            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@25 (line 238)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f3028:   eor	w11, w0, w16, ror #6        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f302c:   eor	w16, w11, w0, lsl #9        ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@57 (line 245)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f3030:   ror	w2, w0, #19                 ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Integer::rotateLeft@7 (line 1673)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@62 (line 246)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
 ;; 0xFFF8F409C3F8
  0x0000ffff984f3034:   mov	x11, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f3038:   movk	x11, #0xa4, lsl #16
  0x0000ffff984f303c:   movk	x11, #0x800, lsl #32
  0x0000ffff984f3040:   str	w15, [x11, #16]             ;*putfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@26 (line 238)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f3044:   str	w2, [x11, #24]              ;*putfield x1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@73 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f3048:   str	w16, [x11, #20]             ;*putfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@68 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
  0x0000ffff984f304c:   cmp	w3, w17
  0x0000ffff984f3050:   b.cs	0x0000ffff984f31b8  // b.hs, b.nlast
 ;; B11: #	out( B22 B12 ) <- in( B10 )  Freq: 55494.7
  0x0000ffff984f3054:   ldr	x11, [x10, #16]
  0x0000ffff984f3058:   tbnz	w11, #12, 0x0000ffff984f3308;   {other}
  0x0000ffff984f305c:   lsr	x11, x11, #16
  0x0000ffff984f3060:   cbz	x11, 0x0000ffff984f31ec
 ;; B12: #	out( B26 B13 ) <- in( B11 )  Freq: 55494.7
  0x0000ffff984f3064:   ldr	x10, [x11, #16]
  0x0000ffff984f3068:   tbnz	w10, #12, 0x0000ffff984f335c;   {other}
  0x0000ffff984f306c:   lsr	x10, x10, #16
  0x0000ffff984f3070:   ldr	w11, [x10, #8]              ; implicit exception: dispatches to 0x0000ffff984f32a4
 ;; B13: #	out( B25 B14 ) <- in( B12 )  Freq: 55494.6
  0x0000ffff984f3074:   mov	x0, #0x1000000             	// #16777216
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff984f3078:   movk	x0, #0x1450
  0x0000ffff984f307c:   cmp	w11, w0                     ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f3080:   b.ne	0x0000ffff984f3274  // b.any;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; B14: #	out( B19 B15 ) <- in( B13 )  Freq: 55494.6
  0x0000ffff984f3084:   ldr	s18, [x10, #12]             ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
  0x0000ffff984f3088:   ldr	x0, [x28, #456]
  0x0000ffff984f308c:   ldr	x10, [x28, #472]
  0x0000ffff984f3090:   add	x11, x0, #0x20
  0x0000ffff984f3094:   cmp	x11, x10
  0x0000ffff984f3098:   b.cs	0x0000ffff984f3148  // b.hs, b.nlast
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 55489
  0x0000ffff984f309c:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f30a0:   orr	x10, xzr, #0x1
  0x0000ffff984f30a4:   str	x10, [x0]
  0x0000ffff984f30a8:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f30ac:   movz	x3, #0x0, lsl #16           ;   {metadata({type array float})}
  0x0000ffff984f30b0:   movk	x3, #0x20d8
  0x0000ffff984f30b4:   str	w3, [x0, #8]
  0x0000ffff984f30b8:   prfm	pstl1keep, [x11, #256]
 ;; 0x4
  0x0000ffff984f30bc:   orr	w10, wzr, #0x4
  0x0000ffff984f30c0:   str	w10, [x0, #12]
  0x0000ffff984f30c4:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f30c8:   add	x10, x0, #0x10
 ;; zero_words (count = 2) {
  0x0000ffff984f30cc:   stp	xzr, xzr, [x10]             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; } zero_words
 ;; B16: #	out( B10 B17 ) <- in( B20 B15 )  Freq: 55494.6
  0x0000ffff984f30d0:   fadd	v16.4s, v16.4s, v17.4s      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
  0x0000ffff984f30d4:   dup	v17.4s, v18.s[0]
  0x0000ffff984f30d8:   str	q16, [x0, #16]
  0x0000ffff984f30dc:   fadd	v16.4s, v16.4s, v17.4s      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f30e0:   add	w29, w29, #0x4              ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
  0x0000ffff984f30e4:   cmp	w29, w18
  0x0000ffff984f30e8:   b.lt	0x0000ffff984f2fe0  // b.tstop
 ;; B17: #	out( B9 B18 ) <- in( B16 )  Freq: 214.278
  0x0000ffff984f30ec:   ldr	x10, [x28, #1184]           ; ImmutableOopMap {r12=Oop r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)
  0x0000ffff984f30f0:   ldr	wzr, [x10]                  ;   {poll}
  0x0000ffff984f30f4:   ldrb	w8, [x28, #1208]
  0x0000ffff984f30f8:   cbz	x8, 0x0000ffff984f3110
 ;; 0xFFFFAECE431C
  0x0000ffff984f30fc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f3100:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f3104:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f3108:   mov	x0, x28
  0x0000ffff984f310c:   blr	x8
  0x0000ffff984f3110:   cmp	w29, w14
  0x0000ffff984f3114:   b.lt	0x0000ffff984f2fc4  // b.tstop;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
 ;; B18: #	out( N485 ) <- in( B17 B2 )  Freq: 0.831244
  0x0000ffff984f3118:   ldp	x29, x30, [sp, #96]
  0x0000ffff984f311c:   add	sp, sp, #0x70
  0x0000ffff984f3120:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff984f3124:   cmp	sp, x8
  0x0000ffff984f3128:   b.hi	0x0000ffff984f33b0  // b.pmore
  0x0000ffff984f312c:   cntp	x8, p7, p7.b
  0x0000ffff984f3130:   decb	x8
  0x0000ffff984f3134:   cbz	x8, 0x0000ffff984f3144
 ;; Error: the preserved predicate register (p7) elements are not all true
  0x0000ffff984f3138:   dcps1	#0xdeae
  0x0000ffff984f313c:   .inst	0xafde9b00 ; undefined
  0x0000ffff984f3140:   udf	#65535
  0x0000ffff984f3144:   ret
 ;; B19: #	out( B27 B20 ) <- in( B14 )  Freq: 5.55038
  0x0000ffff984f3148:   str	s18, [sp, #60]
  0x0000ffff984f314c:   str	q17, [sp, #64]
  0x0000ffff984f3150:   str	w18, [sp, #56]
 ;; merged str pair
  0x0000ffff984f3154:   stp	w1, w2, [sp, #48]
  0x0000ffff984f3158:   str	w17, [sp, #28]
  0x0000ffff984f315c:   str	q16, [sp, #32]
  0x0000ffff984f3160:   str	w15, [sp, #24]
 ;; merged str pair
  0x0000ffff984f3164:   stp	w14, w16, [sp, #16]
 ;; merged str pair
  0x0000ffff984f3168:   stp	x13, x12, [sp]              ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
 ;; 0xFC000020D8
  0x0000ffff984f316c:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f3170:   movk	x1, #0x0, lsl #16
  0x0000ffff984f3174:   movk	x1, #0xfc, lsl #32
 ;; 0x4
  0x0000ffff984f3178:   orr	w2, wzr, #0x4
  0x0000ffff984f317c:   bl	0x0000ffff984f33e0          ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f3180:   nop                                 ;   {other}
  0x0000ffff984f3184:   movk	xzr, #0x4f0
  0x0000ffff984f3188:   movk	xzr, #0x100
  0x0000ffff984f318c:   ptrue	p7.b
 ;; B20: #	out( B16 ) <- in( B19 )  Freq: 5.55027
 ;; merged ldr pair
  0x0000ffff984f3190:   ldp	x13, x12, [sp]
 ;; merged ldr pair
  0x0000ffff984f3194:   ldp	w14, w16, [sp, #16]
  0x0000ffff984f3198:   ldr	w15, [sp, #24]
  0x0000ffff984f319c:   ldr	q16, [sp, #32]
  0x0000ffff984f31a0:   ldr	w17, [sp, #28]
 ;; merged ldr pair
  0x0000ffff984f31a4:   ldp	w1, w2, [sp, #48]
  0x0000ffff984f31a8:   ldr	w18, [sp, #56]
  0x0000ffff984f31ac:   ldr	q17, [sp, #64]
  0x0000ffff984f31b0:   ldr	s18, [sp, #60]
  0x0000ffff984f31b4:   b	0x0000ffff984f30d0
 ;; B21: #	out( N485 ) <- in( B10 )  Freq: 0.0562317
 ;; 0xFFFFFFE4
  0x0000ffff984f31b8:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f31bc:   str	x13, [sp]
  0x0000ffff984f31c0:   str	x12, [sp, #16]
  0x0000ffff984f31c4:   str	w3, [sp, #24]
  0x0000ffff984f31c8:   str	q16, [sp, #32]
  0x0000ffff984f31cc:   str	q17, [sp, #48]
  0x0000ffff984f31d0:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f31d4:   nop                                 ;   {other}
  0x0000ffff984f31d8:   movk	xzr, #0x544
  0x0000ffff984f31dc:   movk	xzr, #0x200                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f31e0:   dcps1	#0xdeae
  0x0000ffff984f31e4:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f31e8:   udf	#65535                      ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
 ;; B22: #	out( N485 ) <- in( B11 )  Freq: 0.0562316
 ;; 0xFFFFFFF6
  0x0000ffff984f31ec:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f31f0:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f31f4:   nop                                 ;   {other}
  0x0000ffff984f31f8:   movk	xzr, #0x564
  0x0000ffff984f31fc:   movk	xzr, #0x300
 ;; uncommon trap returned which should never happen
  0x0000ffff984f3200:   dcps1	#0xdeae
  0x0000ffff984f3204:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f3208:   udf	#65535
 ;; B23: #	out( N485 ) <- in( B6 B3 B4 B5 )  Freq: 4.02423e-06
 ;; 0xFFFFFF76
  0x0000ffff984f320c:   mov	w1, #0xffffff76            	// #-138
  0x0000ffff984f3210:   mov	x29, x2
  0x0000ffff984f3214:   str	x3, [sp]
  0x0000ffff984f3218:   str	w14, [sp, #8]               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f321c:   dup	v16.4s, v16.s[0]            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff984f3220:   str	q16, [sp, #16]
  0x0000ffff984f3224:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {rfp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f3228:   nop                                 ;   {other}
  0x0000ffff984f322c:   movk	xzr, #0x598
  0x0000ffff984f3230:   movk	xzr, #0x400
 ;; uncommon trap returned which should never happen
  0x0000ffff984f3234:   dcps1	#0xdeae
  0x0000ffff984f3238:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f323c:   udf	#65535
 ;; B24: #	out( N485 ) <- in( B7 )  Freq: 1.00936e-06
 ;; 0xFFFFFF6E
  0x0000ffff984f3240:   mov	w1, #0xffffff6e            	// #-146
  0x0000ffff984f3244:   mov	x29, x2
  0x0000ffff984f3248:   str	x3, [sp]
  0x0000ffff984f324c:   str	w14, [sp, #8]               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
  0x0000ffff984f3250:   dup	v16.4s, v16.s[0]            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
  0x0000ffff984f3254:   str	q16, [sp, #16]
  0x0000ffff984f3258:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {rfp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f325c:   nop                                 ;   {other}
  0x0000ffff984f3260:   movk	xzr, #0x5cc
  0x0000ffff984f3264:   movk	xzr, #0x500                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f3268:   dcps1	#0xdeae
  0x0000ffff984f326c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f3270:   udf	#65535
 ;; B25: #	out( N485 ) <- in( B13 )  Freq: 1e-35
 ;; 0xFFFFFFDE
  0x0000ffff984f3274:   mov	w1, #0xffffffde            	// #-34
 ;; merged str pair
  0x0000ffff984f3278:   stp	x13, x12, [sp]
  0x0000ffff984f327c:   str	x10, [sp, #16]
  0x0000ffff984f3280:   str	q16, [sp, #32]
  0x0000ffff984f3284:   str	q17, [sp, #48]
  0x0000ffff984f3288:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f328c:   nop                                 ;   {other}
  0x0000ffff984f3290:   movk	xzr, #0x5fc
  0x0000ffff984f3294:   movk	xzr, #0x600                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f3298:   dcps1	#0xdeae
  0x0000ffff984f329c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f32a0:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
 ;; B26: #	out( N485 ) <- in( B12 )  Freq: 0.0562316
 ;; 0xFFFFFFF4
  0x0000ffff984f32a4:   mov	w1, #0xfffffff4            	// #-12
 ;; merged str pair
  0x0000ffff984f32a8:   stp	x13, x12, [sp]
  0x0000ffff984f32ac:   str	q16, [sp, #16]
  0x0000ffff984f32b0:   str	q17, [sp, #32]
  0x0000ffff984f32b4:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f32b8:   nop                                 ;   {other}
  0x0000ffff984f32bc:   movk	xzr, #0x628
  0x0000ffff984f32c0:   movk	xzr, #0x700                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f32c4:   dcps1	#0xdeae
  0x0000ffff984f32c8:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f32cc:   udf	#65535
 ;; B27: #	out( N485 ) <- in( B19 )  Freq: 5.55038e-05
  0x0000ffff984f32d0:   mov	x1, x0
  0x0000ffff984f32d4:   ldp	x29, x30, [sp, #96]
  0x0000ffff984f32d8:   add	sp, sp, #0x70
  0x0000ffff984f32dc:   adrp	x8, 0x0000ffff97d65000      ;   {runtime_call _rethrow_Java}
  0x0000ffff984f32e0:   add	x8, x8, #0x140
  0x0000ffff984f32e4:   br	x8
 ;; B28: #	out( N485 ) <- in( B1 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f32e8:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f32ec:   bl	0x0000ffff984f33f0          ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f32f0:   nop                                 ;   {other}
  0x0000ffff984f32f4:   movk	xzr, #0x660
  0x0000ffff984f32f8:   movk	xzr, #0x800
 ;; uncommon trap returned which should never happen
  0x0000ffff984f32fc:   dcps1	#0xdeae
  0x0000ffff984f3300:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f3304:   udf	#65535                      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
 ;; ZLoadBarrierStubC2
  0x0000ffff984f3308:   stp	x1, x2, [sp, #-80]!
  0x0000ffff984f330c:   stp	x10, x12, [sp, #16]
  0x0000ffff984f3310:   stp	x13, x14, [sp, #32]
  0x0000ffff984f3314:   stp	x15, x16, [sp, #48]
  0x0000ffff984f3318:   stp	x17, x18, [sp, #64]
  0x0000ffff984f331c:   stp	q16, q17, [sp, #-32]!
  0x0000ffff984f3320:   add	x1, x10, #0x10
  0x0000ffff984f3324:   mov	x0, x11
 ;; 0xFFFFAF670784
  0x0000ffff984f3328:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f332c:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f3330:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f3334:   blr	x8
  0x0000ffff984f3338:   mov	x11, x0
  0x0000ffff984f333c:   ldp	q16, q17, [sp], #32
  0x0000ffff984f3340:   ptrue	p7.b
  0x0000ffff984f3344:   ldp	x10, x12, [sp, #16]
  0x0000ffff984f3348:   ldp	x13, x14, [sp, #32]
  0x0000ffff984f334c:   ldp	x15, x16, [sp, #48]
  0x0000ffff984f3350:   ldp	x17, x18, [sp, #64]
  0x0000ffff984f3354:   ldp	x1, x2, [sp], #80
  0x0000ffff984f3358:   b	0x0000ffff984f3060
 ;; ZLoadBarrierStubC2
  0x0000ffff984f335c:   stp	x1, x2, [sp, #-80]!
  0x0000ffff984f3360:   stp	x11, x12, [sp, #16]
  0x0000ffff984f3364:   stp	x13, x14, [sp, #32]
  0x0000ffff984f3368:   stp	x15, x16, [sp, #48]
  0x0000ffff984f336c:   stp	x17, x18, [sp, #64]
  0x0000ffff984f3370:   stp	q16, q17, [sp, #-32]!
  0x0000ffff984f3374:   add	x1, x11, #0x10
  0x0000ffff984f3378:   mov	x0, x10
 ;; 0xFFFFAF670784
  0x0000ffff984f337c:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f3380:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f3384:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f3388:   blr	x8
  0x0000ffff984f338c:   mov	x10, x0
  0x0000ffff984f3390:   ldp	q16, q17, [sp], #32
  0x0000ffff984f3394:   ptrue	p7.b
  0x0000ffff984f3398:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f339c:   ldp	x13, x14, [sp, #32]
  0x0000ffff984f33a0:   ldp	x15, x16, [sp, #48]
  0x0000ffff984f33a4:   ldp	x17, x18, [sp, #64]
  0x0000ffff984f33a8:   ldp	x1, x2, [sp], #80
  0x0000ffff984f33ac:   b	0x0000ffff984f3070
  0x0000ffff984f33b0:   adr	x8, 0x0000ffff984f3120      ;   {internal_word}
  0x0000ffff984f33b4:   str	x8, [x28, #1200]
  0x0000ffff984f33b8:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff984f33bc:   add	x8, x8, #0xac0
  0x0000ffff984f33c0:   br	x8
 ;; 0xFFFF97C263C0
  0x0000ffff984f33c4:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f33c8:   movk	x8, #0x97c2, lsl #16
  0x0000ffff984f33cc:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f33d0:   blr	x8
  0x0000ffff984f33d4:   b	0x0000ffff984f2f3c
  0x0000ffff984f33d8:   udf	#58640                      ;   {other}
  0x0000ffff984f33dc:   udf	#0
[Stub Code]
  0x0000ffff984f33e0:   ldr	x8, 0x0000ffff984f33e8      ;   {no_reloc}
  0x0000ffff984f33e4:   br	x8
  0x0000ffff984f33e8:   bl	0x0000ffff97a684e8
  0x0000ffff984f33ec:   udf	#65535
  0x0000ffff984f33f0:   ldr	x8, 0x0000ffff984f33f8      ;   {trampoline_stub}
  0x0000ffff984f33f4:   br	x8
  0x0000ffff984f33f8:   bl	0x0000ffff977544f8
  0x0000ffff984f33fc:   udf	#65535
[Exception Handler]
  0x0000ffff984f3400:   adrp	x8, 0x0000ffff97d57000      ;   {runtime_call ExceptionBlob}
  0x0000ffff984f3404:   add	x8, x8, #0x6c0
  0x0000ffff984f3408:   br	x8
[Deopt Handler Code]
  0x0000ffff984f340c:   adr	x30, 0x0000ffff984f340c
  0x0000ffff984f3410:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff984f3414:   add	x8, x8, #0xdc0
  0x0000ffff984f3418:   br	x8
  0x0000ffff984f341c:   udf	#0
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff984f3420:   0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
  0x0000ffff984f3428:   0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f3430:   0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
  0x0000ffff984f3438:   0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
  0x0000ffff984f3440:   0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
  0x0000ffff984f3448:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
  0x0000ffff984f3450:   0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff984f3458:   0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff984f3460:   0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3468:   0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3470:   0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f3478:   0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f3480:   0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3488:   0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff984f3490:   0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f3498:   0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
  0x0000ffff984f34a0:   0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f34a8:   0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f34b0:   0x0000fff928120f48 {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f34b8:   0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f34c0:   0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
  0x0000ffff984f34c8:   0x000000fc01001450 'InnerFloat'
  0x0000ffff984f34d0:   0x000000fc000020d8 {type array float}
  0x0000ffff984f34d8:   0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f34e0:   0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f34e8:   0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f34f0:   0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f34f8:   0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff984f3500:   0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f3508:   0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff984f3510:   0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff984f3518:   0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f3520:   0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff984f3528:   0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f3530:   0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f3538:   0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f3540:   0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3548:   0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f3550:   0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f3558:   0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f3560:   0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f3568:   0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f3570:   0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3578:   0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f3580:   0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x0000ffff984f3588:   0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f3590:   0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f3598:   0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f35a0:   0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f35a8:   0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f35b0:   0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f35b8:   0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f35c0:   0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f35c8:   0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f35d0:   0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f35d8:   0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f35e0:   0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f35e8:   0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f35f0:   0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f35f8:   0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f3600:   0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f3608:   0x000000fc01001870 'jdk/random/L32X64MixRandom'
  0x0000ffff984f3610:   0x000000fc00174f50 'java/util/random/RandomGenerator'
  0x0000ffff984f3618:   0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f3620:   0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f3628:   0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f3630:   0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
  0x0000ffff984f3638:   0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f3640:   0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff984f2ebf offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff984f2f3c offset=7c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
PcDesc(pc=0x0000ffff984f2f4c offset=8c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f2f5c offset=9c bits=0):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f2f60 offset=a0 bits=0):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f2fe0 offset=120 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f2fe4 offset=124 bits=0):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f2fe8 offset=128 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f2ff4 offset=134 bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f2ff8 offset=138 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3004 offset=144 bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3008 offset=148 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f300c offset=14c bits=0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3014 offset=154 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3018 offset=158 bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
PcDesc(pc=0x0000ffff984f301c offset=15c bits=0):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3028 offset=168 bits=0):
   jdk.random.L32X64MixRandom::nextInt@25 (line 238)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f302c offset=16c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3030 offset=170 bits=0):
   jdk.random.L32X64MixRandom::nextInt@57 (line 245)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3034 offset=174 bits=0):
   java.lang.Integer::rotateLeft@7 (line 1673)
   jdk.random.L32X64MixRandom::nextInt@62 (line 246)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3044 offset=184 bits=0):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3048 offset=188 bits=0):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f304c offset=18c bits=0):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
PcDesc(pc=0x0000ffff984f3080 offset=1c0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3084 offset=1c4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff984f3088 offset=1c8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
PcDesc(pc=0x0000ffff984f30d0 offset=210 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f30d4 offset=214 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f30e0 offset=220 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f30e4 offset=224 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
PcDesc(pc=0x0000ffff984f30f0 offset=230 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r13 [26],oop
    - l2: reg r12 [24],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[184]
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 0: R obj[184], jdk.incubator.vector.Float128Vector
        Fields: reg v16 [128],vector
PcDesc(pc=0x0000ffff984f3118 offset=258 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
PcDesc(pc=0x0000ffff984f316c offset=2ac bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
PcDesc(pc=0x0000ffff984f3180 offset=2c0 bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: obj[162]
    - @6: obj[163]
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: stack[60]
   Objects
    - 0: R obj[162], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[163], jdk.incubator.vector.Float128Vector
        Fields: stack[64],vector
PcDesc(pc=0x0000ffff984f31d4 offset=314 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[16],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[258]
    - l5: reg rfp [58],int
    - l6: obj[259]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
    - @1: stack[24]
   Objects
    - 0: R obj[258], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[259], jdk.incubator.vector.Float128Vector
        Fields: stack[48],vector
PcDesc(pc=0x0000ffff984f31e0 offset=320 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f31ec offset=32c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
PcDesc(pc=0x0000ffff984f31f4 offset=334 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f321c offset=35c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3220 offset=360 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
PcDesc(pc=0x0000ffff984f3228 offset=368 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[220]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[220], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
PcDesc(pc=0x0000ffff984f3250 offset=390 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3254 offset=394 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
PcDesc(pc=0x0000ffff984f325c offset=39c bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[241]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[241], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
PcDesc(pc=0x0000ffff984f3268 offset=3a8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f328c offset=3cc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[268]
    - l5: reg rfp [58],int
    - l6: obj[269]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
   Objects
    - 0: R obj[268], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[269], jdk.incubator.vector.Float128Vector
        Fields: stack[48],vector
PcDesc(pc=0x0000ffff984f3298 offset=3d8 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f32a4 offset=3e4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
PcDesc(pc=0x0000ffff984f32b8 offset=3f8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[230]
    - l5: reg rfp [58],int
    - l6: obj[231]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
   Objects
    - 0: R obj[230], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
    - 1: R obj[231], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
PcDesc(pc=0x0000ffff984f32c4 offset=404 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f32f0 offset=430 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: empty
    - @1: nullptr
PcDesc(pc=0x0000ffff984f3308 offset=448 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
PcDesc(pc=0x0000ffff984f3421 offset=561 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 9 OopMaps

ImmutableOopMap {r12=Oop r13=Oop } pc offsets: 560 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 704 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 788 
ImmutableOopMap {} pc offsets: 820 
ImmutableOopMap {rfp=Oop [0]=Oop } pc offsets: 872 924 
ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop } pc offsets: 972 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 1016 
ImmutableOopMap {} pc offsets: 1072 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff984f2f3c offset=7c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@-1 (line 46)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f2f4c offset=8c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f2f5c offset=9c):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
ScopeDesc(pc=0x0000ffff984f2f5c offset=9c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f2f5c offset=9c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f2f5c offset=9c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f2f60 offset=a0):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
ScopeDesc(pc=0x0000ffff984f2f60 offset=a0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f2f60 offset=a0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f2f60 offset=a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f2fe0 offset=120):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f2fe4 offset=124):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
ScopeDesc(pc=0x0000ffff984f2fe4 offset=124):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f2fe4 offset=124):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f2fe4 offset=124):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f2fe8 offset=128):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f2ff4 offset=134):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
ScopeDesc(pc=0x0000ffff984f2ff4 offset=134):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f2ff4 offset=134):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f2ff4 offset=134):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f2ff4 offset=134):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f2ff8 offset=138):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3004 offset=144):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
ScopeDesc(pc=0x0000ffff984f3004 offset=144):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f3004 offset=144):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3004 offset=144):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3004 offset=144):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3008 offset=148):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f300c offset=14c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
ScopeDesc(pc=0x0000ffff984f300c offset=14c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f300c offset=14c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3014 offset=154):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3018 offset=158):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff984f3018 offset=158):
   jdk.incubator.vector.Float128Vector::fromArray0@3 (line 851)
ScopeDesc(pc=0x0000ffff984f3018 offset=158):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff984f3018 offset=158):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@24 (line 50)
ScopeDesc(pc=0x0000ffff984f301c offset=15c):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
ScopeDesc(pc=0x0000ffff984f301c offset=15c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f301c offset=15c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f301c offset=15c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3028 offset=168):
   jdk.random.L32X64MixRandom::nextInt@25 (line 238)
ScopeDesc(pc=0x0000ffff984f3028 offset=168):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3028 offset=168):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3028 offset=168):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f302c offset=16c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3030 offset=170):
   jdk.random.L32X64MixRandom::nextInt@57 (line 245)
ScopeDesc(pc=0x0000ffff984f3030 offset=170):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3030 offset=170):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3030 offset=170):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3034 offset=174):
   java.lang.Integer::rotateLeft@7 (line 1673)
ScopeDesc(pc=0x0000ffff984f3034 offset=174):
   jdk.random.L32X64MixRandom::nextInt@62 (line 246)
ScopeDesc(pc=0x0000ffff984f3034 offset=174):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3034 offset=174):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3034 offset=174):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3044 offset=184):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
ScopeDesc(pc=0x0000ffff984f3044 offset=184):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3044 offset=184):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3044 offset=184):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3048 offset=188):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
ScopeDesc(pc=0x0000ffff984f3048 offset=188):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f3048 offset=188):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f3048 offset=188):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f304c offset=18c):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
ScopeDesc(pc=0x0000ffff984f304c offset=18c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f304c offset=18c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f304c offset=18c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@36 (line 51)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3080 offset=1c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3084 offset=1c4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff984f3088 offset=1c8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@52 (line 52)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f30d0 offset=210):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f30d4 offset=214):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f30d4 offset=214):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f30d4 offset=214):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f30d4 offset=214):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f30d4 offset=214):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f30e0 offset=220):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f30e4 offset=224):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@79 (line 49)
ScopeDesc(pc=0x0000ffff984f30f0 offset=230):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@82 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r13 [26],oop
    - l2: reg r12 [24],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[184]
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 0: R obj[184], jdk.incubator.vector.Float128Vector
        Fields: reg v16 [128],vector
ScopeDesc(pc=0x0000ffff984f3118 offset=258):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)
ScopeDesc(pc=0x0000ffff984f316c offset=2ac):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@90 (line 777)
ScopeDesc(pc=0x0000ffff984f316c offset=2ac):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f316c offset=2ac):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f316c offset=2ac):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f316c offset=2ac):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
ScopeDesc(pc=0x0000ffff984f3180 offset=2c0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 4
    - @5: obj[162]
    - @6: obj[163]
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f3180 offset=2c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f3180 offset=2c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f3180 offset=2c0):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f3180 offset=2c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@61 (line 53)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: empty
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: stack[60]
   Objects
    - 0: R obj[162], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[163], jdk.incubator.vector.Float128Vector
        Fields: stack[64],vector
ScopeDesc(pc=0x0000ffff984f31d4 offset=314):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@41 (line 51)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[16],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[258]
    - l5: reg rfp [58],int
    - l6: obj[259]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
    - @1: stack[24]
   Objects
    - 0: R obj[258], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[259], jdk.incubator.vector.Float128Vector
        Fields: stack[48],vector
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f31e0 offset=320):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f31ec offset=32c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)
ScopeDesc(pc=0x0000ffff984f31f4 offset=334):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@42 (line 51)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f321c offset=35c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3220 offset=360):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff984f3220 offset=360):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
ScopeDesc(pc=0x0000ffff984f3228 offset=368):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[220]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[220], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3250 offset=390):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f3254 offset=394):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff984f3254 offset=394):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@5 (line 48)
ScopeDesc(pc=0x0000ffff984f325c offset=39c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@17 (line 49)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[241]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[241], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3268 offset=3a8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f328c offset=3cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[268]
    - l5: reg rfp [58],int
    - l6: obj[269]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
   Objects
    - 0: R obj[268], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
    - 1: R obj[269], jdk.incubator.vector.Float128Vector
        Fields: stack[48],vector
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3298 offset=3d8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f32a4 offset=3e4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
ScopeDesc(pc=0x0000ffff984f32b8 offset=3f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@49 (line 52)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
    - l4: obj[230]
    - l5: reg rfp [58],int
    - l6: obj[231]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
   Objects
    - 0: R obj[230], jdk.incubator.vector.Float128Vector
        Fields: stack[16],vector
    - 1: R obj[231], jdk.incubator.vector.Float128Vector
        Fields: stack[32],vector
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f32c4 offset=404):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
ScopeDesc(pc=0x0000ffff984f32f0 offset=430):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@16 (line 49)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: empty
    - @1: nullptr
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f3308 offset=448):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_128@66 (line 53)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff984f2e00: 3005
relocInfo@0x0000ffff984f2e00 [type=6(runtime_call) addr=0x0000ffff984f2ed4 offset=20] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff984f2e02: 7c04aece431c0000ffff380b
relocInfo@0x0000ffff984f2e0c [type=7(external_word) addr=0x0000ffff984f2f00 offset=44 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f2e0e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff984f2e18 [type=7(external_word) addr=0x0000ffff984f2f18 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff984f2e1a: 7801080d
relocInfo@0x0000ffff984f2e1c [type=1(oop) addr=0x0000ffff984f2f4c offset=52 data=1] | [oop_addr=0x0000ffff984f3420 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f2e1e: 78010817
relocInfo@0x0000ffff984f2e20 [type=1(oop) addr=0x0000ffff984f2fa8 offset=92 data=1] | [oop_addr=0x0000ffff984f3420 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f2e22: 78010823
relocInfo@0x0000ffff984f2e24 [type=1(oop) addr=0x0000ffff984f3034 offset=140 data=1] | [oop_addr=0x0000ffff984f3420 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f2e26: 9009
relocInfo@0x0000ffff984f2e26 [type=18(barrier) addr=0x0000ffff984f3058 offset=36]
         @0x0000ffff984f2e28: 9004
relocInfo@0x0000ffff984f2e28 [type=18(barrier) addr=0x0000ffff984f3068 offset=16]
         @0x0000ffff984f2e2a: 780f6003
relocInfo@0x0000ffff984f2e2c [type=12(metadata) addr=0x0000ffff984f3074 offset=12 data=15] | [metadata_addr=0x0000ffff984f34c8 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff984f2e2e: 7810600e
relocInfo@0x0000ffff984f2e30 [type=12(metadata) addr=0x0000ffff984f30ac offset=56 data=16] | [metadata_addr=0x0000ffff984f34d0 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f2e32: 5011
relocInfo@0x0000ffff984f2e32 [type=10(poll) addr=0x0000ffff984f30f0 offset=68]
         @0x0000ffff984f2e34: 7c04aece431c0000ffff3803
relocInfo@0x0000ffff984f2e3e [type=7(external_word) addr=0x0000ffff984f30fc offset=12 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f2e40: 5809
relocInfo@0x0000ffff984f2e40 [type=11(poll_return) addr=0x0000ffff984f3120 offset=36]
         @0x0000ffff984f2e42: 78106013
relocInfo@0x0000ffff984f2e44 [type=12(metadata) addr=0x0000ffff984f316c offset=76 data=16] | [metadata_addr=0x0000ffff984f34d0 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f2e46: 3004
relocInfo@0x0000ffff984f2e46 [type=6(runtime_call) addr=0x0000ffff984f317c offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f2e48: 8001
relocInfo@0x0000ffff984f2e48 [type=16(post_call_nop) addr=0x0000ffff984f3180 offset=4]
         @0x0000ffff984f2e4a: 3014
relocInfo@0x0000ffff984f2e4a [type=6(runtime_call) addr=0x0000ffff984f31d0 offset=80] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e4c: 8001
relocInfo@0x0000ffff984f2e4c [type=16(post_call_nop) addr=0x0000ffff984f31d4 offset=4]
         @0x0000ffff984f2e4e: 3007
relocInfo@0x0000ffff984f2e4e [type=6(runtime_call) addr=0x0000ffff984f31f0 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e50: 8001
relocInfo@0x0000ffff984f2e50 [type=16(post_call_nop) addr=0x0000ffff984f31f4 offset=4]
         @0x0000ffff984f2e52: 300c
relocInfo@0x0000ffff984f2e52 [type=6(runtime_call) addr=0x0000ffff984f3224 offset=48] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e54: 8001
relocInfo@0x0000ffff984f2e54 [type=16(post_call_nop) addr=0x0000ffff984f3228 offset=4]
         @0x0000ffff984f2e56: 300c
relocInfo@0x0000ffff984f2e56 [type=6(runtime_call) addr=0x0000ffff984f3258 offset=48] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e58: 8001
relocInfo@0x0000ffff984f2e58 [type=16(post_call_nop) addr=0x0000ffff984f325c offset=4]
         @0x0000ffff984f2e5a: 300b
relocInfo@0x0000ffff984f2e5a [type=6(runtime_call) addr=0x0000ffff984f3288 offset=44] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e5c: 8001
relocInfo@0x0000ffff984f2e5c [type=16(post_call_nop) addr=0x0000ffff984f328c offset=4]
         @0x0000ffff984f2e5e: 300a
relocInfo@0x0000ffff984f2e5e [type=6(runtime_call) addr=0x0000ffff984f32b4 offset=40] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e60: 8001
relocInfo@0x0000ffff984f2e60 [type=16(post_call_nop) addr=0x0000ffff984f32b8 offset=4]
         @0x0000ffff984f2e62: 3009
relocInfo@0x0000ffff984f2e62 [type=6(runtime_call) addr=0x0000ffff984f32dc offset=36] | [destination=0x0000ffff97d65140]
         @0x0000ffff984f2e64: 3004
relocInfo@0x0000ffff984f2e64 [type=6(runtime_call) addr=0x0000ffff984f32ec offset=16] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f2e66: 8001
relocInfo@0x0000ffff984f2e66 [type=16(post_call_nop) addr=0x0000ffff984f32f0 offset=4]
         @0x0000ffff984f2e68: 78a44030
relocInfo@0x0000ffff984f2e6a [type=8(internal_word) addr=0x0000ffff984f33b0 offset=192 data=164] | [target=0x0000ffff984f3120]
         @0x0000ffff984f2e6c: 3002
relocInfo@0x0000ffff984f2e6c [type=6(runtime_call) addr=0x0000ffff984f33b8 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff984f2e6e: 3003
relocInfo@0x0000ffff984f2e6e [type=6(runtime_call) addr=0x0000ffff984f33c4 offset=12] | [destination=0x0000ffff97c263c0]
         @0x0000ffff984f2e70: 8805
relocInfo@0x0000ffff984f2e70 [type=17(entry_guard) addr=0x0000ffff984f33d8 offset=20]
         @0x0000ffff984f2e72: 0002
relocInfo@0x0000ffff984f2e72 [type=0(none) addr=0x0000ffff984f33e0 offset=8]
         @0x0000ffff984f2e74: 7c01ff516800
relocInfo@0x0000ffff984f2e78 [type=13(trampoline_stub) addr=0x0000ffff984f33e0 offset=0 data=-175] | [trampoline owner=0x0000ffff984f317c]
         @0x0000ffff984f2e7a: 7c01fef56804
relocInfo@0x0000ffff984f2e7e [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=16 data=-267] | [trampoline owner=0x0000ffff984f32ec]
         @0x0000ffff984f2e80: 7c01ff036800
relocInfo@0x0000ffff984f2e84 [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-253] | [trampoline owner=0x0000ffff984f32b4]
         @0x0000ffff984f2e86: 7c01ff0e6800
relocInfo@0x0000ffff984f2e8a [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-242] | [trampoline owner=0x0000ffff984f3288]
         @0x0000ffff984f2e8c: 7c01ff1a6800
relocInfo@0x0000ffff984f2e90 [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-230] | [trampoline owner=0x0000ffff984f3258]
         @0x0000ffff984f2e92: 7c01ff276800
relocInfo@0x0000ffff984f2e96 [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-217] | [trampoline owner=0x0000ffff984f3224]
         @0x0000ffff984f2e98: 7c01ff346800
relocInfo@0x0000ffff984f2e9c [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-204] | [trampoline owner=0x0000ffff984f31f0]
         @0x0000ffff984f2e9e: 7c01ff3c6800
relocInfo@0x0000ffff984f2ea2 [type=13(trampoline_stub) addr=0x0000ffff984f33f0 offset=0 data=-196] | [trampoline owner=0x0000ffff984f31d0]
         @0x0000ffff984f2ea4: 3004
relocInfo@0x0000ffff984f2ea4 [type=6(runtime_call) addr=0x0000ffff984f3400 offset=16] | [destination=0x0000ffff97d576c0]
         @0x0000ffff984f2ea6: 3004
relocInfo@0x0000ffff984f2ea6 [type=6(runtime_call) addr=0x0000ffff984f3410 offset=16] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff984f2ea8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
Dependency of type evol_method
  method  = {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
Dependency of type evol_method
  method  = *{method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
Dependency of type evol_method
  method  = *{method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
Dependency of type evol_method
  method  = {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
Dependency of type evol_method
  method  = {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
Dependency of type unique_concrete_method_4
  context = jdk.random.L32X64MixRandom
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  class   = java.util.random.RandomGenerator
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
   [nmethod<=klass]jdk.random.L32X64MixRandom
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.FloatVector$FloatSpecies
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.FloatVector$FloatSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 704 (pc=0x0000ffff984f3180, 1 entries)
  bci -1 at scope depth 0 -> pco 1040 (pc=0x0000ffff984f32d0)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x0000ffff984f2f40, 0x0000ffff984f32e8 > < 0x0000ffff984f2f98, 0x0000ffff984f320c > < 0x0000ffff984f3070, 0x0000ffff984f32a4 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
#2: 0x0000080000a8ea28 a 'java/lang/Class'{0x0000080000a8ea28} = 'jdk/incubator/vector/Float128Vector'
#3: 0x0000080000a8e9b8 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a8e9b8}
#4: 0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
#5: 0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
#6: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
#7: 0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000fff928401c58 {method} {0x0000fff928401c58} 'test_float_vector_128' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 2: 0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 3: 0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 4: 0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
# 5: 0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
# 6: 0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 7: 0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
# 8: 0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
# 9: 0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
#10: 0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
#11: 0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#12: 0x0000fff928120f48 {method} {0x0000fff928120f48} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#13: 0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#14: 0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
#15: 0x000000fc01001450 'InnerFloat'
#16: 0x000000fc000020d8 {type array float}
#17: 0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#18: 0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#19: 0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#20: 0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
#21: 0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#22: 0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#23: 0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
#24: 0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#25: 0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#26: 0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#27: 0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#28: 0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#29: 0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#30: 0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#31: 0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
#32: 0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#33: 0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#34: 0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#35: 0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#36: 0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
#37: 0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
#38: 0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#39: 0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#40: 0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#41: 0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#42: 0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#43: 0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#44: 0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#45: 0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
#46: 0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
#47: 0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#48: 0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
#49: 0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#50: 0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#51: 0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#52: 0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#53: 0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
#54: 0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#55: 0x000000fc01001870 'jdk/random/L32X64MixRandom'
#56: 0x000000fc00174f50 'java/util/random/RandomGenerator'
#57: 0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
#58: 0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
#59: 0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#60: 0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
#61: 0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#62: 0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r020 c_rarg1:c_rarg1   : parm 0: TestZGCSpillingAtLoadBarrierStub:NotNull *
#r022 c_rarg2:c_rarg2   : parm 1: float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *
#r024 c_rarg3:c_rarg3   : parm 2: Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *
# -- Old r31_sp -- Framesize: 672 --
#r223 r31_sp+668: in_preserve
#r222 r31_sp+664: return address
#r221 r31_sp+660: in_preserve
#r220 r31_sp+656: saved fp register
#r219 r31_sp+652: pad2, stack alignment
#r218 r31_sp+648: pad2, stack alignment
#r217 r31_sp+644: Fixed slot 1
#r216 r31_sp+640: Fixed slot 0
#r383 r31_sp+636: spill
#r382 r31_sp+632: spill
#r381 r31_sp+628: spill
#r380 r31_sp+624: spill
#r379 r31_sp+620: spill
#r378 r31_sp+616: spill
#r377 r31_sp+612: spill
#r376 r31_sp+608: spill
#r375 r31_sp+604: spill
#r374 r31_sp+600: spill
#r373 r31_sp+596: spill
#r372 r31_sp+592: spill
#r371 r31_sp+588: spill
#r370 r31_sp+584: spill
#r369 r31_sp+580: spill
#r368 r31_sp+576: spill
#r367 r31_sp+572: spill
#r366 r31_sp+568: spill
#r365 r31_sp+564: spill
#r364 r31_sp+560: spill
#r363 r31_sp+556: spill
#r362 r31_sp+552: spill
#r361 r31_sp+548: spill
#r360 r31_sp+544: spill
#r359 r31_sp+540: spill
#r358 r31_sp+536: spill
#r357 r31_sp+532: spill
#r356 r31_sp+528: spill
#r355 r31_sp+524: spill
#r354 r31_sp+520: spill
#r353 r31_sp+516: spill
#r352 r31_sp+512: spill
#r351 r31_sp+508: spill
#r350 r31_sp+504: spill
#r349 r31_sp+500: spill
#r348 r31_sp+496: spill
#r347 r31_sp+492: spill
#r346 r31_sp+488: spill
#r345 r31_sp+484: spill
#r344 r31_sp+480: spill
#r343 r31_sp+476: spill
#r342 r31_sp+472: spill
#r341 r31_sp+468: spill
#r340 r31_sp+464: spill
#r339 r31_sp+460: spill
#r338 r31_sp+456: spill
#r337 r31_sp+452: spill
#r336 r31_sp+448: spill
#r335 r31_sp+444: spill
#r334 r31_sp+440: spill
#r333 r31_sp+436: spill
#r332 r31_sp+432: spill
#r331 r31_sp+428: spill
#r330 r31_sp+424: spill
#r329 r31_sp+420: spill
#r328 r31_sp+416: spill
#r327 r31_sp+412: spill
#r326 r31_sp+408: spill
#r325 r31_sp+404: spill
#r324 r31_sp+400: spill
#r323 r31_sp+396: spill
#r322 r31_sp+392: spill
#r321 r31_sp+388: spill
#r320 r31_sp+384: spill
#r319 r31_sp+380: spill
#r318 r31_sp+376: spill
#r317 r31_sp+372: spill
#r316 r31_sp+368: spill
#r315 r31_sp+364: spill
#r314 r31_sp+360: spill
#r313 r31_sp+356: spill
#r312 r31_sp+352: spill
#r311 r31_sp+348: spill
#r310 r31_sp+344: spill
#r309 r31_sp+340: spill
#r308 r31_sp+336: spill
#r307 r31_sp+332: spill
#r306 r31_sp+328: spill
#r305 r31_sp+324: spill
#r304 r31_sp+320: spill
#r303 r31_sp+316: spill
#r302 r31_sp+312: spill
#r301 r31_sp+308: spill
#r300 r31_sp+304: spill
#r299 r31_sp+300: spill
#r298 r31_sp+296: spill
#r297 r31_sp+292: spill
#r296 r31_sp+288: spill
#r295 r31_sp+284: spill
#r294 r31_sp+280: spill
#r293 r31_sp+276: spill
#r292 r31_sp+272: spill
#r291 r31_sp+268: spill
#r290 r31_sp+264: spill
#r289 r31_sp+260: spill
#r288 r31_sp+256: spill
#r287 r31_sp+252: spill
#r286 r31_sp+248: spill
#r285 r31_sp+244: spill
#r284 r31_sp+240: spill
#r283 r31_sp+236: spill
#r282 r31_sp+232: spill
#r281 r31_sp+228: spill
#r280 r31_sp+224: spill
#r279 r31_sp+220: spill
#r278 r31_sp+216: spill
#r277 r31_sp+212: spill
#r276 r31_sp+208: spill
#r275 r31_sp+204: spill
#r274 r31_sp+200: spill
#r273 r31_sp+196: spill
#r272 r31_sp+192: spill
#r271 r31_sp+188: spill
#r270 r31_sp+184: spill
#r269 r31_sp+180: spill
#r268 r31_sp+176: spill
#r267 r31_sp+172: spill
#r266 r31_sp+168: spill
#r265 r31_sp+164: spill
#r264 r31_sp+160: spill
#r263 r31_sp+156: spill
#r262 r31_sp+152: spill
#r261 r31_sp+148: spill
#r260 r31_sp+144: spill
#r259 r31_sp+140: spill
#r258 r31_sp+136: spill
#r257 r31_sp+132: spill
#r256 r31_sp+128: spill
#r255 r31_sp+124: spill
#r254 r31_sp+120: spill
#r253 r31_sp+116: spill
#r252 r31_sp+112: spill
#r251 r31_sp+108: spill
#r250 r31_sp+104: spill
#r249 r31_sp+100: spill
#r248 r31_sp+96: spill
#r247 r31_sp+92: spill
#r246 r31_sp+88: spill
#r245 r31_sp+84: spill
#r244 r31_sp+80: spill
#r243 r31_sp+76: spill
#r242 r31_sp+72: spill
#r241 r31_sp+68: spill
#r240 r31_sp+64: spill
#r239 r31_sp+60: spill
#r238 r31_sp+56: spill
#r237 r31_sp+52: spill
#r236 r31_sp+48: spill
#r235 r31_sp+44: spill
#r234 r31_sp+40: spill
#r233 r31_sp+36: spill
#r232 r31_sp+32: spill
#r231 r31_sp+28: spill
#r230 r31_sp+24: spill
#r229 r31_sp+20: spill
#r228 r31_sp+16: spill
#r227 r31_sp+12: spill
#r226 r31_sp+ 8: spill
#r225 r31_sp+ 4: spill
#r224 r31_sp+ 0: spill
#
----------------------- MetaData before Compile_id = 563 ------------------------
{method}
 - this oop:          0x0000fff928401d80
 - method holder:     'TestZGCSpillingAtLoadBarrierStub'
 - constants:         0x0000fff928401448 constant pool [132] {0x0000fff928401448} for 'TestZGCSpillingAtLoadBarrierStub' cache=0x0000fff928402a58
 - access:            0x0  
 - flags:             0x6080  queued_for_compilation has_loops_flag has_loops_flag_init 
 - name:              'test_float_vector_PREFERRED'
 - signature:         '([F[LOuter;)V'
 - max stack:         4
 - max locals:        9
 - size of params:    3
 - method size:       14
 - highest level:     3
 - vtable index:      10
 - i2i entry:         0x0000ffff97bc73c0
 - adapters:          AHE@0x0000ffffa82a8060: 0xbbb i2c: 0x0000ffff97be4c40 c2i: 0x0000ffff97be4ca8 c2iUV: 0x0000ffff97be4c74 c2iNCI: 0x0000ffff97be4ce4
 - compiled entry     0x0000ffff909446c0
 - code size:         86
 - code start:        0x0000fff928401d18
 - code end (excl):   0x0000fff928401d6e
 - method data:       0x0000fff92841cfb0
 - checked ex length: 0
 - linenumber start:  0x0000fff928401d6e
 - localvar length:   0
 - compiled code: nmethod6524  554       3       TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED (86 bytes)

------------------------ OptoAssembly for Compile_id = 563 -----------------------
#
#  void ( TestZGCSpillingAtLoadBarrierStub:NotNull *, float[int:>=0] (java/lang/Cloneable,java/io/Serializable):exact *, Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) * )
#
000     N489: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # MachUEPNode
	ldrw rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	ldrw r10, [rscratch2 + CompiledICData::speculated_klass_offset()]	# compressed klass
	cmpw rscratch1, r10
	bne, SharedRuntime::_ic_miss_stub


020     B1: #	out( B27 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang size=672
	stp  lr, rfp, [sp, #-16]!
	mov  rscratch1, #656
	sub  sp, sp, rscratch1
	ldr  rscratch1, [guard]
	dmb ishld
	ldr  rscratch2, [rthread, #thread_disarmed_guard_value_offset]
	cmp  rscratch1, rscratch2
	b.eq skip
	blr #nmethod_entry_barrier_stub
	b skip
	guard: int
	
	skip:
	
07c     spill R2 -> R15	# spill size = 64
080     ldrw  R14, [R2, #12]	# range
084     NullCheck R2

084     B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999999
084     cmpw  R14, #0	# unsigned
088     bls  B18	# unsigned  P=0.058775 C=19566.000000

08c     B3: #	out( B23 B4 ) <- in( B2 )  Freq: 0.941224
08c     mov  R10, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
098     ldrw  R16, [R10, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
09c     ldrw  R18, [R10, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
0a0     sxtw  R10, R14	# i2l
0a4     add R11, R10, #63
0a8     and  R11, R11, #-64	# int
0ac     add R10, R10, #-63
0b0     mov R12, #-64	# long
0b4     add  R11, R12, l2i(R11), sxtw
0b8     addw R12, R14, #-63
0bc     fmovs  V17, #0.000000
0c0     cblt   R12, B23 # int  P=0.000001 C=-1.000000

0c4     B4: #	out( B23 B5 ) <- in( B3 )  Freq: 0.941223
0c4     cmpw  R14, #63
0c8     beq  B23  P=0.000001 C=-1.000000

0cc     B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.941222
0cc     cmp  R11, R10
0d0     bhs  B23	# unsigned  P=0.000001 C=-1.000000

0d4     B6: #	out( B23 B7 ) <- in( B5 )  Freq: 0.941221
0d4     spill R3 -> R13	# spill size = 64
0d8     ldrw  R1, [R3, #12]	# range
0dc     NullCheck R3

0dc     B7: #	out( B24 B8 ) <- in( B6 )  Freq: 0.94122
0dc     cmpw  R14, #2147483584
0e4     bgt  B24  P=0.000001 C=-1.000000

0e8     B8: #	out( B9 ) <- in( B7 )  Freq: 0.941219
0e8     mov  R10, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
0f4     ldrw  R17, [R10, #12]	# int ! Field: jdk/random/L32X64MixRandom.a
0f8     ldrw  R2, [R10, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
0fc      -- 	// R28=Thread::current(), empty
0fc     mov R29, #0	# int
100     replicateF V17, V17

104     B9: #	out( B10 ) <- in( B8 B17 ) Loop( B9-B17 ) Freq: 16.0006
104     subw  R11, R14, R29
108     cmpw  R14, R29
10c     cselw R11, zr, R11 lt	# signed, int
110     cmpw  R11, #64000	# unsigned
118     mov R10, #64000	# int
11c     cselw R11, R10, R11 hi	# unsigned, int
120     addw  R12, R11, R29
        nop 	# 3 bytes pad for loops and calls

130     B10: #	out( B21 B11 ) <- in( B9 B16 ) Loop( B10-B16 inner  strip mined) Freq: 272.219
130     addw  R10, R16, R18
134     eorw  R11, R10, R10, LSR #16
138     mov R0, #-747796405	# int
140     mulw  R10, R11, R0
144     eorw  R11, R10, R10, LSR #16
148     mov R10, #-747796405	# int
150     mulw  R11, R11, R10
154     eorw  R10, R11, R11, LSR #16
158     andsw  R3, R10, #1023	# int
15c     add R10, R13, R3, I2L #3	# ptr
160     add R11, R15, R29, I2L #2	# ptr
164     add R11, R11, #16	# ptr
168     loadV V16, [R11]	# vector (sve)
16c     eorw  R11, R2, R16	# int
170     mov R2, #-1380669139	# int
178     madd  R18, R18, R2, R17
17c     eorw  R0, R11, R16, ROR #6
180     eorw  R16, R0, R11, LSL #9
184     ror    R2, R11, #19
188     mov  R11, jdk/random/L32X64MixRandom (java/util/random/RandomGenerator,java/util/random/RandomGenerator$StreamableGenerator,java/util/random/RandomGenerator$SplittableGenerator):exact *	# ptr
	
194     strw  R18, [R11, #16]	# int ! Field: jdk/random/L32X64MixRandom.s
198     strw  R2, [R11, #24]	# int ! Field: jdk/random/L32X64MixRandom.x1
19c     strw  R16, [R11, #20]	# int ! Field: jdk/random/L32X64MixRandom.x0
1a0     cmpw  R3, R1	# unsigned
1a4     bhs  B21	# unsigned  P=0.000001 C=-1.000000

1a8     B11: #	out( B22 B12 ) <- in( B10 )  Freq: 272.219
1a8     ldr  R11, [R10, #16]
1b4     cbeq   R11, B22  P=0.000001 C=-1.000000

1b8     B12: #	out( B26 B13 ) <- in( B11 )  Freq: 272.218
1b8     ldr  R10, [R11, #16] ! Field: Outer.field
1c4     ldrw  R0, [R10, #8]	# compressed class ptr
1c8     NullCheck R10

1c8     B13: #	out( B25 B14 ) <- in( B12 )  Freq: 272.218
1c8     mov  R11, narrowklass: precise InnerFloat: 0x0000fff8f8326918:Constant:exact *	# compressed klass ptr
1d0     cmp  R0, R11	 // compressed ptr
1d4     bne  B25	# unsigned  P=0.000000 C=-1.000000

1d8     B14: #	out( B19 B15 ) <- in( B13 )  Freq: 272.218
1d8     # checkcastPP of R10
1d8     ldrs  V18, [R10, #12]	# float ! Field: InnerFloat.data
1dc     ldr  R0, [R28, #456]	# ptr
1e0     ldr  R10, [R28, #472]	# ptr
1e4     add R11, R0, #272	# ptr
1e8     cmp  R11, R10	 // ptr
1ec     bhs  B19	# unsigned  P=0.000100 C=-1.000000

1f0     B15: #	out( B16 ) <- in( B14 )  Freq: 272.191
1f0     str  R11, [R28, #456]	# ptr
1f4     mov R10, #1	# long
1f8     str  R10, [R0]	# int
1fc     prfm [R11, #192], PSTL1KEEP	# Prefetch into level 1 cache write keep
200     mov  R3, narrowklass: precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# compressed klass ptr
208     strw  R3, [R0, #8]	# compressed klass ptr
20c     prfm [R11, #256], PSTL1KEEP	# Prefetch into level 1 cache write keep
210     mov R10, #64	# int
214     strw  R10, [R0, #12]	# int
218     prfm [R11, #320], PSTL1KEEP	# Prefetch into level 1 cache write keep
21c     add R10, R0, #16	# ptr
220     mov R11, #32	# long
224     ClearArray R11, R10

24c     B16: #	out( B10 B17 ) <- in( B20 B15 )  Freq: 272.218
24c     vaddF V16, V17, V16
250     replicateF V17, V18
254     
254     # checkcastPP of R0
254     vaddF V17, V16, V17
258     add R10, R0, #16	# ptr
25c     storeV [R10], V16	# vector (sve)
260     addw R29, R29, #64
264     cmpw  R29, R12
268     blt B10 	// counted loop end  P=0.941225 C=18415.000000

26c     B17: #	out( B9 B18 ) <- in( B16 )  Freq: 15.9997
26c     ldr  R10, [R28, #1184]	# ptr
270     ldrw zr, [R10]	# Safepoint: poll for GC        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:82 (line 61) L[0]=_ L[1]=R15 L[2]=R13 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=R29 L[6]=_ L[7]=_ L[8]=_
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=V17 }
        # OopMap {r13=Oop r15=Oop off=624/0x270}
290     cmpw  R29, R14
294     blt  B9  P=0.941225 C=18415.000000

298     B18: #	out( N489 ) <- in( B17 B2 )  Freq: 0.999166
298     # pop frame 672
	mov  rscratch1, #656
	add  sp, sp, rscratch1
	ldp  lr, rfp, [sp],#16
	# test polling word
	ldr  rscratch1, [rthread],#1176
	cmp  sp, rscratch1
	bhi #slow_path
2ac     ret	// return register

2c8     B19: #	out( B28 B20 ) <- in( B14 )  Freq: 0.0272263
2c8     spill V18 -> [sp, #300]	# spill size = 32
2cc     spill V16 -> [sp, #384]	# vector spill size = 2048
2d4     spill R12 -> [sp, #296]	# spill size = 32
2d8     spill R2 -> [sp, #292]	# spill size = 32
2dc     spill R17 -> [sp, #288]	# spill size = 32
2e0     spill R1 -> [sp, #28]	# spill size = 32
2e4     spill V17 -> [sp, #32]	# vector spill size = 2048
2ec     spill R18 -> [sp, #24]	# spill size = 32
2f0     spill R16 -> [sp, #20]	# spill size = 32
2f4     spill R14 -> [sp, #16]	# spill size = 32
2f4     spill R13 -> [sp, #8]	# spill size = 64
2f8     spill R15 -> [sp, #0]	# spill size = 64
2f8     mov  R1, precise [float (java/lang/Cloneable,java/io/Serializable): :Constant:exact *	# ptr
	
304     mov R2, #64	# int
308     call,static 0x0000ffff97d5d440 	// ==>  wrapper for: _new_array_Java
        # jdk.incubator.vector.FloatVector::lanewiseTemplate @ bci:96 (line 774) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#4 STK[1]=#Ptr0x0000fff8f80cfab8 STK[2]=#null STK[3]=#Ptr0x0000fff8f80cfb98 STK[4]=#64 STK[5]=#ScObj0 STK[6]=#ScObj1 STK[7]=#null STK[8]=#Ptr0x0000fff8f4230dc8
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #384 }
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 285) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatMaxVector::lanewise @ bci:3 (line 41) L[0]=_ L[1]=_ L[2]=_
        # jdk.incubator.vector.FloatVector::add @ bci:5 (line 1223) L[0]=_ L[1]=_
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:61 (line 65) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f832c628 L[4]=_ L[5]=R29 L[6]=_ L[7]=_ L[8]=r31_sp + #300
        # OopMap {[0]=Oop [8]=Oop off=780/0x30c}

31c     B20: #	out( B16 ) <- in( B19 )  Freq: 0.0272258
        # Block is sole successor of call
31c     spill [sp, #0] -> R15	# spill size = 64
320     spill [sp, #8] -> R13	# spill size = 64
320     spill [sp, #16] -> R14	# spill size = 32
324     spill [sp, #20] -> R16	# spill size = 32
324     spill [sp, #24] -> R18	# spill size = 32
328     spill [sp, #32] -> V17	# vector spill size = 2048
330     spill [sp, #28] -> R1	# spill size = 32
334     spill [sp, #288] -> R17	# spill size = 32
338     spill [sp, #292] -> R2	# spill size = 32
33c     spill [sp, #296] -> R12	# spill size = 32
340     spill [sp, #384] -> V16	# vector spill size = 2048
348     spill [sp, #300] -> V18	# spill size = 32
34c     b  B16

350     B21: #	out( N489 ) <- in( B10 )  Freq: 0.000275834
350     mov R1, #-28	# int
354     spill R15 -> [sp, #0]	# spill size = 64
358     spill R13 -> [sp, #16]	# spill size = 64
35c     spill R3 -> [sp, #24]	# spill size = 32
360     spill V17 -> [sp, #32]	# vector spill size = 2048
368     spill V16 -> [sp, #384]	# vector spill size = 2048
370     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:41 (line 63) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #16 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=r31_sp + #16 STK[1]=r31_sp + #24
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #384 }
        # OopMap {[0]=Oop [16]=Oop off=884/0x374}
380     ShouldNotReachHere

38c     B22: #	out( N489 ) <- in( B11 )  Freq: 0.000275833
38c     mov R1, #-10	# int
390     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:42 (line 63) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=#null
        # OopMap {off=916/0x394}
3a0     ShouldNotReachHere

3ac     B23: #	out( N489 ) <- in( B6 B3 B4 B5 )  Freq: 3.80238e-06
3ac     mov R1, #-138	# int
3b0     spill R2 -> R29	# spill size = 64
3b4     spill R3 -> [sp, #0]	# spill size = 64
3b8     spill R14 -> [sp, #8]	# spill size = 32
3bc     replicateF V16, V17
3c0     spill V16 -> [sp, #16]	# vector spill size = 2048
3c8     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='predicate' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:17 (line 61) L[0]=_ L[1]=R29 L[2]=r31_sp + #0 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=#0 L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=r31_sp + #8
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #16 }
        # OopMap {rfp=Oop [0]=Oop off=972/0x3cc}
3d8     ShouldNotReachHere

3e4     B24: #	out( N489 ) <- in( B7 )  Freq: 9.53718e-07
3e4     mov R1, #-146	# int
3e8     spill R2 -> R29	# spill size = 64
3ec     spill R3 -> [sp, #0]	# spill size = 64
3f0     spill R14 -> [sp, #8]	# spill size = 32
3f4     replicateF V16, V17
3f8     spill V16 -> [sp, #16]	# vector spill size = 2048
400     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='loop_limit_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:17 (line 61) L[0]=_ L[1]=R29 L[2]=r31_sp + #0 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=#0 L[6]=_ L[7]=_ L[8]=_ STK[0]=#0 STK[1]=r31_sp + #8
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #16 }
        # OopMap {rfp=Oop [0]=Oop off=1028/0x404}
410     ShouldNotReachHere

41c     B25: #	out( N489 ) <- in( B13 )  Freq: 1e-35
41c     mov R1, #-34	# int
420     spill R15 -> [sp, #0]	# spill size = 64
424     spill R13 -> [sp, #8]	# spill size = 64
424     spill R10 -> [sp, #16]	# spill size = 64
428     spill V17 -> [sp, #32]	# vector spill size = 2048
430     spill V16 -> [sp, #384]	# vector spill size = 2048
438     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:49 (line 64) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=r31_sp + #16
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #32 }
        # ScObj1 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #384 }
        # OopMap {[0]=Oop [8]=Oop [16]=Oop off=1084/0x43c}
448     ShouldNotReachHere

454     B26: #	out( N489 ) <- in( B12 )  Freq: 0.000275833
454     mov R1, #-12	# int
458     spill R15 -> [sp, #0]	# spill size = 64
45c     spill R13 -> [sp, #8]	# spill size = 64
45c     spill V17 -> [sp, #16]	# vector spill size = 2048
464     spill V16 -> [sp, #384]	# vector spill size = 2048
46c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:49 (line 64) L[0]=_ L[1]=r31_sp + #0 L[2]=r31_sp + #8 L[3]=#Ptr0x0000fff8f832c628 L[4]=#ScObj0 L[5]=R29 L[6]=#ScObj1 L[7]=_ L[8]=_ STK[0]=#null
        # ScObj0 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #16 }
        # ScObj1 jdk/incubator/vector/FloatMaxVector={ [payload :0]=r31_sp + #384 }
        # OopMap {[0]=Oop [8]=Oop off=1136/0x470}
47c     ShouldNotReachHere

488     B27: #	out( N489 ) <- in( B1 )  Freq: 1.01328e-06
488     mov R1, #-10	# int
48c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED @ bci:16 (line 61) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ L[6]=_ L[7]=_ L[8]=_ STK[0]=_ STK[1]=#null
        # OopMap {off=1168/0x490}
49c     ShouldNotReachHere

4a8     B28: #	out( N489 ) <- in( B19 )  Freq: 2.72263e-07
4a8      -- 	// exception oop; no code emitted
4a8     spill R0 -> R1	# spill size = 64
4ac     # pop frame 672
	mov  rscratch1, #656
	add  sp, sp, rscratch1
	ldp  lr, rfp, [sp],#16
	
4b4     b rethrow_stub

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 6526  563       4       TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED (86 bytes)
 total in heap  [0x0000ffff984f5310,0x0000ffff984f6470] = 4448
 relocation     [0x0000ffff984f5480,0x0000ffff984f5530] = 176
 main code      [0x0000ffff984f5540,0x0000ffff984f5af8] = 1464
 stub code      [0x0000ffff984f5af8,0x0000ffff984f5b48] = 80
 oops           [0x0000ffff984f5b48,0x0000ffff984f5b80] = 56
 metadata       [0x0000ffff984f5b80,0x0000ffff984f5d70] = 496
 scopes data    [0x0000ffff984f5d70,0x0000ffff984f6040] = 720
 scopes pcs     [0x0000ffff984f6040,0x0000ffff984f63b0] = 880
 dependencies   [0x0000ffff984f63b0,0x0000ffff984f6438] = 136
 handler table  [0x0000ffff984f6438,0x0000ffff984f6450] = 24
 nul chk table  [0x0000ffff984f6450,0x0000ffff984f6470] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;; N489: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f5540:   nop
[Entry Point]
  # {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[F'
  # parm1:    c_rarg3:c_rarg3 
                        = '[LOuter;'
  #           [sp+0x2a0]  (sp of caller)
  0x0000ffff984f5544:   ldr	w8, [x1, #8]
  0x0000ffff984f5548:   ldr	w10, [x9, #8]
  0x0000ffff984f554c:   cmp	w8, w10
  0x0000ffff984f5550:   b.eq	0x0000ffff984f5560  // b.none
  0x0000ffff984f5554:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff984f5558:   add	x8, x8, #0xec0
  0x0000ffff984f555c:   br	x8
[Verified Entry Point]
 ;; B1: #	out( B27 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f5560:   nop
  0x0000ffff984f5564:   ptrue	p7.b
  0x0000ffff984f5568:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff984f556c:   str	xzr, [x9]
  0x0000ffff984f5570:   stp	x29, x30, [sp, #-16]!
  0x0000ffff984f5574:   sub	sp, sp, #0x290
  0x0000ffff984f5578:   ldrb	w8, [x28, #1208]
  0x0000ffff984f557c:   cbz	x8, 0x0000ffff984f5594
 ;; 0xFFFFAECE431C
  0x0000ffff984f5580:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f5584:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f5588:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f558c:   mov	x0, x28
  0x0000ffff984f5590:   blr	x8
  0x0000ffff984f5594:   ldr	w8, 0x0000ffff984f5af0
 ;; 0xFFFFB0903FF8
  0x0000ffff984f5598:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff984f559c:   movk	x9, #0xb090, lsl #16
  0x0000ffff984f55a0:   movk	x9, #0xffff, lsl #32
  0x0000ffff984f55a4:   orr	x9, x9, x8, lsr #32
  0x0000ffff984f55a8:   ldr	w9, [x9]
  0x0000ffff984f55ac:   orr	x8, x8, x9, lsl #32
  0x0000ffff984f55b0:   ldr	x9, [x28, #88]
  0x0000ffff984f55b4:   cmp	x8, x9
  0x0000ffff984f55b8:   b.ne	0x0000ffff984f5adc  // b.any;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
  0x0000ffff984f55bc:   mov	x15, x2
  0x0000ffff984f55c0:   ldr	w14, [x2, #12]              ; implicit exception: dispatches to 0x0000ffff984f59c8
 ;; B2: #	out( B18 B3 ) <- in( B1 )  Freq: 0.999999
  0x0000ffff984f55c4:   cmp	w14, #0x0
  0x0000ffff984f55c8:   b.ls	0x0000ffff984f57d8  // b.plast;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; B3: #	out( B23 B4 ) <- in( B2 )  Freq: 0.941224
 ;; 0xFFF8F409C3F8
  0x0000ffff984f55cc:   mov	x10, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f55d0:   movk	x10, #0xa4, lsl #16
  0x0000ffff984f55d4:   movk	x10, #0x800, lsl #32
  0x0000ffff984f55d8:   ldr	w16, [x10, #20]             ;*getfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@5 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f55dc:   ldr	w18, [x10, #16]             ;*getfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@1 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f55e0:   sxtw	x10, w14
  0x0000ffff984f55e4:   add	x11, x10, #0x3f
  0x0000ffff984f55e8:   and	x11, x11, #0xffffffffffffffc0
  0x0000ffff984f55ec:   sub	x10, x10, #0x3f
 ;; 0xFFFFFFFFFFFFFFC0
  0x0000ffff984f55f0:   orr	x12, xzr, #0xffffffffffffffc0
  0x0000ffff984f55f4:   add	x11, x12, w11, sxtw
  0x0000ffff984f55f8:   sub	w12, w14, #0x3f
  0x0000ffff984f55fc:   movi	v17.2s, #0x0
  0x0000ffff984f5600:   tbnz	w12, #31, 0x0000ffff984f58ec
 ;; B4: #	out( B23 B5 ) <- in( B3 )  Freq: 0.941223
  0x0000ffff984f5604:   cmp	w14, #0x3f
  0x0000ffff984f5608:   b.eq	0x0000ffff984f58ec  // b.none
 ;; B5: #	out( B23 B6 ) <- in( B4 )  Freq: 0.941222
  0x0000ffff984f560c:   cmp	x11, x10
  0x0000ffff984f5610:   b.cs	0x0000ffff984f58ec  // b.hs, b.nlast
 ;; B6: #	out( B23 B7 ) <- in( B5 )  Freq: 0.941221
  0x0000ffff984f5614:   mov	x13, x3
  0x0000ffff984f5618:   ldr	w1, [x3, #12]               ; implicit exception: dispatches to 0x0000ffff984f58ec
 ;; B7: #	out( B24 B8 ) <- in( B6 )  Freq: 0.94122
 ;; 0x7FFFFFC0
  0x0000ffff984f561c:   mov	w8, #0x7fffffc0            	// #2147483584
  0x0000ffff984f5620:   cmp	w14, w8
  0x0000ffff984f5624:   b.gt	0x0000ffff984f5924
 ;; B8: #	out( B9 ) <- in( B7 )  Freq: 0.941219
 ;; 0xFFF8F409C3F8
  0x0000ffff984f5628:   mov	x10, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f562c:   movk	x10, #0xa4, lsl #16
  0x0000ffff984f5630:   movk	x10, #0x800, lsl #32
  0x0000ffff984f5634:   ldr	w17, [x10, #12]
  0x0000ffff984f5638:   ldr	w2, [x10, #24]
  0x0000ffff984f563c:   mov	w29, wzr
  0x0000ffff984f5640:   mov	z17.s, p7/m, s17
 ;; B9: #	out( B10 ) <- in( B8 B17 ) Loop( B9-B17 ) Freq: 16.0006
  0x0000ffff984f5644:   sub	w11, w14, w29
  0x0000ffff984f5648:   cmp	w14, w29
  0x0000ffff984f564c:   csel	w11, wzr, w11, lt  // lt = tstop
 ;; 0xFA00
  0x0000ffff984f5650:   mov	w8, #0xfa00                	// #64000
  0x0000ffff984f5654:   cmp	w11, w8
 ;; 0xFA00
  0x0000ffff984f5658:   mov	w10, #0xfa00                	// #64000
  0x0000ffff984f565c:   csel	w11, w10, w11, hi  // hi = pmore
  0x0000ffff984f5660:   add	w12, w11, w29
  0x0000ffff984f5664:   nop
  0x0000ffff984f5668:   nop
  0x0000ffff984f566c:   nop                                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; B10: #	out( B21 B11 ) <- in( B9 B16 ) Loop( B10-B16 inner  strip mined) Freq: 272.219
  0x0000ffff984f5670:   add	w10, w16, w18               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@8 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f5674:   eor	w11, w10, w10, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; 0xD36D884B
  0x0000ffff984f5678:   mov	w0, #0x884b                	// #34891
  0x0000ffff984f567c:   movk	w0, #0xd36d, lsl #16
  0x0000ffff984f5680:   mul	w10, w11, w0                ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f5684:   eor	w11, w10, w10, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; 0xD36D884B
  0x0000ffff984f5688:   mov	w10, #0x884b                	// #34891
  0x0000ffff984f568c:   movk	w10, #0xd36d, lsl #16
  0x0000ffff984f5690:   mul	w11, w11, w10               ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@9 (line 235)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f5694:   eor	w10, w11, w11, lsr #16      ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f5698:   and	w3, w10, #0x3ff             ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f569c:   add	x10, x13, w3, sxtw #3
  0x0000ffff984f56a0:   add	x11, x15, w29, sxtw #2
  0x0000ffff984f56a4:   add	x11, x11, #0x10             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f56a8:   ld1w	{z16.s}, p7/z, [x11]        ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
                                                            ; - jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
                                                            ; - jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
  0x0000ffff984f56ac:   eor	w11, w2, w16                ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@41 (line 243)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
 ;; 0xADB4A92D
  0x0000ffff984f56b0:   mov	w2, #0xa92d                	// #43309
  0x0000ffff984f56b4:   movk	w2, #0xadb4, lsl #16
  0x0000ffff984f56b8:   madd	w18, w18, w2, w17           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@25 (line 238)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f56bc:   eor	w0, w11, w16, ror #6        ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f56c0:   eor	w16, w0, w11, lsl #9        ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@57 (line 245)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f56c4:   ror	w2, w11, #19                ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Integer::rotateLeft@7 (line 1673)
                                                            ; - jdk.random.L32X64MixRandom::nextInt@62 (line 246)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
 ;; 0xFFF8F409C3F8
  0x0000ffff984f56c8:   mov	x11, #0x8310                	// #33552
                                                            ;   {oop(a 'jdk/random/L32X64MixRandom'{0x0000080000a48310})}
  0x0000ffff984f56cc:   movk	x11, #0xa4, lsl #16
  0x0000ffff984f56d0:   movk	x11, #0x800, lsl #32
  0x0000ffff984f56d4:   str	w18, [x11, #16]             ;*putfield s {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@26 (line 238)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f56d8:   str	w2, [x11, #24]              ;*putfield x1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@73 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f56dc:   str	w16, [x11, #20]             ;*putfield x0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.random.L32X64MixRandom::nextInt@68 (line 248)
                                                            ; - jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
                                                            ; - java.util.random.RandomGenerator::nextInt@6 (line 822)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
  0x0000ffff984f56e0:   cmp	w3, w1
  0x0000ffff984f56e4:   b.cs	0x0000ffff984f5890  // b.hs, b.nlast
 ;; B11: #	out( B22 B12 ) <- in( B10 )  Freq: 272.219
  0x0000ffff984f56e8:   ldr	x11, [x10, #16]
  0x0000ffff984f56ec:   tbnz	w11, #12, 0x0000ffff984f5a00;   {other}
  0x0000ffff984f56f0:   lsr	x11, x11, #16
  0x0000ffff984f56f4:   cbz	x11, 0x0000ffff984f58cc
 ;; B12: #	out( B26 B13 ) <- in( B11 )  Freq: 272.218
  0x0000ffff984f56f8:   ldr	x10, [x11, #16]
  0x0000ffff984f56fc:   tbnz	w10, #12, 0x0000ffff984f5a64;   {other}
  0x0000ffff984f5700:   lsr	x10, x10, #16
  0x0000ffff984f5704:   ldr	w0, [x10, #8]               ; implicit exception: dispatches to 0x0000ffff984f5994
 ;; B13: #	out( B25 B14 ) <- in( B12 )  Freq: 272.218
  0x0000ffff984f5708:   mov	x11, #0x1000000             	// #16777216
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff984f570c:   movk	x11, #0x1450
  0x0000ffff984f5710:   cmp	w0, w11                     ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f5714:   b.ne	0x0000ffff984f595c  // b.any;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
 ;; B14: #	out( B19 B15 ) <- in( B13 )  Freq: 272.218
  0x0000ffff984f5718:   ldr	s18, [x10, #12]             ;*getfield data {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
  0x0000ffff984f571c:   ldr	x0, [x28, #456]
  0x0000ffff984f5720:   ldr	x10, [x28, #472]
  0x0000ffff984f5724:   add	x11, x0, #0x110
  0x0000ffff984f5728:   cmp	x11, x10
  0x0000ffff984f572c:   b.cs	0x0000ffff984f5808  // b.hs, b.nlast
 ;; B15: #	out( B16 ) <- in( B14 )  Freq: 272.191
  0x0000ffff984f5730:   str	x11, [x28, #456]
 ;; 0x1
  0x0000ffff984f5734:   orr	x10, xzr, #0x1
  0x0000ffff984f5738:   str	x10, [x0]
  0x0000ffff984f573c:   prfm	pstl1keep, [x11, #192]
  0x0000ffff984f5740:   movz	x3, #0x0, lsl #16           ;   {metadata({type array float})}
  0x0000ffff984f5744:   movk	x3, #0x20d8
  0x0000ffff984f5748:   str	w3, [x0, #8]
  0x0000ffff984f574c:   prfm	pstl1keep, [x11, #256]
 ;; 0x40
  0x0000ffff984f5750:   orr	w10, wzr, #0x40
  0x0000ffff984f5754:   str	w10, [x0, #12]
  0x0000ffff984f5758:   prfm	pstl1keep, [x11, #320]
  0x0000ffff984f575c:   add	x10, x0, #0x10
 ;; 0x20
  0x0000ffff984f5760:   orr	x11, xzr, #0x20
 ;; zero_words {
  0x0000ffff984f5764:   subs	x8, x11, #0x8
  0x0000ffff984f5768:   b.cc	0x0000ffff984f5770  // b.lo, b.ul, b.last
  0x0000ffff984f576c:   bl	0x0000ffff984f5af8          ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f5770:   tbz	w11, #2, 0x0000ffff984f577c
  0x0000ffff984f5774:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f5778:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f577c:   tbz	w11, #1, 0x0000ffff984f5784
  0x0000ffff984f5780:   stp	xzr, xzr, [x10], #16
  0x0000ffff984f5784:   tbz	w11, #0, 0x0000ffff984f578c
  0x0000ffff984f5788:   str	xzr, [x10]                  ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; } zero_words
 ;; B16: #	out( B10 B17 ) <- in( B20 B15 )  Freq: 272.218
  0x0000ffff984f578c:   fadd	z16.s, z17.s, z16.s         ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
  0x0000ffff984f5790:   mov	z17.s, p7/m, s18            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f5794:   fadd	z17.s, z16.s, z17.s         ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f5798:   add	x10, x0, #0x10
  0x0000ffff984f579c:   st1w	{z16.s}, p7, [x10]          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f57a0:   add	w29, w29, #0x40             ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@79 (line 61)
  0x0000ffff984f57a4:   cmp	w29, w12
  0x0000ffff984f57a8:   b.lt	0x0000ffff984f5670  // b.tstop
 ;; B17: #	out( B9 B18 ) <- in( B16 )  Freq: 15.9997
  0x0000ffff984f57ac:   ldr	x10, [x28, #1184]           ; ImmutableOopMap {r13=Oop r15=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)
  0x0000ffff984f57b0:   ldr	wzr, [x10]                  ;   {poll}
  0x0000ffff984f57b4:   ldrb	w8, [x28, #1208]
  0x0000ffff984f57b8:   cbz	x8, 0x0000ffff984f57d0
 ;; 0xFFFFAECE431C
  0x0000ffff984f57bc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f57c0:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f57c4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f57c8:   mov	x0, x28
  0x0000ffff984f57cc:   blr	x8
  0x0000ffff984f57d0:   cmp	w29, w14
  0x0000ffff984f57d4:   b.lt	0x0000ffff984f5644  // b.tstop;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
 ;; B18: #	out( N489 ) <- in( B17 B2 )  Freq: 0.999166
  0x0000ffff984f57d8:   add	sp, sp, #0x290
  0x0000ffff984f57dc:   ldp	x29, x30, [sp], #16
  0x0000ffff984f57e0:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff984f57e4:   cmp	sp, x8
  0x0000ffff984f57e8:   b.hi	0x0000ffff984f5ac8  // b.pmore
  0x0000ffff984f57ec:   cntp	x8, p7, p7.b
  0x0000ffff984f57f0:   decb	x8
  0x0000ffff984f57f4:   cbz	x8, 0x0000ffff984f5804
 ;; Error: the preserved predicate register (p7) elements are not all true
  0x0000ffff984f57f8:   dcps1	#0xdeae
  0x0000ffff984f57fc:   .inst	0xafde9b00 ; undefined
  0x0000ffff984f5800:   udf	#65535
  0x0000ffff984f5804:   ret
 ;; B19: #	out( B28 B20 ) <- in( B14 )  Freq: 0.0272263
  0x0000ffff984f5808:   str	s18, [sp, #300]
  0x0000ffff984f580c:   add	x9, sp, #0x180
  0x0000ffff984f5810:   str	z16, [x9]
  0x0000ffff984f5814:   str	w12, [sp, #296]
  0x0000ffff984f5818:   str	w2, [sp, #292]
  0x0000ffff984f581c:   str	w17, [sp, #288]
  0x0000ffff984f5820:   str	w1, [sp, #28]
  0x0000ffff984f5824:   add	x9, sp, #0x20
  0x0000ffff984f5828:   str	z17, [x9]
  0x0000ffff984f582c:   str	w18, [sp, #24]
 ;; merged str pair
  0x0000ffff984f5830:   stp	w14, w16, [sp, #16]
 ;; merged str pair
  0x0000ffff984f5834:   stp	x15, x13, [sp]
 ;; 0xFC000020D8
  0x0000ffff984f5838:   mov	x1, #0x20d8                	// #8408
                                                            ;   {metadata({type array float})}
  0x0000ffff984f583c:   movk	x1, #0x0, lsl #16
  0x0000ffff984f5840:   movk	x1, #0xfc, lsl #32          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; 0x40
  0x0000ffff984f5844:   orr	w2, wzr, #0x40
  0x0000ffff984f5848:   bl	0x0000ffff984f5b08          ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                            ; - (reexecute) jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1223)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
                                                            ;   {runtime_call _new_array_Java}
  0x0000ffff984f584c:   nop                                 ;   {other}
  0x0000ffff984f5850:   movk	xzr, #0x53c
  0x0000ffff984f5854:   movk	xzr, #0x100
  0x0000ffff984f5858:   ptrue	p7.b
 ;; B20: #	out( B16 ) <- in( B19 )  Freq: 0.0272258
 ;; merged ldr pair
  0x0000ffff984f585c:   ldp	x15, x13, [sp]
 ;; merged ldr pair
  0x0000ffff984f5860:   ldp	w14, w16, [sp, #16]
  0x0000ffff984f5864:   ldr	w18, [sp, #24]
  0x0000ffff984f5868:   add	x9, sp, #0x20
  0x0000ffff984f586c:   ldr	z17, [x9]
  0x0000ffff984f5870:   ldr	w1, [sp, #28]
  0x0000ffff984f5874:   ldr	w17, [sp, #288]
  0x0000ffff984f5878:   ldr	w2, [sp, #292]
  0x0000ffff984f587c:   ldr	w12, [sp, #296]
  0x0000ffff984f5880:   add	x9, sp, #0x180
  0x0000ffff984f5884:   ldr	z16, [x9]
  0x0000ffff984f5888:   ldr	s18, [sp, #300]
  0x0000ffff984f588c:   b	0x0000ffff984f578c
 ;; B21: #	out( N489 ) <- in( B10 )  Freq: 0.000275834
 ;; 0xFFFFFFE4
  0x0000ffff984f5890:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f5894:   str	x15, [sp]
  0x0000ffff984f5898:   str	x13, [sp, #16]
  0x0000ffff984f589c:   str	w3, [sp, #24]
  0x0000ffff984f58a0:   add	x9, sp, #0x20
  0x0000ffff984f58a4:   str	z17, [x9]
  0x0000ffff984f58a8:   add	x9, sp, #0x180
  0x0000ffff984f58ac:   str	z16, [x9]
  0x0000ffff984f58b0:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f58b4:   nop                                 ;   {other}
  0x0000ffff984f58b8:   movk	xzr, #0x5a4
  0x0000ffff984f58bc:   movk	xzr, #0x200                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f58c0:   dcps1	#0xdeae
  0x0000ffff984f58c4:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f58c8:   udf	#65535                      ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
 ;; B22: #	out( N489 ) <- in( B11 )  Freq: 0.000275833
 ;; 0xFFFFFFF6
  0x0000ffff984f58cc:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f58d0:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f58d4:   nop                                 ;   {other}
  0x0000ffff984f58d8:   movk	xzr, #0x5c4
  0x0000ffff984f58dc:   movk	xzr, #0x300
 ;; uncommon trap returned which should never happen
  0x0000ffff984f58e0:   dcps1	#0xdeae
  0x0000ffff984f58e4:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f58e8:   udf	#65535
 ;; B23: #	out( N489 ) <- in( B6 B3 B4 B5 )  Freq: 3.80238e-06
 ;; 0xFFFFFF76
  0x0000ffff984f58ec:   mov	w1, #0xffffff76            	// #-138
  0x0000ffff984f58f0:   mov	x29, x2
  0x0000ffff984f58f4:   str	x3, [sp]
  0x0000ffff984f58f8:   str	w14, [sp, #8]               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f58fc:   mov	z16.s, p7/m, s17            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff984f5900:   add	x9, sp, #0x10
  0x0000ffff984f5904:   str	z16, [x9]
  0x0000ffff984f5908:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {rfp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f590c:   nop                                 ;   {other}
  0x0000ffff984f5910:   movk	xzr, #0x5fc
  0x0000ffff984f5914:   movk	xzr, #0x400
 ;; uncommon trap returned which should never happen
  0x0000ffff984f5918:   dcps1	#0xdeae
  0x0000ffff984f591c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f5920:   udf	#65535
 ;; B24: #	out( N489 ) <- in( B7 )  Freq: 9.53718e-07
 ;; 0xFFFFFF6E
  0x0000ffff984f5924:   mov	w1, #0xffffff6e            	// #-146
  0x0000ffff984f5928:   mov	x29, x2
  0x0000ffff984f592c:   str	x3, [sp]
  0x0000ffff984f5930:   str	w14, [sp, #8]               ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
  0x0000ffff984f5934:   mov	z16.s, p7/m, s17            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::zero@29 (line 552)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
  0x0000ffff984f5938:   add	x9, sp, #0x10
  0x0000ffff984f593c:   str	z16, [x9]
  0x0000ffff984f5940:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {rfp=Oop [0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f5944:   nop                                 ;   {other}
  0x0000ffff984f5948:   movk	xzr, #0x634
  0x0000ffff984f594c:   movk	xzr, #0x500                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f5950:   dcps1	#0xdeae
  0x0000ffff984f5954:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f5958:   udf	#65535
 ;; B25: #	out( N489 ) <- in( B13 )  Freq: 1e-35
 ;; 0xFFFFFFDE
  0x0000ffff984f595c:   mov	w1, #0xffffffde            	// #-34
 ;; merged str pair
  0x0000ffff984f5960:   stp	x15, x13, [sp]
  0x0000ffff984f5964:   str	x10, [sp, #16]
  0x0000ffff984f5968:   add	x9, sp, #0x20
  0x0000ffff984f596c:   str	z17, [x9]
  0x0000ffff984f5970:   add	x9, sp, #0x180
  0x0000ffff984f5974:   str	z16, [x9]
  0x0000ffff984f5978:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f597c:   nop                                 ;   {other}
  0x0000ffff984f5980:   movk	xzr, #0x66c
  0x0000ffff984f5984:   movk	xzr, #0x600                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f5988:   dcps1	#0xdeae
  0x0000ffff984f598c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f5990:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
 ;; B26: #	out( N489 ) <- in( B12 )  Freq: 0.000275833
 ;; 0xFFFFFFF4
  0x0000ffff984f5994:   mov	w1, #0xfffffff4            	// #-12
 ;; merged str pair
  0x0000ffff984f5998:   stp	x15, x13, [sp]
  0x0000ffff984f599c:   add	x9, sp, #0x10
  0x0000ffff984f59a0:   str	z17, [x9]
  0x0000ffff984f59a4:   add	x9, sp, #0x180
  0x0000ffff984f59a8:   str	z16, [x9]
  0x0000ffff984f59ac:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f59b0:   nop                                 ;   {other}
  0x0000ffff984f59b4:   movk	xzr, #0x6a0
  0x0000ffff984f59b8:   movk	xzr, #0x700                 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; uncommon trap returned which should never happen
  0x0000ffff984f59bc:   dcps1	#0xdeae
  0x0000ffff984f59c0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f59c4:   udf	#65535
 ;; B27: #	out( N489 ) <- in( B1 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f59c8:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f59cc:   bl	0x0000ffff984f5b18          ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f59d0:   nop                                 ;   {other}
  0x0000ffff984f59d4:   movk	xzr, #0x6c0
  0x0000ffff984f59d8:   movk	xzr, #0x800
 ;; uncommon trap returned which should never happen
  0x0000ffff984f59dc:   dcps1	#0xdeae
  0x0000ffff984f59e0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f59e4:   udf	#65535
 ;; B28: #	out( N489 ) <- in( B19 )  Freq: 2.72263e-07
  0x0000ffff984f59e8:   mov	x1, x0
  0x0000ffff984f59ec:   add	sp, sp, #0x290
  0x0000ffff984f59f0:   ldp	x29, x30, [sp], #16
  0x0000ffff984f59f4:   adrp	x8, 0x0000ffff97d65000      ;   {runtime_call _rethrow_Java}
  0x0000ffff984f59f8:   add	x8, x8, #0x140
  0x0000ffff984f59fc:   br	x8                          ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
                                                            ; - jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
                                                            ; - jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
                                                            ; - jdk.incubator.vector.FloatVector::add@5 (line 1249)
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
 ;; ZLoadBarrierStubC2
  0x0000ffff984f5a00:   stp	x1, x2, [sp, #-80]!
  0x0000ffff984f5a04:   stp	x10, x12, [sp, #16]
  0x0000ffff984f5a08:   stp	x13, x14, [sp, #32]
  0x0000ffff984f5a0c:   stp	x15, x16, [sp, #48]
  0x0000ffff984f5a10:   stp	x17, x18, [sp, #64]
  0x0000ffff984f5a14:   sub	sp, sp, #0x200
  0x0000ffff984f5a18:   str	z16, [sp]
  0x0000ffff984f5a1c:   str	z17, [sp, #1, mul vl]
  0x0000ffff984f5a20:   add	x1, x10, #0x10
  0x0000ffff984f5a24:   mov	x0, x11
 ;; 0xFFFFAF670784
  0x0000ffff984f5a28:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f5a2c:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f5a30:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f5a34:   blr	x8
  0x0000ffff984f5a38:   mov	x11, x0
  0x0000ffff984f5a3c:   ldr	z17, [sp, #1, mul vl]
  0x0000ffff984f5a40:   ldr	z16, [sp]
  0x0000ffff984f5a44:   add	sp, sp, #0x200
  0x0000ffff984f5a48:   ptrue	p7.b
  0x0000ffff984f5a4c:   ldp	x10, x12, [sp, #16]
  0x0000ffff984f5a50:   ldp	x13, x14, [sp, #32]
  0x0000ffff984f5a54:   ldp	x15, x16, [sp, #48]
  0x0000ffff984f5a58:   ldp	x17, x18, [sp, #64]
  0x0000ffff984f5a5c:   ldp	x1, x2, [sp], #80
  0x0000ffff984f5a60:   b	0x0000ffff984f56f4
 ;; ZLoadBarrierStubC2
  0x0000ffff984f5a64:   stp	x1, x2, [sp, #-80]!
  0x0000ffff984f5a68:   stp	x11, x12, [sp, #16]
  0x0000ffff984f5a6c:   stp	x13, x14, [sp, #32]
  0x0000ffff984f5a70:   stp	x15, x16, [sp, #48]
  0x0000ffff984f5a74:   stp	x17, x18, [sp, #64]
  0x0000ffff984f5a78:   sub	sp, sp, #0x200
  0x0000ffff984f5a7c:   str	z16, [sp]
  0x0000ffff984f5a80:   str	z17, [sp, #1, mul vl]
  0x0000ffff984f5a84:   add	x1, x11, #0x10
  0x0000ffff984f5a88:   mov	x0, x10
 ;; 0xFFFFAF670784
  0x0000ffff984f5a8c:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f5a90:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f5a94:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f5a98:   blr	x8
  0x0000ffff984f5a9c:   mov	x10, x0
  0x0000ffff984f5aa0:   ldr	z17, [sp, #1, mul vl]
  0x0000ffff984f5aa4:   ldr	z16, [sp]
  0x0000ffff984f5aa8:   add	sp, sp, #0x200
  0x0000ffff984f5aac:   ptrue	p7.b
  0x0000ffff984f5ab0:   ldp	x11, x12, [sp, #16]
  0x0000ffff984f5ab4:   ldp	x13, x14, [sp, #32]
  0x0000ffff984f5ab8:   ldp	x15, x16, [sp, #48]
  0x0000ffff984f5abc:   ldp	x17, x18, [sp, #64]
  0x0000ffff984f5ac0:   ldp	x1, x2, [sp], #80
  0x0000ffff984f5ac4:   b	0x0000ffff984f5704
  0x0000ffff984f5ac8:   adr	x8, 0x0000ffff984f57e0      ;   {internal_word}
  0x0000ffff984f5acc:   str	x8, [x28, #1200]
  0x0000ffff984f5ad0:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff984f5ad4:   add	x8, x8, #0xac0
  0x0000ffff984f5ad8:   br	x8
 ;; 0xFFFF97C263C0
  0x0000ffff984f5adc:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f5ae0:   movk	x8, #0x97c2, lsl #16
  0x0000ffff984f5ae4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f5ae8:   blr	x8
  0x0000ffff984f5aec:   b	0x0000ffff984f55bc
  0x0000ffff984f5af0:   udf	#58640                      ;   {other}
  0x0000ffff984f5af4:   udf	#0
[Stub Code]
  0x0000ffff984f5af8:   ldr	x8, 0x0000ffff984f5b00      ;   {no_reloc}
  0x0000ffff984f5afc:   br	x8
  0x0000ffff984f5b00:   bl	0x0000ffff97562600
  0x0000ffff984f5b04:   udf	#65535
  0x0000ffff984f5b08:   ldr	x8, 0x0000ffff984f5b10      ;   {trampoline_stub}
  0x0000ffff984f5b0c:   br	x8
  0x0000ffff984f5b10:   bl	0x0000ffff97a6ac10
  0x0000ffff984f5b14:   udf	#65535
  0x0000ffff984f5b18:   ldr	x8, 0x0000ffff984f5b20      ;   {trampoline_stub}
  0x0000ffff984f5b1c:   br	x8
  0x0000ffff984f5b20:   bl	0x0000ffff97756c20
  0x0000ffff984f5b24:   udf	#65535
[Exception Handler]
  0x0000ffff984f5b28:   adrp	x8, 0x0000ffff97d57000      ;   {runtime_call ExceptionBlob}
  0x0000ffff984f5b2c:   add	x8, x8, #0x6c0
  0x0000ffff984f5b30:   br	x8
[Deopt Handler Code]
  0x0000ffff984f5b34:   adr	x30, 0x0000ffff984f5b34
  0x0000ffff984f5b38:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff984f5b3c:   add	x8, x8, #0xdc0
  0x0000ffff984f5b40:   br	x8
  0x0000ffff984f5b44:   udf	#0
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff984f5b48:   0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
  0x0000ffff984f5b50:   0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5b58:   0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
  0x0000ffff984f5b60:   0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
  0x0000ffff984f5b68:   0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
  0x0000ffff984f5b70:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
  0x0000ffff984f5b78:   0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff984f5b80:   0x0000fff928401d80 {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff984f5b88:   0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5b90:   0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5b98:   0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5ba0:   0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5ba8:   0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5bb0:   0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  0x0000ffff984f5bb8:   0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f5bc0:   0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
  0x0000ffff984f5bc8:   0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f5bd0:   0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5bd8:   0x0000fff9281551c0 {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5be0:   0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5be8:   0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
  0x0000ffff984f5bf0:   0x000000fc01001450 'InnerFloat'
  0x0000ffff984f5bf8:   0x000000fc000020d8 {type array float}
  0x0000ffff984f5c00:   0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5c08:   0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5c10:   0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5c18:   0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5c20:   0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5c28:   0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5c30:   0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
  0x0000ffff984f5c38:   0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f5c40:   0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
  0x0000ffff984f5c48:   0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
  0x0000ffff984f5c50:   0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5c58:   0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
  0x0000ffff984f5c60:   0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f5c68:   0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5c70:   0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  0x0000ffff984f5c78:   0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5c80:   0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5c88:   0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
  0x0000ffff984f5c90:   0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f5c98:   0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5ca0:   0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5ca8:   0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  0x0000ffff984f5cb0:   0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
  0x0000ffff984f5cb8:   0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f5cc0:   0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f5cc8:   0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
  0x0000ffff984f5cd0:   0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f5cd8:   0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f5ce0:   0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5ce8:   0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5cf0:   0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5cf8:   0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5d00:   0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5d08:   0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
  0x0000ffff984f5d10:   0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
  0x0000ffff984f5d18:   0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5d20:   0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5d28:   0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
  0x0000ffff984f5d30:   0x000000fc01001870 'jdk/random/L32X64MixRandom'
  0x0000ffff984f5d38:   0x000000fc00174f50 'java/util/random/RandomGenerator'
  0x0000ffff984f5d40:   0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
  0x0000ffff984f5d48:   0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f5d50:   0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
  0x0000ffff984f5d58:   0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
  0x0000ffff984f5d60:   0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  0x0000ffff984f5d68:   0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff984f553f offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff984f55bc offset=7c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
PcDesc(pc=0x0000ffff984f55cc offset=8c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f55dc offset=9c bits=0):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f55e0 offset=a0 bits=0):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f5670 offset=130 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5674 offset=134 bits=0):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f5678 offset=138 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5684 offset=144 bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f5688 offset=148 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5694 offset=154 bits=0):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f5698 offset=158 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f569c offset=15c bits=0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56a8 offset=168 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f56ac offset=16c bits=0):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
PcDesc(pc=0x0000ffff984f56b0 offset=170 bits=0):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56bc offset=17c bits=0):
   jdk.random.L32X64MixRandom::nextInt@25 (line 238)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56c0 offset=180 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f56c4 offset=184 bits=0):
   jdk.random.L32X64MixRandom::nextInt@57 (line 245)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56c8 offset=188 bits=0):
   java.lang.Integer::rotateLeft@7 (line 1673)
   jdk.random.L32X64MixRandom::nextInt@62 (line 246)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56d8 offset=198 bits=0):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56dc offset=19c bits=0):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f56e0 offset=1a0 bits=0):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
   java.util.random.RandomGenerator::nextInt@6 (line 822)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
PcDesc(pc=0x0000ffff984f5714 offset=1d4 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5718 offset=1d8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
PcDesc(pc=0x0000ffff984f571c offset=1dc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
PcDesc(pc=0x0000ffff984f578c offset=24c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5790 offset=250 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
PcDesc(pc=0x0000ffff984f5794 offset=254 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5798 offset=258 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f57a0 offset=260 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f57a4 offset=264 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@79 (line 61)
PcDesc(pc=0x0000ffff984f57b0 offset=270 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r15 [30],oop
    - l2: reg r13 [26],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[190]
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 0: R obj[190], jdk.incubator.vector.FloatMaxVector
        Fields: reg v17 [132],vector
PcDesc(pc=0x0000ffff984f57d8 offset=298 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
PcDesc(pc=0x0000ffff984f5844 offset=304 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f584c offset=30c bits=5):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: obj[167]
    - @6: obj[168]
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: stack[300]
   Objects
    - 0: R obj[167], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[168], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
PcDesc(pc=0x0000ffff984f58b4 offset=374 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[16],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[266]
    - l5: reg rfp [58],int
    - l6: obj[267]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
    - @1: stack[24]
   Objects
    - 0: R obj[266], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[267], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
PcDesc(pc=0x0000ffff984f58c0 offset=380 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f58cc offset=38c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
PcDesc(pc=0x0000ffff984f58d4 offset=394 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f58fc offset=3bc bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5900 offset=3c0 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
PcDesc(pc=0x0000ffff984f590c offset=3cc bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[229]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[229], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
PcDesc(pc=0x0000ffff984f5934 offset=3f4 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5938 offset=3f8 bits=0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
PcDesc(pc=0x0000ffff984f5944 offset=404 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[249]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[249], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
PcDesc(pc=0x0000ffff984f5950 offset=410 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f597c offset=43c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[238]
    - l5: reg rfp [58],int
    - l6: obj[239]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
   Objects
    - 0: R obj[238], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[239], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
PcDesc(pc=0x0000ffff984f5988 offset=448 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5994 offset=454 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
PcDesc(pc=0x0000ffff984f59b0 offset=470 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[203]
    - l5: reg rfp [58],int
    - l6: obj[204]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
   Objects
    - 0: R obj[203], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
    - 1: R obj[204], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
PcDesc(pc=0x0000ffff984f59bc offset=47c bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f59d0 offset=490 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: empty
    - @1: nullptr
PcDesc(pc=0x0000ffff984f5a00 offset=4c0 bits=0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
PcDesc(pc=0x0000ffff984f5b49 offset=609 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 9 OopMaps

ImmutableOopMap {r13=Oop r15=Oop } pc offsets: 624 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 780 
ImmutableOopMap {[0]=Oop [16]=Oop } pc offsets: 884 
ImmutableOopMap {} pc offsets: 916 
ImmutableOopMap {rfp=Oop [0]=Oop } pc offsets: 972 1028 
ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop } pc offsets: 1084 
ImmutableOopMap {[0]=Oop [8]=Oop } pc offsets: 1136 
ImmutableOopMap {} pc offsets: 1168 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff984f55bc offset=7c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@-1 (line 58)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f55cc offset=8c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f55dc offset=9c):
   jdk.random.L32X64MixRandom::nextInt@5 (line 235)
ScopeDesc(pc=0x0000ffff984f55dc offset=9c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f55dc offset=9c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f55dc offset=9c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f55e0 offset=a0):
   jdk.random.L32X64MixRandom::nextInt@1 (line 235)
ScopeDesc(pc=0x0000ffff984f55e0 offset=a0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f55e0 offset=a0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f55e0 offset=a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5670 offset=130):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5674 offset=134):
   jdk.random.L32X64MixRandom::nextInt@8 (line 235)
ScopeDesc(pc=0x0000ffff984f5674 offset=134):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f5674 offset=134):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f5674 offset=134):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5678 offset=138):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5684 offset=144):
   jdk.internal.util.random.RandomSupport::mixLea32@8 (line 915)
ScopeDesc(pc=0x0000ffff984f5684 offset=144):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f5684 offset=144):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f5684 offset=144):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f5684 offset=144):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5688 offset=148):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5694 offset=154):
   jdk.internal.util.random.RandomSupport::mixLea32@18 (line 916)
ScopeDesc(pc=0x0000ffff984f5694 offset=154):
   jdk.random.L32X64MixRandom::nextInt@9 (line 235)
ScopeDesc(pc=0x0000ffff984f5694 offset=154):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f5694 offset=154):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f5694 offset=154):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5698 offset=158):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f569c offset=15c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@19 (line 595)
ScopeDesc(pc=0x0000ffff984f569c offset=15c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f569c offset=15c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f56a8 offset=168):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f56ac offset=16c):
   jdk.incubator.vector.FloatVector::fromArray0Template@33 (line 3282)
ScopeDesc(pc=0x0000ffff984f56ac offset=16c):
   jdk.incubator.vector.FloatMaxVector::fromArray0@3 (line 844)
ScopeDesc(pc=0x0000ffff984f56ac offset=16c):
   jdk.incubator.vector.FloatVector::fromArray@24 (line 2799)
ScopeDesc(pc=0x0000ffff984f56ac offset=16c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@24 (line 62)
ScopeDesc(pc=0x0000ffff984f56b0 offset=170):
   jdk.random.L32X64MixRandom::nextInt@41 (line 243)
ScopeDesc(pc=0x0000ffff984f56b0 offset=170):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56b0 offset=170):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56b0 offset=170):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56bc offset=17c):
   jdk.random.L32X64MixRandom::nextInt@25 (line 238)
ScopeDesc(pc=0x0000ffff984f56bc offset=17c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56bc offset=17c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56bc offset=17c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f56c0 offset=180):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f56c4 offset=184):
   jdk.random.L32X64MixRandom::nextInt@57 (line 245)
ScopeDesc(pc=0x0000ffff984f56c4 offset=184):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56c4 offset=184):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56c4 offset=184):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56c8 offset=188):
   java.lang.Integer::rotateLeft@7 (line 1673)
ScopeDesc(pc=0x0000ffff984f56c8 offset=188):
   jdk.random.L32X64MixRandom::nextInt@62 (line 246)
ScopeDesc(pc=0x0000ffff984f56c8 offset=188):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56c8 offset=188):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56c8 offset=188):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56d8 offset=198):
   jdk.random.L32X64MixRandom::nextInt@26 (line 238)
ScopeDesc(pc=0x0000ffff984f56d8 offset=198):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56d8 offset=198):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56d8 offset=198):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56dc offset=19c):
   jdk.random.L32X64MixRandom::nextInt@73 (line 248)
ScopeDesc(pc=0x0000ffff984f56dc offset=19c):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56dc offset=19c):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56dc offset=19c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f56e0 offset=1a0):
   jdk.random.L32X64MixRandom::nextInt@68 (line 248)
ScopeDesc(pc=0x0000ffff984f56e0 offset=1a0):
   jdk.internal.util.random.RandomSupport::boundedNextInt@5 (line 592)
ScopeDesc(pc=0x0000ffff984f56e0 offset=1a0):
   java.util.random.RandomGenerator::nextInt@6 (line 822)
ScopeDesc(pc=0x0000ffff984f56e0 offset=1a0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@36 (line 63)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5714 offset=1d4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5718 offset=1d8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
ScopeDesc(pc=0x0000ffff984f571c offset=1dc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@52 (line 64)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f578c offset=24c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5790 offset=250):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5790 offset=250):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5790 offset=250):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5790 offset=250):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
ScopeDesc(pc=0x0000ffff984f5790 offset=250):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5794 offset=254):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5798 offset=258):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f57a0 offset=260):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f57a4 offset=264):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@79 (line 61)
ScopeDesc(pc=0x0000ffff984f57b0 offset=270):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@82 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg r15 [30],oop
    - l2: reg r13 [26],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[190]
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: empty
   Objects
    - 0: R obj[190], jdk.incubator.vector.FloatMaxVector
        Fields: reg v17 [132],vector
ScopeDesc(pc=0x0000ffff984f57d8 offset=298):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5844 offset=304):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f584c offset=30c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: 4
    - @1: a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
    - @2: nullptr
    - @3: a 'java/lang/Class'{0x0000080000000570} = float
    - @4: 64
    - @5: obj[167]
    - @6: obj[168]
    - @7: nullptr
    - @8: a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
ScopeDesc(pc=0x0000ffff984f584c offset=30c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 285)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f584c offset=30c):
   jdk.incubator.vector.FloatMaxVector::lanewise@3 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
ScopeDesc(pc=0x0000ffff984f584c offset=30c):
   jdk.incubator.vector.FloatVector::add@5 (line 1223)
   Locals
    - l0: empty
    - l1: empty
ScopeDesc(pc=0x0000ffff984f584c offset=30c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@61 (line 65)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: empty
    - l5: reg rfp [58],int
    - l6: empty
    - l7: empty
    - l8: stack[300]
   Objects
    - 0: R obj[167], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[168], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
ScopeDesc(pc=0x0000ffff984f58b4 offset=374):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@41 (line 63)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[16],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[266]
    - l5: reg rfp [58],int
    - l6: obj[267]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
    - @1: stack[24]
   Objects
    - 0: R obj[266], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[267], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f58c0 offset=380):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f58cc offset=38c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)
ScopeDesc(pc=0x0000ffff984f58d4 offset=394):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@42 (line 63)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f58fc offset=3bc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5900 offset=3c0):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff984f5900 offset=3c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
ScopeDesc(pc=0x0000ffff984f590c offset=3cc):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[229]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[229], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5934 offset=3f4):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5938 offset=3f8):
   jdk.incubator.vector.FloatVector::zero@29 (line 552)
ScopeDesc(pc=0x0000ffff984f5938 offset=3f8):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@5 (line 60)
ScopeDesc(pc=0x0000ffff984f5944 offset=404):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@17 (line 61)  reexecute=true
   Locals
    - l0: empty
    - l1: reg rfp [58],oop
    - l2: stack[0],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[249]
    - l5: 0
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: 0
    - @1: stack[8]
   Objects
    - 0: R obj[249], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5950 offset=410):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f597c offset=43c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[238]
    - l5: reg rfp [58],int
    - l6: obj[239]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: stack[16],oop
   Objects
    - 0: R obj[238], jdk.incubator.vector.FloatMaxVector
        Fields: stack[32],vector
    - 1: R obj[239], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5988 offset=448):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f5994 offset=454):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
ScopeDesc(pc=0x0000ffff984f59b0 offset=470):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@49 (line 64)
   Locals
    - l0: empty
    - l1: stack[0],oop
    - l2: stack[8],oop
    - l3: a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
    - l4: obj[203]
    - l5: reg rfp [58],int
    - l6: obj[204]
    - l7: empty
    - l8: empty
   Expression stack
    - @0: nullptr
   Objects
    - 0: R obj[203], jdk.incubator.vector.FloatMaxVector
        Fields: stack[16],vector
    - 1: R obj[204], jdk.incubator.vector.FloatMaxVector
        Fields: stack[384],vector
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f59bc offset=47c):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
ScopeDesc(pc=0x0000ffff984f59d0 offset=490):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@16 (line 61)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
    - l6: empty
    - l7: empty
    - l8: empty
   Expression stack
    - @0: empty
    - @1: nullptr
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   jdk.incubator.vector.FloatVector::lanewiseTemplate@96 (line 774)
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 285)
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   jdk.incubator.vector.Float128Vector::lanewise@3 (line 41)
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   jdk.incubator.vector.FloatVector::lanewise@7 (line 872)
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   jdk.incubator.vector.FloatVector::add@5 (line 1249)
ScopeDesc(pc=0x0000ffff984f5a00 offset=4c0):
   TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED@66 (line 65)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff984f5480: 3005
relocInfo@0x0000ffff984f5480 [type=6(runtime_call) addr=0x0000ffff984f5554 offset=20] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff984f5482: 7c04aece431c0000ffff380b
relocInfo@0x0000ffff984f548c [type=7(external_word) addr=0x0000ffff984f5580 offset=44 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f548e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff984f5498 [type=7(external_word) addr=0x0000ffff984f5598 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff984f549a: 7801080d
relocInfo@0x0000ffff984f549c [type=1(oop) addr=0x0000ffff984f55cc offset=52 data=1] | [oop_addr=0x0000ffff984f5b48 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f549e: 78010817
relocInfo@0x0000ffff984f54a0 [type=1(oop) addr=0x0000ffff984f5628 offset=92 data=1] | [oop_addr=0x0000ffff984f5b48 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f54a2: 78010828
relocInfo@0x0000ffff984f54a4 [type=1(oop) addr=0x0000ffff984f56c8 offset=160 data=1] | [oop_addr=0x0000ffff984f5b48 *=0x0000080000a48310 offset=0]
         @0x0000ffff984f54a6: 9009
relocInfo@0x0000ffff984f54a6 [type=18(barrier) addr=0x0000ffff984f56ec offset=36]
         @0x0000ffff984f54a8: 9004
relocInfo@0x0000ffff984f54a8 [type=18(barrier) addr=0x0000ffff984f56fc offset=16]
         @0x0000ffff984f54aa: 780f6003
relocInfo@0x0000ffff984f54ac [type=12(metadata) addr=0x0000ffff984f5708 offset=12 data=15] | [metadata_addr=0x0000ffff984f5bf0 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff984f54ae: 7810600e
relocInfo@0x0000ffff984f54b0 [type=12(metadata) addr=0x0000ffff984f5740 offset=56 data=16] | [metadata_addr=0x0000ffff984f5bf8 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f54b2: 300b
relocInfo@0x0000ffff984f54b2 [type=6(runtime_call) addr=0x0000ffff984f576c offset=44] | [destination=0x0000ffff97c1b2c0]
         @0x0000ffff984f54b4: 5011
relocInfo@0x0000ffff984f54b4 [type=10(poll) addr=0x0000ffff984f57b0 offset=68]
         @0x0000ffff984f54b6: 7c04aece431c0000ffff3803
relocInfo@0x0000ffff984f54c0 [type=7(external_word) addr=0x0000ffff984f57bc offset=12 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f54c2: 5809
relocInfo@0x0000ffff984f54c2 [type=11(poll_return) addr=0x0000ffff984f57e0 offset=36]
         @0x0000ffff984f54c4: 78106016
relocInfo@0x0000ffff984f54c6 [type=12(metadata) addr=0x0000ffff984f5838 offset=88 data=16] | [metadata_addr=0x0000ffff984f5bf8 *=0x000000fc000020d8 offset=0]metadata_value=0x000000fc000020d8: {type array float}
         @0x0000ffff984f54c8: 3004
relocInfo@0x0000ffff984f54c8 [type=6(runtime_call) addr=0x0000ffff984f5848 offset=16] | [destination=0x0000ffff97d5d440]
         @0x0000ffff984f54ca: 8001
relocInfo@0x0000ffff984f54ca [type=16(post_call_nop) addr=0x0000ffff984f584c offset=4]
         @0x0000ffff984f54cc: 3019
relocInfo@0x0000ffff984f54cc [type=6(runtime_call) addr=0x0000ffff984f58b0 offset=100] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54ce: 8001
relocInfo@0x0000ffff984f54ce [type=16(post_call_nop) addr=0x0000ffff984f58b4 offset=4]
         @0x0000ffff984f54d0: 3007
relocInfo@0x0000ffff984f54d0 [type=6(runtime_call) addr=0x0000ffff984f58d0 offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54d2: 8001
relocInfo@0x0000ffff984f54d2 [type=16(post_call_nop) addr=0x0000ffff984f58d4 offset=4]
         @0x0000ffff984f54d4: 300d
relocInfo@0x0000ffff984f54d4 [type=6(runtime_call) addr=0x0000ffff984f5908 offset=52] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54d6: 8001
relocInfo@0x0000ffff984f54d6 [type=16(post_call_nop) addr=0x0000ffff984f590c offset=4]
         @0x0000ffff984f54d8: 300d
relocInfo@0x0000ffff984f54d8 [type=6(runtime_call) addr=0x0000ffff984f5940 offset=52] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54da: 8001
relocInfo@0x0000ffff984f54da [type=16(post_call_nop) addr=0x0000ffff984f5944 offset=4]
         @0x0000ffff984f54dc: 300d
relocInfo@0x0000ffff984f54dc [type=6(runtime_call) addr=0x0000ffff984f5978 offset=52] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54de: 8001
relocInfo@0x0000ffff984f54de [type=16(post_call_nop) addr=0x0000ffff984f597c offset=4]
         @0x0000ffff984f54e0: 300c
relocInfo@0x0000ffff984f54e0 [type=6(runtime_call) addr=0x0000ffff984f59ac offset=48] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54e2: 8001
relocInfo@0x0000ffff984f54e2 [type=16(post_call_nop) addr=0x0000ffff984f59b0 offset=4]
         @0x0000ffff984f54e4: 3007
relocInfo@0x0000ffff984f54e4 [type=6(runtime_call) addr=0x0000ffff984f59cc offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f54e6: 8001
relocInfo@0x0000ffff984f54e6 [type=16(post_call_nop) addr=0x0000ffff984f59d0 offset=4]
         @0x0000ffff984f54e8: 3009
relocInfo@0x0000ffff984f54e8 [type=6(runtime_call) addr=0x0000ffff984f59f4 offset=36] | [destination=0x0000ffff97d65140]
         @0x0000ffff984f54ea: 78ba4035
relocInfo@0x0000ffff984f54ec [type=8(internal_word) addr=0x0000ffff984f5ac8 offset=212 data=186] | [target=0x0000ffff984f57e0]
         @0x0000ffff984f54ee: 3002
relocInfo@0x0000ffff984f54ee [type=6(runtime_call) addr=0x0000ffff984f5ad0 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff984f54f0: 3003
relocInfo@0x0000ffff984f54f0 [type=6(runtime_call) addr=0x0000ffff984f5adc offset=12] | [destination=0x0000ffff97c263c0]
         @0x0000ffff984f54f2: 8805
relocInfo@0x0000ffff984f54f2 [type=17(entry_guard) addr=0x0000ffff984f5af0 offset=20]
         @0x0000ffff984f54f4: 0002
relocInfo@0x0000ffff984f54f4 [type=0(none) addr=0x0000ffff984f5af8 offset=8]
         @0x0000ffff984f54f6: 7c01ff756800
relocInfo@0x0000ffff984f54fa [type=13(trampoline_stub) addr=0x0000ffff984f5af8 offset=0 data=-139] | [trampoline owner=0x0000ffff984f576c]
         @0x0000ffff984f54fc: 7c01ff3e6804
relocInfo@0x0000ffff984f5500 [type=13(trampoline_stub) addr=0x0000ffff984f5b08 offset=16 data=-194] | [trampoline owner=0x0000ffff984f5848]
         @0x0000ffff984f5502: 7c01fedd6804
relocInfo@0x0000ffff984f5506 [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=16 data=-291] | [trampoline owner=0x0000ffff984f59cc]
         @0x0000ffff984f5508: 7c01fee56800
relocInfo@0x0000ffff984f550c [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-283] | [trampoline owner=0x0000ffff984f59ac]
         @0x0000ffff984f550e: 7c01fef26800
relocInfo@0x0000ffff984f5512 [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-270] | [trampoline owner=0x0000ffff984f5978]
         @0x0000ffff984f5514: 7c01ff006800
relocInfo@0x0000ffff984f5518 [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-256] | [trampoline owner=0x0000ffff984f5940]
         @0x0000ffff984f551a: 7c01ff0e6800
relocInfo@0x0000ffff984f551e [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-242] | [trampoline owner=0x0000ffff984f5908]
         @0x0000ffff984f5520: 7c01ff1c6800
relocInfo@0x0000ffff984f5524 [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-228] | [trampoline owner=0x0000ffff984f58d0]
         @0x0000ffff984f5526: 7c01ff246800
relocInfo@0x0000ffff984f552a [type=13(trampoline_stub) addr=0x0000ffff984f5b18 offset=0 data=-220] | [trampoline owner=0x0000ffff984f58b0]
         @0x0000ffff984f552c: 3004
relocInfo@0x0000ffff984f552c [type=6(runtime_call) addr=0x0000ffff984f5b28 offset=16] | [destination=0x0000ffff97d576c0]
         @0x0000ffff984f552e: 3004
relocInfo@0x0000ffff984f552e [type=6(runtime_call) addr=0x0000ffff984f5b38 offset=16] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff984f5530: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
Dependency of type evol_method
  method  = {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
Dependency of type evol_method
  method  = *{method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = *{method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
Dependency of type evol_method
  method  = {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
Dependency of type evol_method
  method  = *{method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
Dependency of type evol_method
  method  = *{method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
Dependency of type evol_method
  method  = *{method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
Dependency of type evol_method
  method  = {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
Dependency of type evol_method
  method  = {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = *{method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
Dependency of type evol_method
  method  = {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type evol_method
  method  = {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
Dependency of type evol_method
  method  = {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
Dependency of type evol_method
  method  = {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
Dependency of type unique_concrete_method_4
  context = jdk.random.L32X64MixRandom
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
  class   = java.util.random.RandomGenerator
  method  = {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
   [nmethod<=klass]jdk.random.L32X64MixRandom
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.FloatVector$FloatSpecies
  method  = {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
  class   = jdk.incubator.vector.VectorSpecies
  method  = *{method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
   [nmethod<=klass]jdk.incubator.vector.FloatVector$FloatSpecies
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$AssociativeImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
  class   = jdk.incubator.vector.VectorOperators$OperatorImpl
  method  = {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$AssociativeImpl
Dependency of type unique_concrete_method_4
  context = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
  class   = jdk.incubator.vector.VectorOperators$ImplCache
  method  = {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
   [nmethod<=klass]jdk.incubator.vector.VectorOperators$ImplCache
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 24 bytes)
catch_pco = 780 (pc=0x0000ffff984f584c, 1 entries)
  bci -1 at scope depth 0 -> pco 1192 (pc=0x0000ffff984f59e8)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 3 entries, 28 bytes):
{
   < 0x0000ffff984f55c0, 0x0000ffff984f59c8 > < 0x0000ffff984f5618, 0x0000ffff984f58ec > < 0x0000ffff984f5704, 0x0000ffff984f5994 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000a48310 a 'jdk/random/L32X64MixRandom'{0x0000080000a48310}
#2: 0x0000080000a972f0 a 'java/lang/Class'{0x0000080000a972f0} = 'jdk/incubator/vector/FloatMaxVector'
#3: 0x0000080000a97280 a 'jdk/incubator/vector/FloatVector$FloatSpecies'{0x0000080000a97280}
#4: 0x0000080000000570 a 'java/lang/Class'{0x0000080000000570} = float
#5: 0x0000080000b70418 a 'jdk/incubator/vector/FloatVector$$Lambda+0x000000fc0105df58'{0x0000080000b70418}
#6: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
#7: 0x00000800000ade80 a 'java/lang/Class'{0x00000800000ade80} = 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
# 0: 0x0000000000000000 nullptr-oop
# 1: 0x0000fff928401d80 {method} {0x0000fff928401d80} 'test_float_vector_PREFERRED' '([F[LOuter;)V' in 'TestZGCSpillingAtLoadBarrierStub'
# 2: 0x0000fff928050690 {method} {0x0000fff928050690} 'add' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 3: 0x0000fff92804f590 {method} {0x0000fff92804f590} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 4: 0x0000fff928122d58 {method} {0x0000fff928122d58} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
# 5: 0x0000fff92811ede8 {method} {0x0000fff92811ede8} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
# 6: 0x0000fff92804f080 {method} {0x0000fff92804f080} 'lanewiseTemplate' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
# 7: 0x000000fc00175e78 {method} {0x000000fc00175e78} 'nextInt' '(I)I' in 'java/util/random/RandomGenerator'
# 8: 0x000000fc002c9e20 {method} {0x000000fc002c9e20} 'boundedNextInt' '(Ljava/util/random/RandomGenerator;I)I' in 'jdk/internal/util/random/RandomSupport'
# 9: 0x0000fff928403e58 {method} {0x0000fff928403e58} 'nextInt' '()I' in 'jdk/random/L32X64MixRandom'
#10: 0x000000fc002ca4b0 {method} {0x000000fc002ca4b0} 'mixLea32' '(I)I' in 'jdk/internal/util/random/RandomSupport'
#11: 0x0000fff9280561c0 {method} {0x0000fff9280561c0} 'fromArray' '(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#12: 0x0000fff9281551c0 {method} {0x0000fff9281551c0} 'fromArray0' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#13: 0x0000fff9280572d0 {method} {0x0000fff9280572d0} 'fromArray0Template' '([FI)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#14: 0x000000fc0049ed58 {method} {0x000000fc0049ed58} 'rotateLeft' '(II)I' in 'java/lang/Integer'
#15: 0x000000fc01001450 'InnerFloat'
#16: 0x000000fc000020d8 {type array float}
#17: 0x0000fff9280505a8 {method} {0x0000fff9280505a8} 'add' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#18: 0x0000fff928156fd0 {method} {0x0000fff928156fd0} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#19: 0x0000fff928153100 {method} {0x0000fff928153100} 'lanewise' '(Ljdk/incubator/vector/VectorOperators$Binary;Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#20: 0x0000fff92804e2e8 {method} {0x0000fff92804e2e8} 'zero' '(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#21: 0x0000fff9280f2cc0 {method} {0x0000fff9280f2cc0} 'vectorType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#22: 0x0000fff92804dde8 {method} {0x0000fff92804dde8} 'toBits' '(F)J' in 'jdk/incubator/vector/FloatVector'
#23: 0x000000fc000abc28 {method} {0x000000fc000abc28} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder'
#24: 0x0000fff9280f9080 {method} {0x0000fff9280f9080} 'length' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#25: 0x0000fff928400a28 {method} {0x0000fff928400a28} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x000000fc01000800'
#26: 0x0000fff9281e5020 {method} {0x0000fff9281e5020} 'checkFromIndexSize' '(III)I' in 'jdk/incubator/vector/VectorIntrinsics'
#27: 0x0000fff9280f3720 {method} {0x0000fff9280f3720} 'dummyVector' '()Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#28: 0x000000fc00056388 {method} {0x000000fc00056388} 'checkIndex' '(II)I' in 'java/util/Objects'
#29: 0x0000fff9280fa960 {method} {0x0000fff9280fa960} 'dummyVector' '()Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractSpecies'
#30: 0x0000fff9280f2b08 {method} {0x0000fff9280f2b08} 'elementType' '()Ljava/lang/Class;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#31: 0x0000fff9280f9158 {method} {0x0000fff9280f9158} 'laneCount' '()I' in 'jdk/incubator/vector/AbstractSpecies'
#32: 0x0000fff928058a08 {method} {0x0000fff928058a08} 'arrayAddress' '([FI)J' in 'jdk/incubator/vector/FloatVector'
#33: 0x0000fff9281514a8 {method} {0x0000fff9281514a8} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/FloatMaxVector'
#34: 0x000000fc002c9b80 {method} {0x000000fc002c9b80} 'checkBound' '(I)V' in 'jdk/internal/util/random/RandomSupport'
#35: 0x0000fff928064640 {method} {0x0000fff928064640} 'check' '(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/AbstractVector;' in 'jdk/incubator/vector/AbstractVector'
#36: 0x0000fff92804b588 {method} {0x0000fff92804b588} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/FloatVector'
#37: 0x0000fff92804b3b0 {method} {0x0000fff92804b3b0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;)I' in 'jdk/incubator/vector/FloatVector'
#38: 0x0000fff9280ec400 {method} {0x0000fff9280ec400} 'find' '(Ljdk/incubator/vector/VectorOperators$Operator;ILjava/util/function/IntFunction;)Ljava/lang/Object;' in 'jdk/incubator/vector/VectorOperators$ImplCache'
#39: 0x0000fff928064778 {method} {0x0000fff928064778} 'sameSpecies' '(Ljdk/incubator/vector/Vector;)Z' in 'jdk/incubator/vector/AbstractVector'
#40: 0x0000fff9280eefc8 {method} {0x0000fff9280eefc8} 'opKind' '(Ljdk/incubator/vector/VectorOperators$Operator;I)Z' in 'jdk/incubator/vector/VectorOperators'
#41: 0x0000fff9281ead00 {method} {0x0000fff9281ead00} 'opKind' '(I)Z' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#42: 0x0000fff9280eeee0 {method} {0x0000fff9280eeee0} 'opCode' '(Ljdk/incubator/vector/VectorOperators$Operator;II)I' in 'jdk/incubator/vector/VectorOperators'
#43: 0x0000fff9281ea838 {method} {0x0000fff9281ea838} 'opCode' '(II)I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#44: 0x0000fff9281ea928 {method} {0x0000fff9281ea928} 'opCodeRaw' '()I' in 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#45: 0x0000fff928151808 {method} {0x0000fff928151808} 'length' '()I' in 'jdk/incubator/vector/FloatMaxVector'
#46: 0x0000fff92811d4f0 {method} {0x0000fff92811d4f0} 'length' '()I' in 'jdk/incubator/vector/Float128Vector'
#47: 0x0000fff9281230e0 {method} {0x0000fff9281230e0} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/Float128Vector'
#48: 0x0000fff92811d870 {method} {0x0000fff92811d870} 'broadcast' '(F)Ljdk/incubator/vector/Float128Vector;' in 'jdk/incubator/vector/Float128Vector'
#49: 0x0000fff928157358 {method} {0x0000fff928157358} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatMaxVector'
#50: 0x0000fff928151b88 {method} {0x0000fff928151b88} 'broadcast' '(F)Ljdk/incubator/vector/FloatMaxVector;' in 'jdk/incubator/vector/FloatMaxVector'
#51: 0x0000fff92804e588 {method} {0x0000fff92804e588} 'broadcastTemplate' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector'
#52: 0x0000fff9280f2f90 {method} {0x0000fff9280f2f90} 'broadcast' '(F)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#53: 0x0000fff9280f2ea8 {method} {0x0000fff9280f2ea8} 'broadcastBits' '(J)Ljdk/incubator/vector/FloatVector;' in 'jdk/incubator/vector/FloatVector$FloatSpecies'
#54: 0x0000fff92811d190 {method} {0x0000fff92811d190} 'vspecies' '()Ljdk/incubator/vector/FloatVector$FloatSpecies;' in 'jdk/incubator/vector/Float128Vector'
#55: 0x000000fc01001870 'jdk/random/L32X64MixRandom'
#56: 0x000000fc00174f50 'java/util/random/RandomGenerator'
#57: 0x000000fc0104e4f8 'jdk/incubator/vector/FloatVector$FloatSpecies'
#58: 0x000000fc0104dce8 'jdk/incubator/vector/VectorSpecies'
#59: 0x0000fff9280f75b8 {method} {0x0000fff9280f75b8} 'length' '()I' in 'jdk/incubator/vector/VectorSpecies'
#60: 0x000000fc0105a368 'jdk/incubator/vector/VectorOperators$AssociativeImpl'
#61: 0x000000fc01059b50 'jdk/incubator/vector/VectorOperators$OperatorImpl'
#62: 0x000000fc0104ce90 'jdk/incubator/vector/VectorOperators$ImplCache'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r020 c_rarg1:c_rarg1   : parm 0: TestZGCSpillingAtLoadBarrierStub:NotNull *
#r022 c_rarg2:c_rarg2   : parm 1: Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *
#r024 c_rarg3   : parm 2: int
# -- Old r31_sp -- Framesize: 48 --
#r223 r31_sp+44: in_preserve
#r222 r31_sp+40: return address
#r221 r31_sp+36: in_preserve
#r220 r31_sp+32: saved fp register
#r219 r31_sp+28: pad2, stack alignment
#r218 r31_sp+24: pad2, stack alignment
#r217 r31_sp+20: Fixed slot 1
#r216 r31_sp+16: Fixed slot 0
#r227 r31_sp+12: spill
#r226 r31_sp+ 8: spill
#r225 r31_sp+ 4: spill
#r224 r31_sp+ 0: spill
#
----------------------- MetaData before Compile_id = 564 ------------------------
{method}
 - this oop:          0x0000fff928401a80
 - method holder:     'TestZGCSpillingAtLoadBarrierStub'
 - constants:         0x0000fff928401448 constant pool [132] {0x0000fff928401448} for 'TestZGCSpillingAtLoadBarrierStub' cache=0x0000fff928402a58
 - access:            0x0  
 - flags:             0x4080  queued_for_compilation has_loops_flag_init 
 - name:              'test_float'
 - signature:         '([LOuter;I)F'
 - max stack:         3
 - max locals:        5
 - size of params:    3
 - method size:       14
 - highest level:     3
 - vtable index:      7
 - i2i entry:         0x0000ffff97bc73c0
 - adapters:          AHE@0x0000ffffa82a76b0: 0xbba i2c: 0x0000ffff97be5440 c2i: 0x0000ffff97be54a8 c2iUV: 0x0000ffff97be5474 c2iNCI: 0x0000ffff97be54e4
 - compiled entry     0x0000ffff909477c0
 - code size:         22
 - code start:        0x0000fff928401a60
 - code end (excl):   0x0000fff928401a76
 - method data:       0x0000fff92841d2b8
 - checked ex length: 0
 - linenumber start:  0x0000fff928401a76
 - localvar length:   0
 - compiled code: nmethod7137  557       3       TestZGCSpillingAtLoadBarrierStub::test_float (22 bytes)

------------------------ OptoAssembly for Compile_id = 564 -----------------------
#
#  float ( TestZGCSpillingAtLoadBarrierStub:NotNull *, Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *, int )
#
000     N98: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # MachUEPNode
	ldrw rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	ldrw r10, [rscratch2 + CompiledICData::speculated_klass_offset()]	# compressed klass
	cmpw rscratch1, r10
	bne, SharedRuntime::_ic_miss_stub


020     B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang size=48
	sub  sp, sp, #48
	stp  rfp, lr, [sp, #32]
	ldr  rscratch1, [guard]
	dmb ishld
	ldr  rscratch2, [rthread, #thread_disarmed_guard_value_offset]
	cmp  rscratch1, rscratch2
	b.eq skip
	blr #nmethod_entry_barrier_stub
	b skip
	guard: int
	
	skip:
	
078     ldrw  R11, [R2, #12]	# range
07c     NullCheck R2

07c     B2: #	out( B7 B3 ) <- in( B1 )  Freq: 0.999999
07c +   add R10, R2, R3, I2L #3	# ptr
080     scvtfws  V18, R3 	// i2f
084 +   cmpw  R3, R11	# unsigned
088     bhs  B7	# unsigned  P=0.000001 C=-1.000000

08c     B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999998
08c +   ldr  R11, [R10, #16]
098     cbeq   R11, B8  P=0.000001 C=-1.000000

09c     B4: #	out( B11 B5 ) <- in( B3 )  Freq: 0.999997
09c +   ldr  R29, [R11, #16] ! Field: Outer.field
0a8     ldrw  R11, [R29, #8]	# compressed class ptr
0ac     NullCheck R29

0ac     B5: #	out( B9 B6 ) <- in( B4 )  Freq: 0.999996
0ac +   mov  R10, narrowklass: precise InnerFloat: 0x0000fff8f4022ce0:Constant:exact *	# compressed klass ptr
0b4 +   cmp  R11, R10	 // compressed ptr
0b8     bne  B9	# unsigned  P=0.000000 C=-1.000000

0bc     B6: #	out( N98 ) <- in( B5 )  Freq: 0.999996
0bc +   # checkcastPP of R29
0bc     ldrs  V16, [R29, #12]	# float ! Field: InnerFloat.data
0c0 +   fadds   V0, V16, V18
0c4     # pop frame 48
	ldp  lr, rfp, [sp,#32]
	add  sp, sp, #48
	# test polling word
	ldr  rscratch1, [rthread],#1176
	cmp  sp, rscratch1
	bhi #slow_path
0d8 +   ret	// return register

0dc     B7: #	out( N98 ) <- in( B2 )  Freq: 1.01328e-06
0dc +   mov R1, #-28	# int
0e0     spill R2 -> R29	# spill size = 64
0e4 +   spill R3 -> [sp, #0]	# spill size = 32
0e8 +   spill V18 -> [sp, #4]	# spill size = 32
0ec     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float @ bci:5 (line 35) L[0]=_ L[1]=_ L[2]=_ L[3]=r31_sp + #4 L[4]=_ STK[0]=R29 STK[1]=r31_sp + #0
        # OopMap {rfp=Oop off=240/0xf0}
0fc     ShouldNotReachHere

108     B8: #	out( N98 ) <- in( B3 )  Freq: 1.01328e-06
108 +   mov R1, #-10	# int
10c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float @ bci:6 (line 35) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#null
        # OopMap {off=272/0x110}
11c     ShouldNotReachHere

128     B9: #	out( N98 ) <- in( B5 )  Freq: 1e-35
128 +   spill V18 -> [sp, #0]	# spill size = 32
12c +   mov R1, #-34	# int
130     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float @ bci:14 (line 36) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=r31_sp + #0 STK[1]=R29
        # OopMap {rfp=Oop off=308/0x134}
140     ShouldNotReachHere

14c     B10: #	out( N98 ) <- in( B1 )  Freq: 1.01328e-06
14c +   mov R1, #-10	# int
150     spill R3 -> R29	# spill size = 32
154     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float @ bci:5 (line 35) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=#null STK[1]=R29
        # OopMap {off=344/0x158}
164     ShouldNotReachHere

170     B11: #	out( N98 ) <- in( B4 )  Freq: 1.01328e-06
170 +   spill V18 -> [sp, #0]	# spill size = 32
174 +   mov R1, #-12	# int
178     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_float @ bci:14 (line 36) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ STK[0]=r31_sp + #0 STK[1]=#null
        # OopMap {off=380/0x17c}
188 +   ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 7137  564       4       TestZGCSpillingAtLoadBarrierStub::test_float (22 bytes)
 total in heap  [0x0000ffff984f6490,0x0000ffff984f6aa8] = 1560
 relocation     [0x0000ffff984f6600,0x0000ffff984f6668] = 104
 main code      [0x0000ffff984f6680,0x0000ffff984f68a8] = 552
 stub code      [0x0000ffff984f68a8,0x0000ffff984f68d8] = 48
 oops           [0x0000ffff984f68d8,0x0000ffff984f68e0] = 8
 metadata       [0x0000ffff984f68e0,0x0000ffff984f68f0] = 16
 scopes data    [0x0000ffff984f68f0,0x0000ffff984f6968] = 120
 scopes pcs     [0x0000ffff984f6968,0x0000ffff984f6a88] = 288
 dependencies   [0x0000ffff984f6a88,0x0000ffff984f6a90] = 8
 nul chk table  [0x0000ffff984f6a90,0x0000ffff984f6aa8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;; N98: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f6680:   nop
[Entry Point]
  # {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[LOuter;'
  # parm1:    c_rarg3   = int
  #           [sp+0x30]  (sp of caller)
  0x0000ffff984f6684:   ldr	w8, [x1, #8]
  0x0000ffff984f6688:   ldr	w10, [x9, #8]
  0x0000ffff984f668c:   cmp	w8, w10
  0x0000ffff984f6690:   b.eq	0x0000ffff984f66a0  // b.none
  0x0000ffff984f6694:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff984f6698:   add	x8, x8, #0xec0
  0x0000ffff984f669c:   br	x8
[Verified Entry Point]
 ;; B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f66a0:   nop
  0x0000ffff984f66a4:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff984f66a8:   str	xzr, [x9]
  0x0000ffff984f66ac:   sub	sp, sp, #0x30
  0x0000ffff984f66b0:   stp	x29, x30, [sp, #32]
  0x0000ffff984f66b4:   ldrb	w8, [x28, #1208]
  0x0000ffff984f66b8:   cbz	x8, 0x0000ffff984f66d0
 ;; 0xFFFFAECE431C
  0x0000ffff984f66bc:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f66c0:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f66c4:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f66c8:   mov	x0, x28
  0x0000ffff984f66cc:   blr	x8
  0x0000ffff984f66d0:   ldr	w8, 0x0000ffff984f68a4
 ;; 0xFFFFB0903FF8
  0x0000ffff984f66d4:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff984f66d8:   movk	x9, #0xb090, lsl #16
  0x0000ffff984f66dc:   movk	x9, #0xffff, lsl #32
  0x0000ffff984f66e0:   orr	x9, x9, x8, lsr #32
  0x0000ffff984f66e4:   ldr	w9, [x9]
  0x0000ffff984f66e8:   orr	x8, x8, x9, lsl #32
  0x0000ffff984f66ec:   ldr	x9, [x28, #88]
  0x0000ffff984f66f0:   cmp	x8, x9
  0x0000ffff984f66f4:   b.ne	0x0000ffff984f6890  // b.any;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
  0x0000ffff984f66f8:   ldr	w11, [x2, #12]              ; implicit exception: dispatches to 0x0000ffff984f67cc
 ;; B2: #	out( B7 B3 ) <- in( B1 )  Freq: 0.999999
  0x0000ffff984f66fc:   add	x10, x2, w3, sxtw #3
  0x0000ffff984f6700:   scvtf	s18, w3                     ;*i2f {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@1 (line 34)
  0x0000ffff984f6704:   cmp	w3, w11
  0x0000ffff984f6708:   b.cs	0x0000ffff984f675c  // b.hs, b.nlast
 ;; B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999998
  0x0000ffff984f670c:   ldr	x11, [x10, #16]
  0x0000ffff984f6710:   tbnz	w11, #12, 0x0000ffff984f6814;   {other}
  0x0000ffff984f6714:   lsr	x11, x11, #16               ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
  0x0000ffff984f6718:   cbz	x11, 0x0000ffff984f6788
 ;; B4: #	out( B11 B5 ) <- in( B3 )  Freq: 0.999997
  0x0000ffff984f671c:   ldr	x29, [x11, #16]
  0x0000ffff984f6720:   tbnz	w29, #12, 0x0000ffff984f6848;   {other}
  0x0000ffff984f6724:   lsr	x29, x29, #16               ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
  0x0000ffff984f6728:   ldr	w11, [x29, #8]              ; implicit exception: dispatches to 0x0000ffff984f67f0
 ;; B5: #	out( B9 B6 ) <- in( B4 )  Freq: 0.999996
  0x0000ffff984f672c:   mov	x10, #0x1000000             	// #16777216
                                                            ;   {metadata('InnerFloat')}
  0x0000ffff984f6730:   movk	x10, #0x1450
  0x0000ffff984f6734:   cmp	w11, w10
  0x0000ffff984f6738:   b.ne	0x0000ffff984f67a8  // b.any;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
 ;; B6: #	out( N98 ) <- in( B5 )  Freq: 0.999996
  0x0000ffff984f673c:   ldr	s16, [x29, #12]
  0x0000ffff984f6740:   fadd	s0, s16, s18                ;*fadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@20 (line 36)
  0x0000ffff984f6744:   ldp	x29, x30, [sp, #32]
  0x0000ffff984f6748:   add	sp, sp, #0x30
  0x0000ffff984f674c:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff984f6750:   cmp	sp, x8
  0x0000ffff984f6754:   b.hi	0x0000ffff984f687c  // b.pmore
  0x0000ffff984f6758:   ret
 ;; B7: #	out( N98 ) <- in( B2 )  Freq: 1.01328e-06
 ;; 0xFFFFFFE4
  0x0000ffff984f675c:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f6760:   mov	x29, x2
  0x0000ffff984f6764:   str	w3, [sp]
  0x0000ffff984f6768:   str	s18, [sp, #4]
  0x0000ffff984f676c:   bl	0x0000ffff984f68a8          ; ImmutableOopMap {rfp=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6770:   nop                                 ;   {other}
  0x0000ffff984f6774:   movk	xzr, #0x2e0
  0x0000ffff984f6778:   movk	xzr, #0x0
 ;; uncommon trap returned which should never happen
  0x0000ffff984f677c:   dcps1	#0xdeae
  0x0000ffff984f6780:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6784:   udf	#65535                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
 ;; B8: #	out( N98 ) <- in( B3 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f6788:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f678c:   bl	0x0000ffff984f68a8          ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6790:   nop                                 ;   {other}
  0x0000ffff984f6794:   movk	xzr, #0x300
  0x0000ffff984f6798:   movk	xzr, #0x100
 ;; uncommon trap returned which should never happen
  0x0000ffff984f679c:   dcps1	#0xdeae
  0x0000ffff984f67a0:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f67a4:   udf	#65535                      ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
 ;; B9: #	out( N98 ) <- in( B5 )  Freq: 1e-35
  0x0000ffff984f67a8:   str	s18, [sp]
 ;; 0xFFFFFFDE
  0x0000ffff984f67ac:   mov	w1, #0xffffffde            	// #-34
  0x0000ffff984f67b0:   bl	0x0000ffff984f68a8          ; ImmutableOopMap {rfp=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f67b4:   nop                                 ;   {other}
  0x0000ffff984f67b8:   movk	xzr, #0x324
  0x0000ffff984f67bc:   movk	xzr, #0x200
 ;; uncommon trap returned which should never happen
  0x0000ffff984f67c0:   dcps1	#0xdeae
  0x0000ffff984f67c4:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f67c8:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
 ;; B10: #	out( N98 ) <- in( B1 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f67cc:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f67d0:   mov	w29, w3
  0x0000ffff984f67d4:   bl	0x0000ffff984f68a8          ; ImmutableOopMap {}
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f67d8:   nop                                 ;   {other}
  0x0000ffff984f67dc:   movk	xzr, #0x348
  0x0000ffff984f67e0:   movk	xzr, #0x300
 ;; uncommon trap returned which should never happen
  0x0000ffff984f67e4:   dcps1	#0xdeae
  0x0000ffff984f67e8:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f67ec:   udf	#65535                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
 ;; B11: #	out( N98 ) <- in( B4 )  Freq: 1.01328e-06
  0x0000ffff984f67f0:   str	s18, [sp]
 ;; 0xFFFFFFF4
  0x0000ffff984f67f4:   mov	w1, #0xfffffff4            	// #-12
  0x0000ffff984f67f8:   bl	0x0000ffff984f68a8          ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f67fc:   nop                                 ;   {other}
  0x0000ffff984f6800:   movk	xzr, #0x36c
  0x0000ffff984f6804:   movk	xzr, #0x400
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6808:   dcps1	#0xdeae
  0x0000ffff984f680c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6810:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
 ;; ZLoadBarrierStubC2
  0x0000ffff984f6814:   stp	x10, xzr, [sp, #-16]!
  0x0000ffff984f6818:   str	d18, [sp, #-16]!
  0x0000ffff984f681c:   add	x1, x10, #0x10
  0x0000ffff984f6820:   mov	x0, x11
 ;; 0xFFFFAF670784
  0x0000ffff984f6824:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f6828:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f682c:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6830:   blr	x8
  0x0000ffff984f6834:   mov	x11, x0
  0x0000ffff984f6838:   ldr	d18, [sp], #16
  0x0000ffff984f683c:   ptrue	p7.b
  0x0000ffff984f6840:   ldp	x10, xzr, [sp], #16
  0x0000ffff984f6844:   b	0x0000ffff984f6718
 ;; ZLoadBarrierStubC2
  0x0000ffff984f6848:   stp	x11, xzr, [sp, #-16]!
  0x0000ffff984f684c:   str	d18, [sp, #-16]!
  0x0000ffff984f6850:   add	x1, x11, #0x10
  0x0000ffff984f6854:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f6858:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f685c:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f6860:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6864:   blr	x8
  0x0000ffff984f6868:   mov	x29, x0
  0x0000ffff984f686c:   ldr	d18, [sp], #16
  0x0000ffff984f6870:   ptrue	p7.b
  0x0000ffff984f6874:   ldp	x11, xzr, [sp], #16
  0x0000ffff984f6878:   b	0x0000ffff984f6728
  0x0000ffff984f687c:   adr	x8, 0x0000ffff984f674c      ;   {internal_word}
  0x0000ffff984f6880:   str	x8, [x28, #1200]
  0x0000ffff984f6884:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff984f6888:   add	x8, x8, #0xac0
  0x0000ffff984f688c:   br	x8
 ;; 0xFFFF97C263C0
  0x0000ffff984f6890:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f6894:   movk	x8, #0x97c2, lsl #16
  0x0000ffff984f6898:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f689c:   blr	x8
  0x0000ffff984f68a0:   b	0x0000ffff984f66f8
  0x0000ffff984f68a4:   udf	#58640                      ;   {other}
[Stub Code]
  0x0000ffff984f68a8:   ldr	x8, 0x0000ffff984f68b0      ;   {no_reloc}
  0x0000ffff984f68ac:   br	x8
  0x0000ffff984f68b0:   bl	0x0000ffff977579b0
  0x0000ffff984f68b4:   udf	#65535
[Exception Handler]
  0x0000ffff984f68b8:   adrp	x8, 0x0000ffff97d57000      ;   {runtime_call ExceptionBlob}
  0x0000ffff984f68bc:   add	x8, x8, #0x6c0
  0x0000ffff984f68c0:   br	x8
[Deopt Handler Code]
  0x0000ffff984f68c4:   adr	x30, 0x0000ffff984f68c4
  0x0000ffff984f68c8:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff984f68cc:   add	x8, x8, #0xdc0
  0x0000ffff984f68d0:   br	x8
  0x0000ffff984f68d4:   udf	#0
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff984f68d8:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff984f68e0:   0x0000fff928401a80 {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff984f68e8:   0x000000fc01001450 'InnerFloat'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff984f667f offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff984f66f8 offset=78 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
PcDesc(pc=0x0000ffff984f6704 offset=84 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@1 (line 34)
PcDesc(pc=0x0000ffff984f6718 offset=98 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
PcDesc(pc=0x0000ffff984f6728 offset=a8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
PcDesc(pc=0x0000ffff984f673c offset=bc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
PcDesc(pc=0x0000ffff984f6744 offset=c4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@20 (line 36)
PcDesc(pc=0x0000ffff984f6770 offset=f0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[4]
    - l4: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: stack[0]
PcDesc(pc=0x0000ffff984f6788 offset=108 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
PcDesc(pc=0x0000ffff984f6790 offset=110 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f67a8 offset=128 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
PcDesc(pc=0x0000ffff984f67b4 offset=134 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: stack[0]
    - @1: reg rfp [58],oop
PcDesc(pc=0x0000ffff984f67cc offset=14c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
PcDesc(pc=0x0000ffff984f67d8 offset=158 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],int
PcDesc(pc=0x0000ffff984f67f0 offset=170 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
PcDesc(pc=0x0000ffff984f67fc offset=17c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: stack[0]
    - @1: nullptr
PcDesc(pc=0x0000ffff984f6814 offset=194 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
PcDesc(pc=0x0000ffff984f68d9 offset=259 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 5 OopMaps

ImmutableOopMap {rfp=Oop } pc offsets: 240 
ImmutableOopMap {} pc offsets: 272 
ImmutableOopMap {rfp=Oop } pc offsets: 308 
ImmutableOopMap {} pc offsets: 344 380 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff984f66f8 offset=78):
   TestZGCSpillingAtLoadBarrierStub::test_float@-1 (line 34)
ScopeDesc(pc=0x0000ffff984f6704 offset=84):
   TestZGCSpillingAtLoadBarrierStub::test_float@1 (line 34)
ScopeDesc(pc=0x0000ffff984f6718 offset=98):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
ScopeDesc(pc=0x0000ffff984f6728 offset=a8):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
ScopeDesc(pc=0x0000ffff984f673c offset=bc):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
ScopeDesc(pc=0x0000ffff984f6744 offset=c4):
   TestZGCSpillingAtLoadBarrierStub::test_float@20 (line 36)
ScopeDesc(pc=0x0000ffff984f6770 offset=f0):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: stack[4]
    - l4: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: stack[0]
ScopeDesc(pc=0x0000ffff984f6788 offset=108):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
ScopeDesc(pc=0x0000ffff984f6790 offset=110):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f67a8 offset=128):
   TestZGCSpillingAtLoadBarrierStub::test_float@6 (line 35)
ScopeDesc(pc=0x0000ffff984f67b4 offset=134):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: stack[0]
    - @1: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f67cc offset=14c):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
ScopeDesc(pc=0x0000ffff984f67d8 offset=158):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],int
ScopeDesc(pc=0x0000ffff984f67f0 offset=170):
   TestZGCSpillingAtLoadBarrierStub::test_float@5 (line 35)
ScopeDesc(pc=0x0000ffff984f67fc offset=17c):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
   Expression stack
    - @0: stack[0]
    - @1: nullptr
ScopeDesc(pc=0x0000ffff984f6814 offset=194):
   TestZGCSpillingAtLoadBarrierStub::test_float@14 (line 36)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff984f6600: 3005
relocInfo@0x0000ffff984f6600 [type=6(runtime_call) addr=0x0000ffff984f6694 offset=20] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff984f6602: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff984f660c [type=7(external_word) addr=0x0000ffff984f66bc offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f660e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff984f6618 [type=7(external_word) addr=0x0000ffff984f66d4 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff984f661a: 900f
relocInfo@0x0000ffff984f661a [type=18(barrier) addr=0x0000ffff984f6710 offset=60]
         @0x0000ffff984f661c: 9004
relocInfo@0x0000ffff984f661c [type=18(barrier) addr=0x0000ffff984f6720 offset=16]
         @0x0000ffff984f661e: 78026003
relocInfo@0x0000ffff984f6620 [type=12(metadata) addr=0x0000ffff984f672c offset=12 data=2] | [metadata_addr=0x0000ffff984f68e8 *=0x000000fc01001450 offset=0]metadata_value=0x000000fc01001450: 'InnerFloat'
         @0x0000ffff984f6622: 5808
relocInfo@0x0000ffff984f6622 [type=11(poll_return) addr=0x0000ffff984f674c offset=32]
         @0x0000ffff984f6624: 3008
relocInfo@0x0000ffff984f6624 [type=6(runtime_call) addr=0x0000ffff984f676c offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6626: 8001
relocInfo@0x0000ffff984f6626 [type=16(post_call_nop) addr=0x0000ffff984f6770 offset=4]
         @0x0000ffff984f6628: 3007
relocInfo@0x0000ffff984f6628 [type=6(runtime_call) addr=0x0000ffff984f678c offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f662a: 8001
relocInfo@0x0000ffff984f662a [type=16(post_call_nop) addr=0x0000ffff984f6790 offset=4]
         @0x0000ffff984f662c: 3008
relocInfo@0x0000ffff984f662c [type=6(runtime_call) addr=0x0000ffff984f67b0 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f662e: 8001
relocInfo@0x0000ffff984f662e [type=16(post_call_nop) addr=0x0000ffff984f67b4 offset=4]
         @0x0000ffff984f6630: 3008
relocInfo@0x0000ffff984f6630 [type=6(runtime_call) addr=0x0000ffff984f67d4 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6632: 8001
relocInfo@0x0000ffff984f6632 [type=16(post_call_nop) addr=0x0000ffff984f67d8 offset=4]
         @0x0000ffff984f6634: 3008
relocInfo@0x0000ffff984f6634 [type=6(runtime_call) addr=0x0000ffff984f67f8 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6636: 8001
relocInfo@0x0000ffff984f6636 [type=16(post_call_nop) addr=0x0000ffff984f67fc offset=4]
         @0x0000ffff984f6638: 784c4020
relocInfo@0x0000ffff984f663a [type=8(internal_word) addr=0x0000ffff984f687c offset=128 data=76] | [target=0x0000ffff984f674c]
         @0x0000ffff984f663c: 3002
relocInfo@0x0000ffff984f663c [type=6(runtime_call) addr=0x0000ffff984f6884 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff984f663e: 3003
relocInfo@0x0000ffff984f663e [type=6(runtime_call) addr=0x0000ffff984f6890 offset=12] | [destination=0x0000ffff97c263c0]
         @0x0000ffff984f6640: 8805
relocInfo@0x0000ffff984f6640 [type=17(entry_guard) addr=0x0000ffff984f68a4 offset=20]
         @0x0000ffff984f6642: 0001
relocInfo@0x0000ffff984f6642 [type=0(none) addr=0x0000ffff984f68a8 offset=4]
         @0x0000ffff984f6644: 7c01ffa26800
relocInfo@0x0000ffff984f6648 [type=13(trampoline_stub) addr=0x0000ffff984f68a8 offset=0 data=-94] | [trampoline owner=0x0000ffff984f67f8]
         @0x0000ffff984f664a: 7c01ffab6800
relocInfo@0x0000ffff984f664e [type=13(trampoline_stub) addr=0x0000ffff984f68a8 offset=0 data=-85] | [trampoline owner=0x0000ffff984f67d4]
         @0x0000ffff984f6650: 7c01ffb46800
relocInfo@0x0000ffff984f6654 [type=13(trampoline_stub) addr=0x0000ffff984f68a8 offset=0 data=-76] | [trampoline owner=0x0000ffff984f67b0]
         @0x0000ffff984f6656: 7c01ffbd6800
relocInfo@0x0000ffff984f665a [type=13(trampoline_stub) addr=0x0000ffff984f68a8 offset=0 data=-67] | [trampoline owner=0x0000ffff984f678c]
         @0x0000ffff984f665c: 7c01ffc56800
relocInfo@0x0000ffff984f6660 [type=13(trampoline_stub) addr=0x0000ffff984f68a8 offset=0 data=-59] | [trampoline owner=0x0000ffff984f676c]
         @0x0000ffff984f6662: 3004
relocInfo@0x0000ffff984f6662 [type=6(runtime_call) addr=0x0000ffff984f68b8 offset=16] | [destination=0x0000ffff97d576c0]
         @0x0000ffff984f6664: 3004
relocInfo@0x0000ffff984f6664 [type=6(runtime_call) addr=0x0000ffff984f68c8 offset=16] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff984f6666: 0000
relocInfo@0x0000ffff984f6666 [type=0(none) addr=0x0000ffff984f68c8 offset=0]
         @0x0000ffff984f6668: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type leaf_type
  context = InnerFloat
   [nmethod<=klass]InnerFloat
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x0000ffff984f66f8, 0x0000ffff984f67cc > < 0x0000ffff984f6728, 0x0000ffff984f67f0 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000fff928401a80 {method} {0x0000fff928401a80} 'test_float' '([LOuter;I)F' in 'TestZGCSpillingAtLoadBarrierStub'
#2: 0x000000fc01001450 'InnerFloat'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

============================= C2-compiled nmethod ==============================
#r020 c_rarg1:c_rarg1   : parm 0: TestZGCSpillingAtLoadBarrierStub:NotNull *
#r022 c_rarg2:c_rarg2   : parm 1: Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *
#r024 c_rarg3   : parm 2: int
# -- Old r31_sp -- Framesize: 48 --
#r223 r31_sp+44: in_preserve
#r222 r31_sp+40: return address
#r221 r31_sp+36: in_preserve
#r220 r31_sp+32: saved fp register
#r219 r31_sp+28: pad2, stack alignment
#r218 r31_sp+24: pad2, stack alignment
#r217 r31_sp+20: Fixed slot 1
#r216 r31_sp+16: Fixed slot 0
#r227 r31_sp+12: spill
#r226 r31_sp+ 8: spill
#r225 r31_sp+ 4: spill
#r224 r31_sp+ 0: spill
#
----------------------- MetaData before Compile_id = 565 ------------------------
{method}
 - this oop:          0x0000fff928401b48
 - method holder:     'TestZGCSpillingAtLoadBarrierStub'
 - constants:         0x0000fff928401448 constant pool [132] {0x0000fff928401448} for 'TestZGCSpillingAtLoadBarrierStub' cache=0x0000fff928402a58
 - access:            0x0  
 - flags:             0x4080  queued_for_compilation has_loops_flag_init 
 - name:              'test_double'
 - signature:         '([LOuter;I)D'
 - max stack:         5
 - max locals:        6
 - size of params:    3
 - method size:       14
 - highest level:     3
 - vtable index:      8
 - i2i entry:         0x0000ffff97bc73c0
 - adapters:          AHE@0x0000ffffa82a76b0: 0xbba i2c: 0x0000ffff97be5440 c2i: 0x0000ffff97be54a8 c2iUV: 0x0000ffff97be5474 c2iNCI: 0x0000ffff97be54e4
 - compiled entry     0x0000ffff90947ec0
 - code size:         22
 - code start:        0x0000fff928401b28
 - code end (excl):   0x0000fff928401b3e
 - method data:       0x0000fff92841d4a8
 - checked ex length: 0
 - linenumber start:  0x0000fff928401b3e
 - localvar length:   0
 - compiled code: nmethod7148  558       3       TestZGCSpillingAtLoadBarrierStub::test_double (22 bytes)

------------------------ OptoAssembly for Compile_id = 565 -----------------------
#
#  double/half ( TestZGCSpillingAtLoadBarrierStub:NotNull *, Outer *[int:>=0] (java/lang/Cloneable,java/io/Serializable) *, int )
#
000     N98: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
000     # MachUEPNode
	ldrw rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	ldrw r10, [rscratch2 + CompiledICData::speculated_klass_offset()]	# compressed klass
	cmpw rscratch1, r10
	bne, SharedRuntime::_ic_miss_stub


020     B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
020     # stack bang size=48
	sub  sp, sp, #48
	stp  rfp, lr, [sp, #32]
	ldr  rscratch1, [guard]
	dmb ishld
	ldr  rscratch2, [rthread, #thread_disarmed_guard_value_offset]
	cmp  rscratch1, rscratch2
	b.eq skip
	blr #nmethod_entry_barrier_stub
	b skip
	guard: int
	
	skip:
	
078     ldrw  R10, [R2, #12]	# range
07c     NullCheck R2

07c     B2: #	out( B7 B3 ) <- in( B1 )  Freq: 0.999999
07c +   add R11, R2, R3, I2L #3	# ptr
080     scvtfwd  V17, R3 	// i2d
084 +   cmpw  R3, R10	# unsigned
088     bhs  B7	# unsigned  P=0.000001 C=-1.000000

08c     B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999998
08c +   ldr  R10, [R11, #16]
098     cbeq   R10, B8  P=0.000001 C=-1.000000

09c     B4: #	out( B11 B5 ) <- in( B3 )  Freq: 0.999997
09c +   ldr  R29, [R10, #16] ! Field: Outer.field
0a8     ldrw  R10, [R29, #8]	# compressed class ptr
0ac     NullCheck R29

0ac     B5: #	out( B9 B6 ) <- in( B4 )  Freq: 0.999996
0ac +   mov  R12, narrowklass: precise InnerDouble: 0x0000fff8f4022ce0:Constant:exact *	# compressed klass ptr
0b4 +   cmp  R10, R12	 // compressed ptr
0b8     bne  B9	# unsigned  P=0.000000 C=-1.000000

0bc     B6: #	out( N98 ) <- in( B5 )  Freq: 0.999996
0bc +   # checkcastPP of R29
0bc     ldrd  V16, [R29, #16]	# double ! Field: InnerDouble.data
0c0 +   faddd   V0, V16, V17
0c4     # pop frame 48
	ldp  lr, rfp, [sp,#32]
	add  sp, sp, #48
	# test polling word
	ldr  rscratch1, [rthread],#1176
	cmp  sp, rscratch1
	bhi #slow_path
0d8 +   ret	// return register

0dc     B7: #	out( N98 ) <- in( B2 )  Freq: 1.01328e-06
0dc +   mov R1, #-28	# int
0e0     spill R2 -> R29	# spill size = 64
0e4 +   spill R3 -> [sp, #0]	# spill size = 32
0e8 +   spill V17 -> [sp, #8]	# spill size = 64
0ec     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='range_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_double @ bci:5 (line 41) L[0]=_ L[1]=_ L[2]=_ L[3]=r31_sp + #8 L[4]=_ L[5]=_ STK[0]=R29 STK[1]=r31_sp + #0
        # OopMap {rfp=Oop off=240/0xf0}
0fc     ShouldNotReachHere

108     B8: #	out( N98 ) <- in( B3 )  Freq: 1.01328e-06
108 +   mov R1, #-10	# int
10c     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_double @ bci:6 (line 41) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#null
        # OopMap {off=272/0x110}
11c     ShouldNotReachHere

128     B9: #	out( N98 ) <- in( B5 )  Freq: 1e-35
128 +   spill V17 -> [sp, #0]	# spill size = 64
12c +   mov R1, #-34	# int
130     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='class_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_double @ bci:14 (line 42) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=r31_sp + #0 STK[1]=_ STK[2]=R29
        # OopMap {rfp=Oop off=308/0x134}
140     ShouldNotReachHere

14c     B10: #	out( N98 ) <- in( B1 )  Freq: 1.01328e-06
14c +   mov R1, #-10	# int
150     spill R3 -> R29	# spill size = 32
154     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='maybe_recompile' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_double @ bci:5 (line 41) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=#null STK[1]=R29
        # OopMap {off=344/0x158}
164     ShouldNotReachHere

170     B11: #	out( N98 ) <- in( B4 )  Freq: 1.01328e-06
170 +   spill V17 -> [sp, #0]	# spill size = 64
174 +   mov R1, #-12	# int
178     call,static 0x0000ffff97c98440 	// ==>  wrapper for: uncommon_trap(reason='null_check' action='make_not_entrant' debug_id='0')
        # TestZGCSpillingAtLoadBarrierStub::test_double @ bci:14 (line 42) L[0]=_ L[1]=_ L[2]=_ L[3]=_ L[4]=_ L[5]=_ STK[0]=r31_sp + #0 STK[1]=_ STK[2]=#null
        # OopMap {off=380/0x17c}
188 +   ShouldNotReachHere

--------------------------------------------------------------------------------
----------------------------------- Assembly -----------------------------------

Compiled method (c2) 7149  565       4       TestZGCSpillingAtLoadBarrierStub::test_double (22 bytes)
 total in heap  [0x0000ffff984f6b10,0x0000ffff984f7130] = 1568
 relocation     [0x0000ffff984f6c80,0x0000ffff984f6ce8] = 104
 main code      [0x0000ffff984f6d00,0x0000ffff984f6f28] = 552
 stub code      [0x0000ffff984f6f28,0x0000ffff984f6f58] = 48
 oops           [0x0000ffff984f6f58,0x0000ffff984f6f60] = 8
 metadata       [0x0000ffff984f6f60,0x0000ffff984f6f70] = 16
 scopes data    [0x0000ffff984f6f70,0x0000ffff984f6ff0] = 128
 scopes pcs     [0x0000ffff984f6ff0,0x0000ffff984f7110] = 288
 dependencies   [0x0000ffff984f7110,0x0000ffff984f7118] = 8
 nul chk table  [0x0000ffff984f7118,0x0000ffff984f7130] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Instructions begin]
 ;; N98: #	out( B1 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f6d00:   nop
[Entry Point]
  # {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
  # this:     c_rarg1:c_rarg1 
                        = 'TestZGCSpillingAtLoadBarrierStub'
  # parm0:    c_rarg2:c_rarg2 
                        = '[LOuter;'
  # parm1:    c_rarg3   = int
  #           [sp+0x30]  (sp of caller)
  0x0000ffff984f6d04:   ldr	w8, [x1, #8]
  0x0000ffff984f6d08:   ldr	w10, [x9, #8]
  0x0000ffff984f6d0c:   cmp	w8, w10
  0x0000ffff984f6d10:   b.eq	0x0000ffff984f6d20  // b.none
  0x0000ffff984f6d14:   adrp	x8, 0x0000ffff97c90000      ;   {runtime_call ic_miss_stub}
  0x0000ffff984f6d18:   add	x8, x8, #0xec0
  0x0000ffff984f6d1c:   br	x8
[Verified Entry Point]
 ;; B1: #	out( B10 B2 ) <- BLOCK HEAD IS JUNK  Freq: 1
  0x0000ffff984f6d20:   nop
  0x0000ffff984f6d24:   sub	x9, sp, #0x19, lsl #12
  0x0000ffff984f6d28:   str	xzr, [x9]
  0x0000ffff984f6d2c:   sub	sp, sp, #0x30
  0x0000ffff984f6d30:   stp	x29, x30, [sp, #32]
  0x0000ffff984f6d34:   ldrb	w8, [x28, #1208]
  0x0000ffff984f6d38:   cbz	x8, 0x0000ffff984f6d50
 ;; 0xFFFFAECE431C
  0x0000ffff984f6d3c:   mov	x8, #0x431c                	// #17180
                                                            ;   {external_word}
  0x0000ffff984f6d40:   movk	x8, #0xaece, lsl #16
  0x0000ffff984f6d44:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6d48:   mov	x0, x28
  0x0000ffff984f6d4c:   blr	x8
  0x0000ffff984f6d50:   ldr	w8, 0x0000ffff984f6f24
 ;; 0xFFFFB0903FF8
  0x0000ffff984f6d54:   mov	x9, #0x3ff8                	// #16376
                                                            ;   {external_word}
  0x0000ffff984f6d58:   movk	x9, #0xb090, lsl #16
  0x0000ffff984f6d5c:   movk	x9, #0xffff, lsl #32
  0x0000ffff984f6d60:   orr	x9, x9, x8, lsr #32
  0x0000ffff984f6d64:   ldr	w9, [x9]
  0x0000ffff984f6d68:   orr	x8, x8, x9, lsl #32
  0x0000ffff984f6d6c:   ldr	x9, [x28, #88]
  0x0000ffff984f6d70:   cmp	x8, x9
  0x0000ffff984f6d74:   b.ne	0x0000ffff984f6f10  // b.any;*synchronization entry
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
  0x0000ffff984f6d78:   ldr	w10, [x2, #12]              ; implicit exception: dispatches to 0x0000ffff984f6e4c
 ;; B2: #	out( B7 B3 ) <- in( B1 )  Freq: 0.999999
  0x0000ffff984f6d7c:   add	x11, x2, w3, sxtw #3
  0x0000ffff984f6d80:   scvtf	d17, w3                     ;*i2d {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@1 (line 40)
  0x0000ffff984f6d84:   cmp	w3, w10
  0x0000ffff984f6d88:   b.cs	0x0000ffff984f6ddc  // b.hs, b.nlast
 ;; B3: #	out( B8 B4 ) <- in( B2 )  Freq: 0.999998
  0x0000ffff984f6d8c:   ldr	x10, [x11, #16]
  0x0000ffff984f6d90:   tbnz	w10, #12, 0x0000ffff984f6e94;   {other}
  0x0000ffff984f6d94:   lsr	x10, x10, #16               ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
  0x0000ffff984f6d98:   cbz	x10, 0x0000ffff984f6e08
 ;; B4: #	out( B11 B5 ) <- in( B3 )  Freq: 0.999997
  0x0000ffff984f6d9c:   ldr	x29, [x10, #16]
  0x0000ffff984f6da0:   tbnz	w29, #12, 0x0000ffff984f6ec8;   {other}
  0x0000ffff984f6da4:   lsr	x29, x29, #16               ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
  0x0000ffff984f6da8:   ldr	w10, [x29, #8]              ; implicit exception: dispatches to 0x0000ffff984f6e70
 ;; B5: #	out( B9 B6 ) <- in( B4 )  Freq: 0.999996
  0x0000ffff984f6dac:   mov	x12, #0x1000000             	// #16777216
                                                            ;   {metadata('InnerDouble')}
  0x0000ffff984f6db0:   movk	x12, #0x1660
  0x0000ffff984f6db4:   cmp	w10, w12
  0x0000ffff984f6db8:   b.ne	0x0000ffff984f6e28  // b.any;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
 ;; B6: #	out( N98 ) <- in( B5 )  Freq: 0.999996
  0x0000ffff984f6dbc:   ldr	d16, [x29, #16]
  0x0000ffff984f6dc0:   fadd	d0, d16, d17                ;*dadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@20 (line 42)
  0x0000ffff984f6dc4:   ldp	x29, x30, [sp, #32]
  0x0000ffff984f6dc8:   add	sp, sp, #0x30
  0x0000ffff984f6dcc:   ldr	x8, [x28, #1176]            ;   {poll_return}
  0x0000ffff984f6dd0:   cmp	sp, x8
  0x0000ffff984f6dd4:   b.hi	0x0000ffff984f6efc  // b.pmore
  0x0000ffff984f6dd8:   ret
 ;; B7: #	out( N98 ) <- in( B2 )  Freq: 1.01328e-06
 ;; 0xFFFFFFE4
  0x0000ffff984f6ddc:   mov	w1, #0xffffffe4            	// #-28
  0x0000ffff984f6de0:   mov	x29, x2
  0x0000ffff984f6de4:   str	w3, [sp]
  0x0000ffff984f6de8:   str	d17, [sp, #8]
  0x0000ffff984f6dec:   bl	0x0000ffff984f6f28          ; ImmutableOopMap {rfp=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6df0:   nop                                 ;   {other}
  0x0000ffff984f6df4:   movk	xzr, #0x2e0
  0x0000ffff984f6df8:   movk	xzr, #0x0
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6dfc:   dcps1	#0xdeae
  0x0000ffff984f6e00:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6e04:   udf	#65535                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
 ;; B8: #	out( N98 ) <- in( B3 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f6e08:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f6e0c:   bl	0x0000ffff984f6f28          ; ImmutableOopMap {}
                                                            ;*getfield field {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6e10:   nop                                 ;   {other}
  0x0000ffff984f6e14:   movk	xzr, #0x300
  0x0000ffff984f6e18:   movk	xzr, #0x100
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6e1c:   dcps1	#0xdeae
  0x0000ffff984f6e20:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6e24:   udf	#65535                      ;*getfield field {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
 ;; B9: #	out( N98 ) <- in( B5 )  Freq: 1e-35
  0x0000ffff984f6e28:   str	d17, [sp]
 ;; 0xFFFFFFDE
  0x0000ffff984f6e2c:   mov	w1, #0xffffffde            	// #-34
  0x0000ffff984f6e30:   bl	0x0000ffff984f6f28          ; ImmutableOopMap {rfp=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6e34:   nop                                 ;   {other}
  0x0000ffff984f6e38:   movk	xzr, #0x324
  0x0000ffff984f6e3c:   movk	xzr, #0x200
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6e40:   dcps1	#0xdeae
  0x0000ffff984f6e44:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6e48:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
 ;; B10: #	out( N98 ) <- in( B1 )  Freq: 1.01328e-06
 ;; 0xFFFFFFF6
  0x0000ffff984f6e4c:   mov	w1, #0xfffffff6            	// #-10
  0x0000ffff984f6e50:   mov	w29, w3
  0x0000ffff984f6e54:   bl	0x0000ffff984f6f28          ; ImmutableOopMap {}
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6e58:   nop                                 ;   {other}
  0x0000ffff984f6e5c:   movk	xzr, #0x348
  0x0000ffff984f6e60:   movk	xzr, #0x300
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6e64:   dcps1	#0xdeae
  0x0000ffff984f6e68:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6e6c:   udf	#65535                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
 ;; B11: #	out( N98 ) <- in( B4 )  Freq: 1.01328e-06
  0x0000ffff984f6e70:   str	d17, [sp]
 ;; 0xFFFFFFF4
  0x0000ffff984f6e74:   mov	w1, #0xfffffff4            	// #-12
  0x0000ffff984f6e78:   bl	0x0000ffff984f6f28          ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x0000ffff984f6e7c:   nop                                 ;   {other}
  0x0000ffff984f6e80:   movk	xzr, #0x36c
  0x0000ffff984f6e84:   movk	xzr, #0x400
 ;; uncommon trap returned which should never happen
  0x0000ffff984f6e88:   dcps1	#0xdeae
  0x0000ffff984f6e8c:   .inst	0xafb732e0 ; undefined
  0x0000ffff984f6e90:   udf	#65535                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
 ;; ZLoadBarrierStubC2
  0x0000ffff984f6e94:   stp	x11, xzr, [sp, #-16]!
  0x0000ffff984f6e98:   str	d17, [sp, #-16]!
  0x0000ffff984f6e9c:   add	x1, x11, #0x10
  0x0000ffff984f6ea0:   mov	x0, x10
 ;; 0xFFFFAF670784
  0x0000ffff984f6ea4:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f6ea8:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f6eac:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6eb0:   blr	x8
  0x0000ffff984f6eb4:   mov	x10, x0
  0x0000ffff984f6eb8:   ldr	d17, [sp], #16
  0x0000ffff984f6ebc:   ptrue	p7.b
  0x0000ffff984f6ec0:   ldp	x11, xzr, [sp], #16
  0x0000ffff984f6ec4:   b	0x0000ffff984f6d98
 ;; ZLoadBarrierStubC2
  0x0000ffff984f6ec8:   stp	x10, xzr, [sp, #-16]!
  0x0000ffff984f6ecc:   str	d17, [sp, #-16]!
  0x0000ffff984f6ed0:   add	x1, x10, #0x10
  0x0000ffff984f6ed4:   mov	x0, x29
 ;; 0xFFFFAF670784
  0x0000ffff984f6ed8:   mov	x8, #0x784                 	// #1924
  0x0000ffff984f6edc:   movk	x8, #0xaf67, lsl #16
  0x0000ffff984f6ee0:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6ee4:   blr	x8
  0x0000ffff984f6ee8:   mov	x29, x0
  0x0000ffff984f6eec:   ldr	d17, [sp], #16
  0x0000ffff984f6ef0:   ptrue	p7.b
  0x0000ffff984f6ef4:   ldp	x10, xzr, [sp], #16
  0x0000ffff984f6ef8:   b	0x0000ffff984f6da8
  0x0000ffff984f6efc:   adr	x8, 0x0000ffff984f6dcc      ;   {internal_word}
  0x0000ffff984f6f00:   str	x8, [x28, #1200]
  0x0000ffff984f6f04:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call SafepointBlob}
  0x0000ffff984f6f08:   add	x8, x8, #0xac0
  0x0000ffff984f6f0c:   br	x8
 ;; 0xFFFF97C263C0
  0x0000ffff984f6f10:   mov	x8, #0x63c0                	// #25536
                                                            ;   {runtime_call StubRoutines (final stubs)}
  0x0000ffff984f6f14:   movk	x8, #0x97c2, lsl #16
  0x0000ffff984f6f18:   movk	x8, #0xffff, lsl #32
  0x0000ffff984f6f1c:   blr	x8
  0x0000ffff984f6f20:   b	0x0000ffff984f6d78
  0x0000ffff984f6f24:   udf	#58640                      ;   {other}
[Stub Code]
  0x0000ffff984f6f28:   ldr	x8, 0x0000ffff984f6f30      ;   {no_reloc}
  0x0000ffff984f6f2c:   br	x8
  0x0000ffff984f6f30:   bl	0x0000ffff97758030
  0x0000ffff984f6f34:   udf	#65535
[Exception Handler]
  0x0000ffff984f6f38:   adrp	x8, 0x0000ffff97d57000      ;   {runtime_call ExceptionBlob}
  0x0000ffff984f6f3c:   add	x8, x8, #0x6c0
  0x0000ffff984f6f40:   br	x8
[Deopt Handler Code]
  0x0000ffff984f6f44:   adr	x30, 0x0000ffff984f6f44
  0x0000ffff984f6f48:   adrp	x8, 0x0000ffff97c97000      ;   {runtime_call DeoptimizationBlob}
  0x0000ffff984f6f4c:   add	x8, x8, #0xdc0
  0x0000ffff984f6f50:   br	x8
  0x0000ffff984f6f54:   udf	#0
--------------------------------------------------------------------------------
[/Disassembly]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Oops:
  0x0000ffff984f6f58:   0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Metadata:
  0x0000ffff984f6f60:   0x0000fff928401b48 {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
  0x0000ffff984f6f68:   0x000000fc01001660 'InnerDouble'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
pc-bytecode offsets:
PcDesc(pc=0x0000ffff984f6cff offset=ffffffff bits=0):
PcDesc(pc=0x0000ffff984f6d78 offset=78 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
PcDesc(pc=0x0000ffff984f6d84 offset=84 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@1 (line 40)
PcDesc(pc=0x0000ffff984f6d98 offset=98 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
PcDesc(pc=0x0000ffff984f6da8 offset=a8 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
PcDesc(pc=0x0000ffff984f6dbc offset=bc bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
PcDesc(pc=0x0000ffff984f6dc4 offset=c4 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@20 (line 42)
PcDesc(pc=0x0000ffff984f6df0 offset=f0 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: 0
    - l4: stack[8],double
    - l5: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: stack[0]
PcDesc(pc=0x0000ffff984f6e08 offset=108 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
PcDesc(pc=0x0000ffff984f6e10 offset=110 bits=1):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
PcDesc(pc=0x0000ffff984f6e28 offset=128 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
PcDesc(pc=0x0000ffff984f6e34 offset=134 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[0],double
    - @2: reg rfp [58],oop
PcDesc(pc=0x0000ffff984f6e4c offset=14c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
PcDesc(pc=0x0000ffff984f6e58 offset=158 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],int
PcDesc(pc=0x0000ffff984f6e70 offset=170 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
PcDesc(pc=0x0000ffff984f6e7c offset=17c bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[0],double
    - @2: nullptr
PcDesc(pc=0x0000ffff984f6e94 offset=194 bits=0):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
PcDesc(pc=0x0000ffff984f6f59 offset=259 bits=0):
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
oop maps:ImmutableOopMapSet contains 5 OopMaps

ImmutableOopMap {rfp=Oop } pc offsets: 240 
ImmutableOopMap {} pc offsets: 272 
ImmutableOopMap {rfp=Oop } pc offsets: 308 
ImmutableOopMap {} pc offsets: 344 380 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
scopes:
ScopeDesc(pc=0x0000ffff984f6d78 offset=78):
   TestZGCSpillingAtLoadBarrierStub::test_double@-1 (line 40)
ScopeDesc(pc=0x0000ffff984f6d84 offset=84):
   TestZGCSpillingAtLoadBarrierStub::test_double@1 (line 40)
ScopeDesc(pc=0x0000ffff984f6d98 offset=98):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
ScopeDesc(pc=0x0000ffff984f6da8 offset=a8):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
ScopeDesc(pc=0x0000ffff984f6dbc offset=bc):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
ScopeDesc(pc=0x0000ffff984f6dc4 offset=c4):
   TestZGCSpillingAtLoadBarrierStub::test_double@20 (line 42)
ScopeDesc(pc=0x0000ffff984f6df0 offset=f0):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: 0
    - l4: stack[8],double
    - l5: empty
   Expression stack
    - @0: reg rfp [58],oop
    - @1: stack[0]
ScopeDesc(pc=0x0000ffff984f6e08 offset=108):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
ScopeDesc(pc=0x0000ffff984f6e10 offset=110):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)  reexecute=true
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
ScopeDesc(pc=0x0000ffff984f6e28 offset=128):
   TestZGCSpillingAtLoadBarrierStub::test_double@6 (line 41)
ScopeDesc(pc=0x0000ffff984f6e34 offset=134):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[0],double
    - @2: reg rfp [58],oop
ScopeDesc(pc=0x0000ffff984f6e4c offset=14c):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
ScopeDesc(pc=0x0000ffff984f6e58 offset=158):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: nullptr
    - @1: reg rfp [58],int
ScopeDesc(pc=0x0000ffff984f6e70 offset=170):
   TestZGCSpillingAtLoadBarrierStub::test_double@5 (line 41)
ScopeDesc(pc=0x0000ffff984f6e7c offset=17c):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
   Locals
    - l0: empty
    - l1: empty
    - l2: empty
    - l3: empty
    - l4: empty
    - l5: empty
   Expression stack
    - @0: 0
    - @1: stack[0],double
    - @2: nullptr
ScopeDesc(pc=0x0000ffff984f6e94 offset=194):
   TestZGCSpillingAtLoadBarrierStub::test_double@14 (line 42)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
relocations:
         @0x0000ffff984f6c80: 3005
relocInfo@0x0000ffff984f6c80 [type=6(runtime_call) addr=0x0000ffff984f6d14 offset=20] | [destination=0x0000ffff97c90ec0]
         @0x0000ffff984f6c82: 7c04aece431c0000ffff380a
relocInfo@0x0000ffff984f6c8c [type=7(external_word) addr=0x0000ffff984f6d3c offset=40 data={aece431c0000ffff}] | [target=0x0000ffffaece431c]
         @0x0000ffff984f6c8e: 7c04b0903ff80000ffff3806
relocInfo@0x0000ffff984f6c98 [type=7(external_word) addr=0x0000ffff984f6d54 offset=24 data={b0903ff80000ffff}] | [target=0x0000ffffb0903ff8]
         @0x0000ffff984f6c9a: 900f
relocInfo@0x0000ffff984f6c9a [type=18(barrier) addr=0x0000ffff984f6d90 offset=60]
         @0x0000ffff984f6c9c: 9004
relocInfo@0x0000ffff984f6c9c [type=18(barrier) addr=0x0000ffff984f6da0 offset=16]
         @0x0000ffff984f6c9e: 78026003
relocInfo@0x0000ffff984f6ca0 [type=12(metadata) addr=0x0000ffff984f6dac offset=12 data=2] | [metadata_addr=0x0000ffff984f6f68 *=0x000000fc01001660 offset=0]metadata_value=0x000000fc01001660: 'InnerDouble'
         @0x0000ffff984f6ca2: 5808
relocInfo@0x0000ffff984f6ca2 [type=11(poll_return) addr=0x0000ffff984f6dcc offset=32]
         @0x0000ffff984f6ca4: 3008
relocInfo@0x0000ffff984f6ca4 [type=6(runtime_call) addr=0x0000ffff984f6dec offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6ca6: 8001
relocInfo@0x0000ffff984f6ca6 [type=16(post_call_nop) addr=0x0000ffff984f6df0 offset=4]
         @0x0000ffff984f6ca8: 3007
relocInfo@0x0000ffff984f6ca8 [type=6(runtime_call) addr=0x0000ffff984f6e0c offset=28] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6caa: 8001
relocInfo@0x0000ffff984f6caa [type=16(post_call_nop) addr=0x0000ffff984f6e10 offset=4]
         @0x0000ffff984f6cac: 3008
relocInfo@0x0000ffff984f6cac [type=6(runtime_call) addr=0x0000ffff984f6e30 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6cae: 8001
relocInfo@0x0000ffff984f6cae [type=16(post_call_nop) addr=0x0000ffff984f6e34 offset=4]
         @0x0000ffff984f6cb0: 3008
relocInfo@0x0000ffff984f6cb0 [type=6(runtime_call) addr=0x0000ffff984f6e54 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6cb2: 8001
relocInfo@0x0000ffff984f6cb2 [type=16(post_call_nop) addr=0x0000ffff984f6e58 offset=4]
         @0x0000ffff984f6cb4: 3008
relocInfo@0x0000ffff984f6cb4 [type=6(runtime_call) addr=0x0000ffff984f6e78 offset=32] | [destination=0x0000ffff97c98440]
         @0x0000ffff984f6cb6: 8001
relocInfo@0x0000ffff984f6cb6 [type=16(post_call_nop) addr=0x0000ffff984f6e7c offset=4]
         @0x0000ffff984f6cb8: 784c4020
relocInfo@0x0000ffff984f6cba [type=8(internal_word) addr=0x0000ffff984f6efc offset=128 data=76] | [target=0x0000ffff984f6dcc]
         @0x0000ffff984f6cbc: 3002
relocInfo@0x0000ffff984f6cbc [type=6(runtime_call) addr=0x0000ffff984f6f04 offset=8] | [destination=0x0000ffff97c97ac0]
         @0x0000ffff984f6cbe: 3003
relocInfo@0x0000ffff984f6cbe [type=6(runtime_call) addr=0x0000ffff984f6f10 offset=12] | [destination=0x0000ffff97c263c0]
         @0x0000ffff984f6cc0: 8805
relocInfo@0x0000ffff984f6cc0 [type=17(entry_guard) addr=0x0000ffff984f6f24 offset=20]
         @0x0000ffff984f6cc2: 0001
relocInfo@0x0000ffff984f6cc2 [type=0(none) addr=0x0000ffff984f6f28 offset=4]
         @0x0000ffff984f6cc4: 7c01ffa26800
relocInfo@0x0000ffff984f6cc8 [type=13(trampoline_stub) addr=0x0000ffff984f6f28 offset=0 data=-94] | [trampoline owner=0x0000ffff984f6e78]
         @0x0000ffff984f6cca: 7c01ffab6800
relocInfo@0x0000ffff984f6cce [type=13(trampoline_stub) addr=0x0000ffff984f6f28 offset=0 data=-85] | [trampoline owner=0x0000ffff984f6e54]
         @0x0000ffff984f6cd0: 7c01ffb46800
relocInfo@0x0000ffff984f6cd4 [type=13(trampoline_stub) addr=0x0000ffff984f6f28 offset=0 data=-76] | [trampoline owner=0x0000ffff984f6e30]
         @0x0000ffff984f6cd6: 7c01ffbd6800
relocInfo@0x0000ffff984f6cda [type=13(trampoline_stub) addr=0x0000ffff984f6f28 offset=0 data=-67] | [trampoline owner=0x0000ffff984f6e0c]
         @0x0000ffff984f6cdc: 7c01ffc56800
relocInfo@0x0000ffff984f6ce0 [type=13(trampoline_stub) addr=0x0000ffff984f6f28 offset=0 data=-59] | [trampoline owner=0x0000ffff984f6dec]
         @0x0000ffff984f6ce2: 3004
relocInfo@0x0000ffff984f6ce2 [type=6(runtime_call) addr=0x0000ffff984f6f38 offset=16] | [destination=0x0000ffff97d576c0]
         @0x0000ffff984f6ce4: 3004
relocInfo@0x0000ffff984f6ce4 [type=6(runtime_call) addr=0x0000ffff984f6f48 offset=16] | [destination=0x0000ffff97c97dc0]
         @0x0000ffff984f6ce6: 0000
relocInfo@0x0000ffff984f6ce6 [type=0(none) addr=0x0000ffff984f6f48 offset=0]
         @0x0000ffff984f6ce8: 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dependencies:
Dependency of type evol_method
  method  = {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
Dependency of type leaf_type
  context = InnerDouble
   [nmethod<=klass]InnerDouble
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ExceptionHandlerTable (size = 0 bytes)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ImplicitExceptionTable (size = 2 entries, 20 bytes):
{
   < 0x0000ffff984f6d78, 0x0000ffff984f6e4c > < 0x0000ffff984f6da8, 0x0000ffff984f6e70 > 
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded oops:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000080000078ce8 a 'jdk/internal/loader/ClassLoaders$AppClassLoader'{0x0000080000078ce8}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Recorded metadata:
#0: 0x0000000000000000 nullptr-oop
#1: 0x0000fff928401b48 {method} {0x0000fff928401b48} 'test_double' '([LOuter;I)D' in 'TestZGCSpillingAtLoadBarrierStub'
#2: 0x000000fc01001660 'InnerDouble'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
------------------------------------------------------------------------
TestZGCSpillingAtLoadBarrierStub::test_float([LOuter;I)F
  interpreter_invocation_count:        5376
  invocation_counter:                  5376
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 496 bytes

   0 iload_2
   1 i2f
   2 fstore_3
   3 aload_1
   4 iload_2
   5 aaload
   6 fast_agetfield 7 <Outer.field:LInner;> 
   9 astore #4
  11 fload_3
  12 aload #4
  14 checkcast 13 <InnerFloat>
  0    bci: 14   ReceiverTypeData   count(0) entries(1)
                                    'InnerFloat'(5120 1.00)
  17 fast_fgetfield 15 <InnerFloat.data:F> 
  20 fadd
  21 freturn
------------------------------------------------------------------------
TestZGCSpillingAtLoadBarrierStub::test_double([LOuter;I)D
  interpreter_invocation_count:        5376
  invocation_counter:                  5376
  backedge_counter:                       0
  decompile_count:                        0
  mdo size: 496 bytes

   0 iload_2
   1 i2d
   2 dstore_3
   3 aload_1
   4 iload_2
   5 aaload
   6 fast_agetfield 7 <Outer.field:LInner;> 
   9 astore #5
  11 dload_3
  12 aload #5
  14 checkcast 19 <InnerDouble>
  0    bci: 14   ReceiverTypeData   count(0) entries(1)
                                    'InnerDouble'(5120 1.00)
  17 fast_dgetfield 21 <InnerDouble.data:D> 
  20 dadd
  21 dreturn
------------------------------------------------------------------------
TestZGCSpillingAtLoadBarrierStub::test_float_vector_PREFERRED([F[LOuter;)V
  interpreter_invocation_count:        1151
  invocation_counter:                  1151
  backedge_counter:                   18416
  decompile_count:                        0
  mdo size: 776 bytes

   0 getstatic 63 <jdk/incubator/vector/FloatVector.SPECIES_PREFERRED:Ljdk/incubator/vector/VectorSpecies;> 
   3 astore_3
   4 aload_3
   5 invokestatic 30 <jdk/incubator/vector/FloatVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;> 
  0    bci: 5    CounterData        count(1023)
   8 astore #4
  10 iconst_0
  11 istore #5
  13 fast_iload #5
  15 aload_1
  16 arraylength
  17 if_icmpge 85
  16   bci: 17   BranchData         taken(1023) displacement(312)
                                    not taken(16368)
  20 aload_3
  21 aload_1
  22 fast_iload #5
  24 invokestatic 34 <jdk/incubator/vector/FloatVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;> 
  48   bci: 24   CounterData        count(16368)
  27 astore #6
  29 aload_2
  30 getstatic 38 <TestZGCSpillingAtLoadBarrierStub.random:Ljava/util/random/RandomGenerator;> 
  33 sipush 1024
  36 invokeinterface 44 <java/util/random/RandomGenerator.nextInt(I)I> 
  64   bci: 36   VirtualCallData    count(0) entries(1)
                                    'jdk/random/L32X64MixRandom'(16368 1.00)
  41 aaload
  42 fast_agetfield 7 <Outer.field:LInner;> 
  45 astore #7
  47 aload #7
  49 checkcast 13 <InnerFloat>
  112  bci: 49   ReceiverTypeData   count(0) entries(1)
                                    'InnerFloat'(16368 1.00)
  52 fast_fgetfield 15 <InnerFloat.data:F> 
  55 fstore #8
  57 aload #4
  59 aload #6
  61 invokevirtual 50 <jdk/incubator/vector/FloatVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;> 
  160  bci: 61   VirtualCallData    count(16368) entries(0)
  64 fload #8
  66 invokevirtual 54 <jdk/incubator/vector/FloatVector.add(F)Ljdk/incubator/vector/FloatVector;> 
  208  bci: 66   VirtualCallData    count(16368) entries(0)
  69 astore #4
  71 fast_iload #5
  73 aload_3
  74 invokeinterface 57 <jdk/incubator/vector/VectorSpecies.length()I> 
  256  bci: 74   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/FloatVector$FloatSpecies'(16368 1.00)
  79 iadd
  80 istore #5
  82 goto 13
  304  bci: 82   JumpData           taken(16368) displacement(-288)
  85 return
------------------------------------------------------------------------
TestZGCSpillingAtLoadBarrierStub::test_float_vector_128([F[LOuter;)V
  interpreter_invocation_count:         260
  invocation_counter:                   260
  backedge_counter:                   66561
  decompile_count:                        0
  mdo size: 776 bytes

   0 getstatic 24 <jdk/incubator/vector/FloatVector.SPECIES_128:Ljdk/incubator/vector/VectorSpecies;> 
   3 astore_3
   4 aload_3
   5 invokestatic 30 <jdk/incubator/vector/FloatVector.zero(Ljdk/incubator/vector/VectorSpecies;)Ljdk/incubator/vector/FloatVector;> 
  0    bci: 5    CounterData        count(160)
   8 astore #4
  10 iconst_0
  11 istore #5
  13 fast_iload #5
  15 aload_1
  16 arraylength
  17 if_icmpge 85
  16   bci: 17   BranchData         taken(160) displacement(312)
                                    not taken(40960)
  20 aload_3
  21 aload_1
  22 fast_iload #5
  24 invokestatic 34 <jdk/incubator/vector/FloatVector.fromArray(Ljdk/incubator/vector/VectorSpecies;[FI)Ljdk/incubator/vector/FloatVector;> 
  48   bci: 24   CounterData        count(40960)
  27 astore #6
  29 aload_2
  30 getstatic 38 <TestZGCSpillingAtLoadBarrierStub.random:Ljava/util/random/RandomGenerator;> 
  33 sipush 1024
  36 invokeinterface 44 <java/util/random/RandomGenerator.nextInt(I)I> 
  64   bci: 36   VirtualCallData    count(0) entries(1)
                                    'jdk/random/L32X64MixRandom'(40960 1.00)
  41 aaload
  42 fast_agetfield 7 <Outer.field:LInner;> 
  45 astore #7
  47 aload #7
  49 checkcast 13 <InnerFloat>
  112  bci: 49   ReceiverTypeData   count(0) entries(1)
                                    'InnerFloat'(40960 1.00)
  52 fast_fgetfield 15 <InnerFloat.data:F> 
  55 fstore #8
  57 aload #4
  59 aload #6
  61 invokevirtual 50 <jdk/incubator/vector/FloatVector.add(Ljdk/incubator/vector/Vector;)Ljdk/incubator/vector/FloatVector;> 
  160  bci: 61   VirtualCallData    count(40960) entries(0)
  64 fload #8
  66 invokevirtual 54 <jdk/incubator/vector/FloatVector.add(F)Ljdk/incubator/vector/FloatVector;> 
  208  bci: 66   VirtualCallData    count(40960) entries(0)
  69 astore #4
  71 fast_iload #5
  73 aload_3
  74 invokeinterface 57 <jdk/incubator/vector/VectorSpecies.length()I> 
  256  bci: 74   VirtualCallData    count(0) entries(1)
                                    'jdk/incubator/vector/FloatVector$FloatSpecies'(40960 1.00)
  79 iadd
  80 istore #5
  82 goto 13
  304  bci: 82   JumpData           taken(40960) displacement(-288)
  85 return
------------------------------------------------------------------------
Total MDO size: 2544 bytes
